{
  "h1": "リファレンス",
  "reference-search": "リファレンスを検索",
  "reference-description1": "お探しのものが見つからない場合は、以下を確認することをお勧めします。",
  "reference-description3": "また、リファレンスのオフライン版をダウンロードすることもできます。",
  "reference-contribute2": "お知らせください。",
  "reference-error1": "エラーまたはタイポを見つけましたか？",
  "reference-error3": "編集してください。",
  "reference-error5": "そしてプルリクエストを出してください！",
  "reference-deprecated1": "推奨されません:",
  "reference-deprecated2": "は推奨されません。将来のバージョンの p5 にて削除されます。",
  "reference-p5sound-requires": "この関数を使うためには p5.sound ライブラリのインクルードが必要です。あなたの index.html ファイルの head 内に下記を追加してください:",
  "reference-example": "例",
  "reference-description": "説明",
  "reference-extends": "継承",
  "reference-parameters": "パラメーター",
  "reference-syntax": "構文",
  "reference-returns": "戻り値",
  "Environment": "環境",
  "Color": "色",
  "Color Conversion": "色変換",
  "Creating & Reading": "作成と読み取り",
  "Setting": "設定",
  "Shape": "形状",
  "2D Primitives": "2D プリミティブ",
  "Attributes": "属性",
  "Curves": "曲線",
  "Vertex": "頂点",
  "Constants": "定数",
  "Structure": "構造",
  "DOM": "DOM",
  "Rendering": "レンダリング",
  "Foundation": "基礎",
  "Transform": "変形",
  "Data": "データ",
  "LocalStorage": "ローカルストレージ",
  "Dictionary": "辞書",
  "Events": "イベント",
  "Acceleration": "加速度",
  "Keyboard": "キーボード",
  "Mouse": "マウス",
  "Touch": "タッチ",
  "Image": "画像",
  "Loading & Displaying": "読み込みと表示",
  "Pixels": "ピクセル",
  "IO": "入出力",
  "Input": "入力",
  "Output": "出力",
  "Table": "表",
  "Math": "数学",
  "Calculation": "計算",
  "Vector": "ベクトル",
  "Noise": "ノイズ",
  "Random": "ランダム",
  "Trigonometry": "三角関数",
  "Typography": "タイポグラフィ",
  "Array Functions": "配列関数",
  "Conversion": "変換",
  "String Functions": "文字列関数",
  "Time & Date": "時間と日付",
  "3D Primitives": "3D プリミティブ",
  "3D": "3D",
  "Interaction": "インタラクション",
  "Lights": "ライト",
  "3D Models": "3D モデル",
  "Material": "マテリアル",
  "Camera": "カメラ",
  "p5": {
    "description": [
      "これは p5 インスタンスのコンストラクターです。",
      "p5 インスタンスには、p5 スケッチに関連するすべてのプロパティとメソッドが含まれています。入力されたスケッチクロージャーを受け取り、生成された p5 キャンバスをノードにアタッチするためのオプションのノードパラメーターを取ることもできます。スケッチクロージャーは、新しく作成された p5 インスタンスを唯一の引数として受け取り、スケッチの実行に必要な <a href=\"#/p5/preload\">preload()</a>、<a href=\"#/p5/setup\">setup()</a>、および/または <a href=\"#/p5/draw\">draw()</a> プロパティを設定することもできます。",
      "p5 スケッチは、「グローバル」モードまたは「インスタンス」モードで実行できます。「グローバル」 - すべてのプロパティとメソッドがウィンドウにアタッチされます「インスタンス」 - すべてのプロパティとメソッドがこの p5 オブジェクトにバインドされます。"
    ],
    "returns": "p5: p5 インスタンス",
    "params": {
      "sketch": "Function: 与えられた p5 インスタンスにオプションで <a href=\"#/p5/preload\">preload()</a>、<a href=\"#/p5/setup\">setup()</a>、および/または <a href=\"#/p5/draw\">draw()</a> プロパティを設定できるクロージャー",
      "node": "HTMLElement: (オプション) キャンバスをアタッチする要素"
    },
    "describe": {
      "description": [
        "キャンバスにスクリーンリーダー対応の説明を作成します。最初のパラメーターは、キャンバスの説明を示す文字列である必要があります。2つ目のパラメーターはオプションです。指定された場合、説明の表示方法が決まります。",
        "<code class=\"language-javascript\">describe(text, LABEL)</code> は、キャンバスに隣接する div 内にある <a href=\"https://en.wikipedia.org/wiki/Museum_label\" target=\"_blank\">キャプションパネル</a> として、すべてのユーザーに説明を表示します。CSS で好みのスタイルに変更できます。",
        "<code class=\"language-javascript\">describe(text, FALLBACK)</code> は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブ DOM</a> で、スクリーンリーダーユーザーのみが説明を利用できるようにします。2つ目のパラメーターが指定されていない場合、デフォルトで説明はスクリーンリーダーユーザーにのみ利用可能です。"
      ],
      "params": {
        "text": "String: キャンバスの説明",
        "display": "Constant: (オプション) LABEL または FALLBACK のいずれか"
      }
    },
    "describeElement": {
      "description": [
        "この関数は、キャンバス内の要素（一緒に意味を作り出す形状または形状のグループ）に対してスクリーンリーダー対応の説明を作成します。最初のパラメーターは要素の名前である必要があります。2つ目のパラメーターは、要素の説明を示す文字列である必要があります。3つ目のパラメーターはオプションです。指定された場合、要素の説明の表示方法が決まります。",
        "<code class=\"language-javascript\">describeElement(name, text, LABEL)</code> は、キャンバスに隣接する div 内にある <a href=\"https://en.wikipedia.org/wiki/Museum_label\" target=\"_blank\">キャプションパネル</a> として、すべてのユーザーに要素の説明を表示します。CSS で好みのスタイルに変更できます。",
        "<code class=\"language-javascript\">describeElement(name, text, FALLBACK)</code> は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブ DOM</a> で、スクリーンリーダーユーザーのみが要素の説明を利用できるようにします。2つ目のパラメーターが指定されていない場合、デフォルトで要素の説明はスクリーンリーダーユーザーにのみ利用可能です。"
      ],
      "params": {
        "name": "String: 要素の名前",
        "text": "String: 要素の説明",
        "display": "Constant: (オプション) LABEL または FALLBACK のいずれか"
      }
    },
    "textOutput": {
      "description": [
        "<code class=\"language-javascript\">textOutput()</code> は、キャンバス上に存在する形状を説明するスクリーンリーダー対応の出力を作成します。キャンバスの一般的な説明には、キャンバスのサイズ、キャンバスの色、キャンバス内の要素の数（例:「あなたの出力は、400 x 400ピクセルのラベンダーブルーのキャンバスで、以下の4つの形状が含まれています:」）が含まれます。この説明の後に、各形状の色、位置、面積が説明された形状のリストが続きます（例:「キャンバスの1%を覆う左上のオレンジ色の楕円」）。各要素を選択すると詳細が表示され、要素のテーブルも提供されます。このテーブルでは、形状、色、位置、座標、面積が説明されています（例:「オレンジ色の楕円 位置 = 左上 面積 = 2」）。",
        "<code class=\"language-javascript\">textOutput()</code> および <code class=\"language-javascript\">textOutput(FALLBACK)</code> は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブ DOM</a> でスクリーンリーダーにアクセス可能な出力を利用可能にします。<code class=\"language-javascript\">textOutput(LABEL)</code> は、キャンバスに隣接する出力が含まれる追加の div を作成しますが、これはコーディング時にキャンバスのサブ DOM 外に出力を表示したい非スクリーンリーダーユーザーにとって便利です。ただし、LABEL を使用すると、スクリーンリーダーユーザーにとって不要な冗長性が生じます。スケッチの開発プロセスの一部としてのみ LABEL を使用し、公開またはスクリーンリーダーユーザーと共有する前に削除することをお勧めします。"
      ],
      "params": {
        "display": "Constant: (オプション) FALLBACK または LABEL のいずれか"
      }
    },
    "gridOutput": {
      "description": [
        "<code class=\"language-javascript\">gridOutput()</code> は、キャンバスの内容を、各形状の空間的な位置にもとづいたグリッド（html テーブル）の形でレイアウトします。テーブル出力の前に、キャンバスの簡単な説明が利用可能です。この説明には、背景の色、キャンバスのサイズ、オブジェクトの数、オブジェクトの種類（例:「ラベンダーブルーのキャンバスは200 x 200で、3つの楕円とひとつの長方形が含まれています」）が含まれます。グリッドは空間的にコンテンツを記述し、各要素はその位置に応じてテーブルのセルに配置されます。各セル内の要素には、その要素の色と形状の種類が利用可能です（例:「オレンジ色の楕円」）。これらの説明は個別に選択して詳細を取得できます。形状、色、位置、面積が説明された要素のリスト（例:「オレンジ色の楕円 位置 = 左上 面積 = 1%」）も利用可能です。",
        "<code class=\"language-javascript\">gridOutput()</code> および <code class=\"language-javascript\">gridOutput(FALLBACK)</code> は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブ DOM</a> でスクリーンリーダーにアクセス可能な出力を利用可能にします。<code class=\"language-javascript\">gridOutput(LABEL)</code> は、キャンバスに隣接する出力が含まれる追加の div を作成しますが、これはコーディング時にキャンバスのサブ DOM 外に出力を表示したい非スクリーンリーダーユーザーにとって便利です。ただし、LABEL を使用すると、スクリーンリーダーユーザーにとって不要な冗長性が生じます。スケッチの開発プロセスの一部としてのみ LABEL を使用し、公開またはスクリーンリーダーユーザーと共有する前に削除することをお勧めします。"
      ],
      "params": {
        "display": "Constant: (オプション) FALLBACK または LABEL のいずれか"
      }
    },
    "alpha": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列からアルファ値(透明度)の値を抽出します。"
      ],
      "returns": "Number: アルファ値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "blue": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から青の値を抽出します。"
      ],
      "returns": "Number: 青の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "brightness": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から HSB 明度値を抽出します。"
      ],
      "returns": "Number: 明度値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "color": {
      "description": [
        "<a href=\"#/p5/p5.Color\">p5.Color</a> オブジェクトを作成します。デフォルトでは、パラメーターはRGB値として解釈されます。 <code>color(255, 204, 0)</code> を呼び出すと、明るい黄色の色が返されます。これらのパラメーターが解釈される方法は、<a href=\"#/p5/colorMode\">colorMode()</a> 関数で変更できます。",
        "1つのパラメーターをもつ<code>color()</code>のバージョンは、その値を2つの方法で解釈します。パラメーターが数字の場合、グレースケールの値として解釈されます。パラメーターが文字列の場合、CSS カラー文字列として解釈されます。",
        "2つのパラメーターをもつ<code>color()</code>のバージョンは、最初のものをグレースケールの値として解釈します。2つ目のパラメーターは、アルファ（透明度）の値を設定します。",
        "3つのパラメーターをもつ<code>color()</code>のバージョンは、それらを RGB、HSB、HSL の色として解釈します。現在の<code>colorMode()</code>に依存します。",
        "4つのパラメーターをもつ<code>color()</code>のバージョンは、それらを RGBA、HSBA、HSLA の色として解釈します。現在の<code>colorMode()</code>に依存します。最後のパラメーターは、アルファ（透明度）の値を設定します。"
      ],
      "returns": "p5.Color: 結果の色",
      "params": {
        "gray": "Number: 白と黒の間の値を指定する数値。",
        "alpha": "Number: (オプション) 現在のカラーモードの色範囲に対するアルファ値（デフォルトは0〜255）",
        "v1": "Number: 現在のカラーモードの色範囲に対する赤または色相値",
        "v2": "Number: 現在のカラーモードの色範囲に対する緑または彩度値",
        "v3": "Number: 現在のカラーモードの色範囲に対する青または明度値",
        "value": "String: カラー文字列",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color"
      }
    },
    "green": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から緑の値を抽出します。"
      ],
      "returns": "Number: 緑の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "hue": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から色相値を抽出します。",
        "Hue は HSB と HSL の両方に存在します。これは色相環上の色の位置を表しています。デフォルトでは、この関数は HSL に正規化された色相を返します。もし <a href=\"#/colorMode\">colorMode()</a> が HSB に設定されている場合は、 HSB に正規化された色相を返します。"
      ],
      "returns": "Number: 色相",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "lerpColor": {
      "description": [
        "2つの色をブレンドして、それらの間の第三の色を見つけます。 <code>amt</code> パラメーターは、2つの値の間で補間する量を指定します。0 は最初の色と等しく、0.1 は最初の色に非常に近く、0.5 は2つの色の半分で、以降、同様です。負の数は 0 に設定されます。1 より大きい数は 1 に設定されます。これは<a href=\"#/lerp\">lerp</a>の動作とは異なりますが、範囲外の数値が奇妙で予期しない色を生成しないようにするためです。",
        "色がどのように補間されるかは、現在の<a href=\"#/colorMode\">colorMode()</a>に依存します。"
      ],
      "returns": "p5.Color: 補間された色",
      "params": {
        "c1": "p5.Color: この色から補間",
        "c2": "p5.Color: この色へ補間",
        "amt": "Number: 0から1までの数値"
      }
    },
    "lightness": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列からの HSL 輝度値を抽出します。"
      ],
      "returns": "Number: 輝度",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "red": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から赤の値を抽出します。"
      ],
      "returns": "Number: 赤の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "saturation": {
      "description": [
        "<a href=\"#/p5.Color\">p5.Color</a>オブジェクト、色成分の配列、または CSS カラー文字列から彩度の値を抽出します。",
        "HSB と HSL では、飽和度が異なる尺度でスケールされます。デフォルトでは、この関数は HSL の飽和度を返します。<a href=\"#/colorMode\">colorMode()</a> が HSB に設定されている場合、 HSB の飽和度を返します。"
      ],
      "returns": "Number: 彩度の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、色成分の配列、または CSS カラー文字列"
      }
    },
    "background": {
      "description": [
        "<a href=\"#/p5/background\">background()</a> 関数は、p5.js キャンバスの背景に使用される色を設定します。デフォルトの背景は透明です。この関数は通常、<a href=\"#/p5/draw\">draw()</a> 内で各フレームの開始時にディスプレイウィンドウをクリアするために使用されますが、<a href=\"#/p5/setup\">setup()</a> 内でアニメーションの最初のフレームの背景を設定するために使用されることもありますし、背景を一度だけ設定する必要がある場合にも使用できます。",
        "色は、現在の <a href=\"#/p5/colorMode\">colorMode</a> に応じて、RGB、HSB、HSL カラーで指定されます。（デフォルトのカラースペースは RGB で、各値の範囲は0から255です）。デフォルトでは、アルファの範囲も0から255です。",
        "単一の文字列引数が提供された場合、RGB、RGBA、および16進数の CSS カラー文字列およびすべての名前付きカラー文字列がサポートされます。この場合、2番目の引数としてのアルファ数値はサポートされず、RGBA 形式を使用する必要があります。",
        "<a href=\"#/p5.Color\">p5.Color</a> オブジェクトを渡して背景色を設定することもできます。",
        "また、<a href=\"#/p5.Image\">p5.Image</a> を渡して背景画像を設定することもできます。",

        "キャンバスの背景に使用される色を設定します。デフォルトでは、背景は透明です。この関数は通常、<a href=\"#/p5/draw\">draw()</a>内で使用され、各フレームの開始時に表示ウィンドウをクリアするために使用されます。また、<a href=\"#/p5/setup\">setup()</a>内で使用して、アニメーションの最初のフレームの背景を設定することもできます。",
        "<code>background()</code>のパラメーターが1つあるバージョンは、その値を4つの方法で解釈します。パラメーターが数字の場合、それはグレースケール値と解釈されます。パラメーターが文字列の場合、それは CSS カラー文字列と解釈されます。RGB、RGBA、HSL、HSLA、16進数、および名前付き色文字列がサポートされています。パラメーターが<a href=\"#/p5.Color\">p5.Color</a>オブジェクトの場合、それは背景色として使用されます。パラメーターが<a href=\"#/p5.Image\">p5.Image</a>オブジェクトの場合、それは背景画像として使用されます。",
        "<code>background()</code>のパラメーターが2つあるバージョンは、最初のパラメーターをグレースケール値と解釈します。2番目のパラメーターはアルファ（透明度）値を設定します。",
        "<code>background()</code>のパラメーターが3つあるバージョンは、それらを RGB、HSB、または HSL 色と解釈します。これは現在の<a href=\"#/p5/colorMode\">colorMode()</a>に依存します。デフォルトでは、色は RGB 値で指定されます。 background(255,204,0) を呼び出すと、背景が鮮やかな黄色になります。"
      ],
      "params": {
        "color": "p5.Color: <a href=\"#/p5/color\">color()</a> 関数で作成された任意の値",
        "colorstring": "String: カラー文字列、対応する形式は次のとおりです: 整数 rgb() または rgba()、パーセンテージ、rgb() または rgba()、3桁の16進数、6桁の16進数",
        "a": "Number: (オプション) 現在のカラー範囲に対する背景の不透明度（デフォルトは0-255）",
        "gray": "Number: 白と黒の間の値を指定",
        "v1": "Number: カラーモードが RGB の場合:赤の値、カラーモードが HSB の場合:色相の値",
        "v2": "Number: カラーモードが RGB の場合:緑の値、カラーモードが HSB の場合:彩度の値",
        "v3": "Number: カラーモードが RGB の場合:青の値、カラーモードが HSB の場合:明るさの値",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "image": "p5.Image: 背景として設定する <a href=\"#/p5/loadImage\">loadImage()</a> または <a href=\"#/p5/createImage\">createImage()</a> で作成された画像（スケッチウィンドウと同じサイズである必要があります）"
      }
    },
    "clear": {
      "description": [
        "キャンバス上のピクセルをクリアします。この関数はすべてのピクセルを100%透明にします。<code>clear()</code>を呼び出しても、<a href=\"#/p5/createGraphics\">createGraphics()</a>、<a href=\"#/p5/createVideo\">createVideo()</a>、<a href=\"#/p5/createImg\">createImg()</a>などの<code>createX()</code>関数によって作成されたオブジェクトはクリアされません。これらのオブジェクトはclear()を呼び出した後も変更されず、再描画することができます。",
        "WebGL モードでは、この関数を使って画面を特定の色にクリアすることもできます。4つの数値パラメーターを正規化された RGBA カラー値として解釈します。また、深度バッファもクリアします。もし WebGL レンダラを使用していなければ、これらのパラメーターは影響を及ぼしません。"
      ],
      "params": {
        "r": "Number: 正規化された赤の値。",
        "g": "Number: 正規化された緑の値。",
        "b": "Number: 正規化された青の値。",
        "a": "Number: 正規化されたアルファの値。"
      }
    },
    "colorMode": {
      "description": [
        "p5.jsが色データを解釈する方法を変更します。デフォルトでは、<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/background\">background()</a>、<a href=\"#/p5/color\">color()</a>の数値パラメーターは、RGBカラーモデルを使用して 0 から 255 までの値で定義されます。これは<code>colorMode(RGB, 255)</code>を呼び出すことと同等です。純粋な赤はこのモデルでは <code>color(255, 0, 0)</code> です。",
        "<code>colorMode(RGB, 100)</code> を呼び出すと、色が0から100までの RGB カラー値として解釈されます。純粋な赤はこのモデルでは<code>color(100, 0, 0)</code>です。",
        "<code>colorMode(HSB)</code> または <code>colorMode(HSL)</code> を呼び出すと、RGB の代わりに HSB または HSL システムに切り替わります。",
        "<a href=\"#/p5.Color\">p5.Color</a> オブジェクトは、作成時のモードを記憶しています。モードを変更してもその外観には影響しません。"
      ],
      "params": {
        "mode": "Constant: RGB、HSB、または HSL のいずれか。それぞれ、赤/緑/青と色相/彩度/明度（または輝度）に対応します。",
        "max": "Number: (オプション) すべての値の範囲",
        "max1": "Number: 現在のカラーモードに対応する、赤または色相の範囲",
        "max2": "Number: 現在のカラーモードに対応する、緑または彩度の範囲",
        "max3": "Number: 現在のカラーモードに対応する、青または明度/輝度の範囲",
        "maxA": "Number: (オプション) アルファの範囲"
      }
    },
    "fill": {
      "description": [
        "図形の塗りつぶし色を設定します。<code>fill(255, 165, 0)</code>や<code>fill('orange')</code>を呼び出すと、fill コマンドの後に描かれるすべての形状は、オレンジ色で塗りつぶされます。",
        "1つのパラメーターをもつ<code>fill()</code>のバージョンは、値を3つの方法で解釈します。パラメーターが数値の場合、その値はグレースケール値として解釈されます。もしパラメーターが文字列なら、それは CSS カラー文字列として解釈されます。<a href=\"#/p5.Color\">p5.Color</a>オブジェクトも塗りつぶし色を設定するために提供できます。",
        "3つのパラメーターをもつ<code>fill()</code>のバージョンは、現在の<a href=\"#/p5/colorMode\">colorMode()</a>にもとづいて RGB、HSB、HSL の色としてそれらを解釈します。デフォルトのカラースペースは RGB で、各値の範囲は 0 から 255 までです。"
      ],
      "params": {
        "v1": "Number: カラーモードが RGB の場合:赤の値、カラーモードが HSB の場合:色相の値",
        "v2": "Number: カラーモードが RGB の場合:緑の値、カラーモードが HSB の場合:彩度の値",
        "v3": "Number: カラーモードが RGB の場合:青の値、カラーモードが HSB の場合:明るさの値",
        "alpha": "Number (オプション)",
        "value": "String: カラー文字列",
        "gray": "Number: グレースケールの値",
        "values": "Number[]: 赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color: 塗りつぶし色"
      }
    },
    "noFill": {
      "description": [
        "ジオメトリの塗りつぶしを無効にします。もし <a href=\"#/p5/noStroke\">noStroke()</a> と <a href=\"#/p5/noFill\">noFill()</a> の両方が呼び出された場合、画面には何も描かれません。"
      ]
    },
    "noStroke": {
      "description": [
        "ストローク（輪郭）の描画を無効にします。<a href=\"#/p5/noStroke\">noStroke()</a> と <a href=\"#/p5/noFill\">noFill()</a> の両方が呼び出されると、画面には何も描画されません。"
      ]
    },
    "stroke": {
      "description": [
        "線や図形の周り枠線を描くために使用される色を設定します。 <code>stroke(255, 165, 0)</code> または <code>stroke('orange')</code> を呼び出すと、その後に描かれたすべての形状はオレンジ色になります。これらのパラメーターの解釈方法は、<a href=\"#/p5/colorMode\">colorMode()</a>関数で変更することができます。",
        "<code>stroke()</code>の1つのパラメーターのバージョンは、値を3つの方法のいずれかで解釈します。 パラメーターが数値の場合、それはグレースケールの値として解釈されます。 パラメーターが文字列の場合、それは CSS カラー文字列として解釈されます。ストロークカラーを設定するために、<a href=\"#/p5.Color\">p5.Color</a>オブジェクトも提供することができます。",
        "<code>stroke()</code>の2つのパラメーターのバージョンは、最初のパラメーターをグレースケールの値として解釈します。 2つ目のパラメーターは、アルファ（透明度）値を設定します。",
        "<code>stroke()</code>の3つのパラメーターのバージョンは、それらを RGB、HSB、HSL の色として解釈します。これは現在の<code>colorMode()</code>に依存します。",
        "<code>stroke()</code>の4つのパラメーターのバージョンは、それらを RGBA、HSBA、HSLA の色として解釈します。これは現在の<code>colorMode()</code>に依存します。 最後のパラメーターはアルファ（透明度）値を設定します。"
      ],
      "params": {
        "v1": "Number: カラーモードが RGB の場合:赤の値、カラーモードが HSB の場合:色相の値",
        "v2": "Number: カラーモードが RGB の場合:緑の値、カラーモードが HSB の場合:彩度の値",
        "v3": "Number: カラーモードが RGB の場合:青の値、カラーモードが HSB の場合:明るさの値",
        "alpha": "Number (オプション)",
        "value": "String: カラー文字列",
        "gray": "Number: グレースケールの値",
        "values": "Number[]: 色の赤、緑、青、アルファ成分を含む配列",
        "color": "p5.Color: ストロークカラー"
      }
    },
    "erase": {
      "description": [
        "<a href=\"#/p5/erase\">erase()</a>の後に続くすべての描画は、キャンバスから減算され、その下のウェブページを明らかにします。消去されたエリアは透明になり、キャンバスの背後のコンテンツを見せることができます。<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/stroke\">stroke()</a> および <a href=\"#/p5/blendMode\">blendMode()</a> は <code>erase()</code>が呼び出されると効果がなくなります。",
        "<code>erase()</code> 関数には2つのオプションのパラメーターがあります。第一のパラメーターは、形の内部による消去の強度を設定します。値が 0 の場合、消去は発生しません。値が 255 の場合、形の内部のコンテンツを完全に消去します。デフォルトの値は 255（全強度）です。",
        "第二のパラメーターは、形のエッジによる消去の強度を設定します。値が 0 の場合、消去は発生しません。値が 255 の場合、形のエッジを完全に消去します。デフォルトの値は 255（全強度）です。",
        "消去効果をキャンセルするには、<a href=\"#/p5/noErase\">noErase()</a>関数を使用します。",
        "<code>erase()</code>は、 <a href=\"#/p5/image\">image()</a> 関数と <a href=\"#/p5/background\">background()</a> 関数で行われる描画には影響しません。"
      ],
      "params": {
        "strengthFill": "Number: (オプション) シェイプ内部の消去の強さを数値（0-255）で指定します。デフォルトは255で、完全に消去されます。",
        "strengthStroke": "Number: (オプション) シェイプのエッジ消去の強さを数値（0-255）で指定します。デフォルは255で、完全に消去されます。"
      }
    },
    "noErase": {
      "description": [
        "<a href=\"#/p5/erase\">erase()</a> で開始された消去を終了します。<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/stroke\">stroke()</a>、および <a href=\"#/p5/blendMode\">blendMode()</a> の設定は、<a href=\"#/p5/erase\">erase()</a> を呼び出す前の状態に戻ります。"
      ]
    },
    "arc": {
      "description": [
        "キャンバスに弧を描きます。弧は<code>x</code>、<code>y</code>、<code>w</code>、<code>h</code>パラメーターで定義された楕円（オーバル）の外側に沿って描かれます。<code>start</code>および<code>stop</code>パラメーターを使用して、弧を描く角度（ラジアン単位）を指定します。弧は常に<code>start</code>から<code>stop</code>まで時計回りに描かれます。弧の楕円の原点は、<a href=\"#/p5/ellipseMode\">ellipseMode()</a>関数で変更することができます。",
        "オプションの<code>mode</code>パラメーターは、弧の塗りつぶしスタイルを決定します。塗りつぶしモードは半円（<code>OPEN</code>）、閉じた半円（<code>CHORD</code>）、または閉じたパイセグメント（<code>PIE</code>）です。"
      ],
      "params": {
        "x": "Number: 円弧の楕円の x 座標",
        "y": "Number: 円弧の楕円の y 座標",
        "w": "Number: デフォルトでの円弧の楕円の幅",
        "h": "Number: デフォルトでの円弧の楕円の高さ",
        "start": "Number: 円弧を開始する角度（ラジアンで指定）",
        "stop": "Number: 円弧を終了する角度（ラジアンで指定）",
        "mode": "Constant: (オプション) 円弧の描画方法を決定するオプションパラメーター。CHORD、PIE、OPEN のいずれか。",
        "detail": "Integer: (オプション) WebGL モード専用のオプションパラメーター。これは、円弧の周囲を構成する頂点の数を指定するためのものです。デフォルト値は25です。細かさが50を超える場合にはストロークを描画しません。"
      }
    },
    "ellipse": {
      "description": [
        "キャンバスに楕円（オーバル）を描きます。幅と高さが等しい楕円は円です。デフォルトでは最初の2つのパラメーターで楕円の中心の位置を設定します。3番目と4番目のパラメーターはそれぞれ形状の幅と高さを設定します。<a href=\"#/p5/ellipseMode\">ellipseMode()</a> 関数で原点を変更できます。",
        "高さが指定されていない場合、幅の値が幅と高さの両方に使用されます。負の高さまたは幅が指定された場合、絶対値が取られます。"
      ],
      "params": {
        "x": "Number: 楕円の中心の x 座標",
        "y": "Number: 楕円の中心の y 座標",
        "w": "Number: 楕円の幅",
        "h": "Number: (オプション) 楕円の高さ",
        "detail": "Integer: (オプション) WebGL モード専用のオプションパラメーター。これは、楕円の周囲を構成する頂点の数を指定するためのものです。デフォルト値は25です。細かさが50を超える場合にはストロークを描画しません。"
      }
    },
    "circle": {
      "description": [
        "キャンバスに円を描きます。円は丸い形です。円の端のすべての点は、その中心から同じ距離にあります。デフォルトでは、最初の2つのパラメーターは円の中心の位置を設定します。3つ目のパラメーターは形状の幅と高さ（直径）を設定します。<a href=\"#/p5/ellipseMode\">ellipseMode()</a>関数で原点を変更することができます。"
      ],
      "params": {
        "x": "Number: 円の中心の x 座標",
        "y": "Number: 円の中心の y 座標",
        "d": "Number: 円の直径。"
      }
    },
    "line": {
      "description": [
        "二点間の直線、つまり一直線を描きます。デフォルトの幅は1ピクセルです。<code>line()</code>の四つのパラメーターをもつバージョンは2Dで線を描きます。線に色をつけるには、<a href=\"#/p5/stroke\">stroke()</a>関数を使用します。その幅を変更するには、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>関数を使用します。 線は塗りつぶすことができませんので、<a href=\"#/p5/fill\">fill()</a>関数は線の色に影響を与えません。",
        "<code>line()</code>の6つのパラメーターをもつバージョンは、線が3D空間に描かれることを可能にします。そのためには、<a href=\"#/p5/createCanvas\">createCanvas()</a>に<code>WEBGL</code>の引数を追加する必要があります。"  
      ],
      "params": {
        "x1": "Number: 最初の点の x 座標",
        "y1": "Number: 最初の点の y 座標",
        "x2": "Number: 2番目の点の x 座標",
        "y2": "Number: 2番目の点の y 座標",
        "z1": "Number: 最初の点の z 座標",
        "z2": "Number: 2番目の点の z 座標"
      }
    },
    "point": {
      "description": [
        "点を描画します。これは空間内の単一の座標です。デフォルトのサイズは1ピクセルです。最初の2つのパラメーターは、それぞれポイントのx座標とy座標です。ポイントに色を付けるには、<a href=\"#/p5/stroke\">stroke()</a>関数を使用します。そのサイズを変更するには、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>関数を使用します。",
        "3つのパラメーターをもつ<code>point()</code>のバージョンでは、ポイントを3D空間に描画できます。これを行うには、<a href=\"#/p5/createCanvas\">createCanvas()</a>に<code>WEBGL</code>引数を追加する必要があります。",
        "1つのパラメーターをもつpoint()のバージョンでは、ポイントの位置を<a href=\"#/p5/p5.Vector\">p5.Vector</a>オブジェクトで設定できます。"
      ],
      "params": {
        "x": "Number: x 座標",
        "y": "Number: y 座標",
        "z": "Number: (オプション) z 座標（WebGL モード用）",
        "coordinate_vector": "p5.Vector: 座標ベクトル"
      }
    },
    "quad": {
      "description": [
        "キャンバスに四角形を描きます。四角形は四辺形、つまり4辺の多角形です。四角形の例には、長方形、正方形、ひし形、台形があります。最初のパラメーターのペア（<code>x1</code>、<code>y1</code>）は四角形の最初の点を設定します。その後のパラメーターのペアは、次の3つの点の座標を設定します。パラメーターは、形状を時計回りまたは反時計周りに進む必要があります。",
        "<code>quad()</code>の12パラメーターのバージョンでは、四角形を3D空間に描くことができます。これを行うには、<a href=\"#/p5/createCanvas\">createCanvas()</a>に<code>WEBGL</code>引数を追加する必要があります。"
      ],
      "params": {
        "x1": "Number: 最初の点の x 座標",
        "y1": "Number: 最初の点の y 座標",
        "x2": "Number: 2番目の点の x 座標",
        "y2": "Number: 2番目の点の y 座標",
        "x3": "Number: 3番目の点の x 座標",
        "y3": "Number: 3番目の点の y 座標",
        "x4": "Number: 4番目の点の x 座標",
        "y4": "Number: 4番目の点の y 座標",
        "detailX": "Integer: (オプション) x 方向のセグメントの数",
        "detailY": "Integer: (オプション) y 方向のセグメントの数",
        "z1": "Number: 最初の点の z 座標",
        "z2": "Number: 2番目の点の z 座標",
        "z3": "Number: 3番目の点の z 座標",
        "z4": "Number: 4番目の点の z 座標"
      }
    },
    "rect": {
      "description": [
        "キャンバスに長方形を描画します。長方形は、すべての角度が90度の四辺形です。デフォルトでは、最初の2つのパラメーターは矩形の左上角の位置を設定します。3番目と4番目は形状の幅と高さをそれぞれ設定します。これらのパラメーターの解釈方法は、<a href=\"#/p5/rectMode\">rectMode()</a>関数で変更可能です。",
        "5つのパラメーターをもつ<code>rect()</code>のバージョンは、角丸の矩形を作成します。5番目のパラメーターは、すべての角の半径値として使用されます。",
        "8つのパラメーターをもつ<code>rect()</code>のバージョンも、角丸の矩形を作成します。8つのパラメーターを使用する場合、後半4つは、それぞれの角での弧の半径を個別に設定します。半径は矩形の左上の角から始まり、時計回りに移動します。これらのパラメーターが省略された場合、最後に指定した角の半径の値に設定されます。"
      ],
      "params": {
        "x": "Number: 長方形の x 座標",
        "y": "Number: 長方形の y 座標",
        "w": "Number: 長方形の幅",
        "h": "Number: (オプション) 長方形の高さ",
        "tl": "Number: (オプション) 左上の角の半径",
        "tr": "Number: (オプション) 右上の角の半径",
        "br": "Number: (オプション) 右下の角の半径",
        "bl": "Number: (オプション) 左下の角の半径",
        "detailX": "Integer: (オプション) x 方向のセグメント数（WebGL モード用）",
        "detailY": "Integer: (オプション) y 方向のセグメント数（WebGL モード用）"
      }
    },
    "square": {
      "description": [
        "キャンバスに四角形を描きます。四角形は、角度がすべて90度で、辺の長さが等しい四辺形です。デフォルトでは、最初の2つのパラメーターは四角形の左上の位置を設定します。3番目のパラメーターはその辺の大きさを設定します。これらのパラメーターの解釈方法は、<a href=\"#/p5/rectMode\">rectMode()</a> 関数を使用して変更できます。",
        "4つのパラメーターをもつ <code>square()</code> のバージョンでは、丸みを帯びた四角形が作成されます。4番目のパラメーターはすべての角の半径値として使用されます。",
        "7つのパラメーターをもつ <code>square()</code> のバージョンでも、丸みを帯びた四角形が作成されます。7つのパラメーターを使うと、後ろの4つは各角の弧の半径を別々に設定します。半径は左上の角から始まり、四角形を時計回りに移動します。これらのパラメーターが省略された場合、最後に指定した角の半径の値に設定されます。"
      ],
      "params": {
        "x": "Number: 正方形の x 座標",
        "y": "Number: 正方形の y 座標",
        "s": "Number: 正方形の辺の長さ",
        "tl": "Number: (オプション) 左上の角の半径",
        "tr": "Number: (オプション) 右上の角の半径",
        "br": "Number: (オプション) 右下の角の半径",
        "bl": "Number: (オプション) 左下の角の半径"
      }
    },
    "triangle": {
      "description": [        
        "キャンバスに三角形を描きます。三角形は3辺の多角形です。最初の2つのパラメーターは三角形の第一点<code>(x1,y1)</code>を指定します。中間の2つのパラメーターはその第二点<code>(x2,y2)</code>を指定します。そして、最後の2つのパラメーターはその第三点<code>(x3, y3)</code>を指定します。"
      ],
      "params": {
        "x1": "Number: 最初の点の x 座標",
        "y1": "Number: 最初の点の y 座標",
        "x2": "Number: 2番目の点の x 座標",
        "y2": "Number: 2番目の点の y 座標",
        "x3": "Number: 3番目の点の x 座標",
        "y3": "Number: 3番目の点の y 座標"
      }
    },
    "ellipseMode": {
      "description": [
        "楕円、円、弧が描かれる位置を変更します。デフォルトでは、最初の2つのパラメーターは形の中心のxおよびy座標です。次のパラメーターはその幅と高さです。<code>ellipseMode(CENTER)</code>を呼び出すのと同等です。",
        "<code>ellipseMode(RADIUS)</code>もまた、最初の2つのパラメーターを使用して形の中心のxおよびy座標を設定します。次のパラメーターは形状の幅と高さの半分です。<code>ellipse(0, 0, 10, 15)</code>を呼び出すと、幅が 20、高さが 30 の形状が描かれます。",
        "<code>ellipseMode(CORNER)</code>は、最初の2つのパラメーターを形状の左上隅とします。次のパラメーターはその幅と高さです。",
        "<code>ellipseMode(CORNERS)</code>は、最初の2つのパラメーターを楕円のバウンディングボックスの一角の位置とします。3番目と4番目のパラメーターは逆の角の位置です。",
        "<code>ellipseMode()</code>に渡される引数は、<code>CENTER</code>、<code>RADIUS</code>、<code>CORNER</code>、および<code>CORNERS</code>という定数がこのように定義されているため、すべて大文字で書く必要があります。 JavaScript は大文字と小文字を区別する言語です。"
      ],
      "params": {
        "mode": "Constant: CENTER、RADIUS、CORNER、CORNERS のいずれか"
      }
    },
    "noSmooth": {
      "description": [
        "すべてのジオメトリをジャギー（エイリアス）エッジで描きます。",
        "<a href=\"#/p5/smooth\">smooth()</a>は 2D モードでデフォルトで有効です。ジオメトリ、画像、およびフォントのスムージングを無効にするためには<a href=\"#/p5/noSmooth\">noSmooth()</a>を呼び出す必要があります。",
        "WebGL モードでは、<a href=\"#/p5/noSmooth\">noSmooth()</a>がデフォルトで有効です。スムーズ（アンチエイリアス）エッジを描くためには<a href=\"#/p5/smooth\">smooth()</a>を呼び出す必要があります。"
      ]
    },
    "rectMode": {
      "description": [
        "長方形と正方形が描かれる位置を変更します。デフォルトでは、最初の2つのパラメーターは形状の左上隅のx座標とy座標です。次のパラメーターはその幅と高さです。これは、<code>rectMode(CORNER)</code>を呼び出すのと同等です。",
        "<code>rectMode(CORNERS)</code>もまた、最初の2つのパラメーターを角の1つの位置として使用します。3つ目と4つ目のパラメーターは反対側の角の位置です。",
        "<code>rectMode(CENTER)</code>は、最初の2つのパラメーターを形状の中心のx座標とy座標として使用します。次のパラメーターはその幅と高さです。",
        "<code>rectMode(RADIUS)</code>もまた、最初の2つのパラメーターを形状の中心のx座標とy座標として使用します。次のパラメーターは形状の幅と高さの半分です。",
        "<code>rectMode()</code>に渡される引数は、定数<code>CENTER</code>、<code>RADIUS</code>、<code>CORNER</code>、および<code>CORNERS</code>がこのように定義されているため、すべて大文字で記述する必要があります。 JavaScript は大文字と小文字を区別する言語です。"
      ],
      "params": {
        "mode": "Constant: CORNER、CORNERS、CENTER、RADIUS のいずれか"
      }
    },
    "smooth": {
      "description": [
        "すべてのジオメトリをスムーズ（アンチエイリアス）エッジで描画します。<a href=\"#/p5/smooth\">smooth()</a> は、サイズ変更された画像の画質も向上させます。",
        "<a href=\"#/p5/smooth\">smooth()</a> は、2D モードではデフォルトで有効です。ジオメトリ、画像、およびフォントの平滑化を無効にするには、<a href=\"#/p5/noSmooth\">noSmooth()</a> を呼び出す必要があります。",
        "WebGL モードでは、<a href=\"#/p5/noSmooth\">noSmooth()</a> がデフォルトで有効です。滑らか（アンチエイリアス）エッジを描画するには、<a href=\"#/p5/smooth\">smooth()</a> を呼び出す必要があります。"
      ]
    },
    "strokeCap": {
      "description": [
        "線の終端の描画スタイルを設定します。これらの終端は、丸く（<code>ROUND</code>）、四角く（<code>SQUARE</code>）、または延長され（<code>PROJECT</code>）ます。デフォルトのキャップは<code>ROUND</code>です。",
        "<code>strokeCap()</code>へ渡される引数は、定数<code>ROUND</code>、<code>SQUARE</code>、そして<code>PROJECT</code>がこのように定義されているため、すべて大文字で記述する必要があります。 JavaScript は大文字と小文字を区別する言語です。"
      ],
      "params": {
        "cap": "Constant: ROUND、SQUARE、PROJECT のいずれか"
      }
    },
    "strokeJoin": {
      "description": [
        "ラインセグメントを接続するジョイントのスタイルを設定します。これらのジョイントは、ミター（<code>MITER</code>）、ビベル（<code>BEVEL</code>）、またはラウンド（<code>ROUND</code>）のいずれかです。デフォルトのジョイントは 2D モードでは<code>MITER</code>、WebGL モードでは<code>ROUND</code>です。",
        "<code>strokeJoin()</code> に渡す引数は、定数 <code>MITER</code>、<code>BEVEL</code>、<code>ROUND</code> がこのように定義されているため、すべて大文字で記述する必要があります。 JavaScript は大文字と小文字を区別する言語です。"
      ],
      "params": {
        "join": "Constant: MITER、BEVEL、ROUND のいずれか"
      }
    },
    "strokeWeight": {
      "description": [
        "線、点、形状の周りの枠線に使用されるストロークの幅を設定します。すべての幅はピクセル単位で設定されます。",
        "以前に適用された変換やスケーリングが<code>strokeWeight()</code>に影響を及ぼすことに注意してください。"
      ],
      "params": {
        "weight": "Number: ストロークの幅（ピクセル単位）"
      }
    },
    "bezier": {
      "description": [
        "画面上にキュビックベジェ曲線を描画します。これらの曲線は、一連のアンカーポイントとコントロールポイントで定義されます。最初の2つのパラメーターは最初のアンカーポイントを指定し、最後の2つのパラメーターは他のアンカーポイントを指定します。これらのアンカーポイントは曲線の最初と最後のポイントになります。中間のパラメーターは曲線の形状を定義する2つのコントロールポイントを指定します。大まかにいうと、コントロールポイントは曲線を自分の方向に「引っ張ります」。",
        "ベジェ曲線は、フランスの自動車技師 Pierre Bezier によって開発され、ゆるやかに傾斜した曲線を定義するためにコンピューターグラフィックスで一般的に使用されます。<a href=\"#/p5/curve\">curve()</a> も参照してください。"
      ],
      "params": {
        "x1": "Number: 最初のアンカーポイントの x 座標",
        "y1": "Number: 最初のアンカーポイントの y 座標",
        "x2": "Number: 最初のコントロールポイントの x 座標",
        "y2": "Number: 最初のコントロールポイントの y 座標",
        "x3": "Number: 2番目のコントロールポイントの x 座標",
        "y3": "Number: 2番目のコントロールポイントの y 座標",
        "x4": "Number: 2番目のアンカーポイントの x 座標",
        "y4": "Number: 2番目のアンカーポイントの y 座標",
        "z1": "Number: 最初のアンカーポイントの z 座標",
        "z2": "Number: 最初のコントロールポイントの z 座標",
        "z3": "Number: 2番目のコントロールポイントの z 座標",
        "z4": "Number: 2番目のアンカーポイントの z 座標"
      }
    },
    "bezierDetail": {
      "description": [
        "ベジェ曲線の表示に使用される解像度を設定します。デフォルト値は20です。",
        "なお、この関数は WebGL レンダラーを使用する場合にのみ有用であり、デフォルトのキャンバスレンダラーはこの情報を使用しません。"
      ],
      "params": {
        "detail": "Number: 曲線の解像度"
      }
    },
    "bezierPoint": {
      "description": [
        "ベジェ曲線のコントロールポイントとアンカーポイントの x 座標または y 座標の値が与えられた場合、この関数はベジェ曲線の t 位置での x 座標または y 座標を評価します。パラメーター a と d は曲線上の最初と最後の点の x または y 座標であり、b と c はコントロールポイントの座標です。最後のパラメーター t は、0から1の値で示される結果の点の位置です。これを x 座標で1回、y 座標で1回実行することで、t 位置におけるベジェ曲線の位置を取得できます。"
      ],
      "returns": "Number: t 位置でのベジェ曲線の値",
      "params": {
        "a": "Number: 曲線上の最初の点の座標",
        "b": "Number: 最初のコントロールポイントの座標",
        "c": "Number: 2番目のコントロールポイントの座標",
        "d": "Number: 曲線上の最後の点の座標",
        "t": "Number: 0から1までの値"
      }
    },
    "bezierTangent": {
      "description": [
        "ベジェ曲線のパラメーター a、b、c、d の位置 t における接線を評価します。パラメーター a と d は曲線の最初と最後の点で、b と c はコントロールポイントです。t の最終的な値は0から1まで変化します。"
      ],
      "returns": "Number: 位置 t における接線の値",
      "params": {
        "a": "Number: 曲線の最初の点の座標",
        "b": "Number: 最初のコントロールポイントの座標",
        "c": "Number: 2番目のコントロールポイントの座標",
        "d": "Number: 曲線の最後の点の座標",
        "t": "Number: 0から1までの値"
      }
    },
    "curve": {
      "description": [
        "2点間を曲線で結びます。曲線は、中間の4つのパラメーターで指定された2点の間に描画されます。最初の2つのパラメーターはコントロールポイントであり、曲線が描かれない場合でも、曲線がこの点から生じているように見えます。最後の2つのパラメーターも同様に、他のコントロールポイントを指定します。 <br /><br /> 長い曲線は、<a href=\"#/p5/curve\">curve()</a> 関数を連結して使用するか、<a href=\"#/p5/curveVertex\">curveVertex()</a> を使用して作成できます。さらに <a href=\"#/p5/curveTightness\">curveTightness()</a> 関数を使用すると、曲線のビジュアル品質を制御できます。<a href=\"#/p5/curve\">curve()</a> 関数は Catmull-Rom スプラインの実装です。"
      ],
      "params": {
        "x1": "Number: 最初のコントロールポイントの x 座標",
        "y1": "Number: 最初のコントロールポイントの y 座標",
        "x2": "Number: 最初の点の x 座標",
        "y2": "Number: 最初の点の y 座標",
        "x3": "Number: 2番目の点の x 座標",
        "y3": "Number: 2番目の点の y 座標",
        "x4": "Number: 最後のコントロールポイントの x 座標",
        "y4": "Number: 最後のコントロールポイントの y 座標",
        "z1": "Number: 最初のコントロールポイントの z 座標",
        "z2": "Number: 最初の点の z 座標",
        "z3": "Number: 2番目の点の z 座標",
        "z4": "Number: 最後のコントロールポイントの z 座標"
      }
    },
    "curveDetail": {
      "description": [
        "曲線の表示解像度を設定します。デフォルト値は20で、最小値は3です。",
        "この関数は、WebGL レンダラーを使用している場合にのみ有用であり、デフォルトのキャンバスレンダラーはこの情報を使用しません。"
      ],
      "params": {
        "resolution": "Number: 曲線の解像度"
      }
    },
    "curveTightness": {
      "description": [
        "曲線描画に使用される <a href=\"#/p5/curve\">curve()</a> や <a href=\"#/p5/curveVertex\">curveVertex()</a> の形状の品質を変更します。tightness パラメーターは、曲線を頂点ポイントに合わせる方法を決定します。値0.0は tightness のデフォルト値であり、Catmull-Rom スプラインで曲線が定義されます。値1.0はすべてのポイントを直線でつなぎます。-5.0から5.0の範囲内の値では曲線がいびつになりますが、それでも認識可能な形状を保ち、値が増大すると曲線はさらにいびつになります。"
      ],
      "params": {
        "amount": "Number: 元の頂点からの変形量"
      }
    },
    "curvePoint": {
      "description": [
        "点 a、b、c、d の位置 t における曲線を評価します。パラメーター t は0から1の間で変化し、a と d は曲線のコントロールポイント、b と c は曲線の始点と終点です。これは x 座標で1回、y 座標で2回行われ、t における曲線の位置を取得できます。"
      ],
      "returns": "Number: <a href=\"#/p5/curve\">曲線</a> 上の位置 t の値",
      "params": {
        "a": "Number: 曲線の最初のコントロールポイントの座標",
        "b": "Number: 最初の点の座標",
        "c": "Number: 2番目の点の座標",
        "d": "Number: 曲線の2番目のコントロールポイントの座標",
        "t": "Number: 0から1までの値"
      }
    },
    "curveTangent": {
      "description": [
        "点 a、b、c、d の位置 t における曲線の接線を評価します。パラメーター t が0から1の間で変化し、a と d は曲線上の点、b と c はコントロールポイントです。"
      ],
      "returns": "Number: 位置 t における曲線の接線",
      "params": {
        "a": "Number: 最初のコントロールポイントの座標",
        "b": "Number: 曲線上の最初の点の座標",
        "c": "Number: 曲線上の2番目の点の座標",
        "d": "Number: 2番目のコントロールポイントの座標",
        "t": "Number: 0から1までの値"
      }
    },
    "beginContour": {
      "description": [
        "<a href=\"#/p5/beginContour\">beginContour()</a> 関数と <a href=\"#/p5/endContour\">endContour()</a> 関数を使用して、文字「0」の中心などのような形状内の負の形状を作成します。<a href=\"#/p5/beginContour\">beginContour()</a> 関数は形状の頂点の記録を開始し、<a href=\"#/p5/endContour\">endContour()</a> 関数は記録を停止します。負の形状を定義する頂点は、外部形状とは逆方向に「巻かれる」必要があります。まず外部の頂点を時計回りの順序で描き、内部の形状では反時計回りに頂点を描画します。",
        "これらの関数は、<a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> のペア内でのみ使用できます。また、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、および <a href=\"#/p5/scale\">scale()</a> などの変換は、<a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a> のペア内では機能しません。<a href=\"#/p5/ellipse\">ellipse()</a> や <a href=\"#/p5/rect\">rect()</a> などの他の図形を使用することもできません。"
      ]
    },
    "beginShape": {
      "description": [
        "<a href=\"#/p5/beginShape\">beginShape()</a> 関数と <a href=\"#/p5/endShape\">endShape()</a> 関数を使用することで、より複雑な形状を作成できます。<a href=\"#/p5/beginShape\">beginShape()</a> は、形状の頂点を記録するために使用され、<a href=\"#/p5/endShape\">endShape()</a> は記録を停止します。kind パラメーターの値によって、提供された頂点からどのタイプの形状を作成するかを指定できます。モードが指定されていない場合、形状は任意の不規則なポリゴンである可能性があります。",
        "<a href=\"#/p5/beginShape\">beginShape()</a> 関数で利用可能なパラメーターは次のとおりです:",
        "POINTS: 点のシリーズを描画します。",
        "LINES: つながっていない線分のシリーズを描画します。",
        "TRIANGLES: 別々の三角形のシリーズを描画します。",
        "TRIANGLE_FAN: ファンのように、最初の頂点を共有する接続された三角形のシリーズを描画します。",
        "TRIANGLE_STRIP: ストリップ状に接続された三角形のシリーズを描画します。",
        "QUADS: 別々の四角形のシリーズを描画します。",
        "QUAD_STRIP: 隣接する辺を使用して次の四角形を形成する四角形ストリップを描画します。",
        "TESS (WebGL のみ): 曲線を埋めるための不規則なポリゴンを、明示的なテッセレーションで制御します。",
        "<a href=\"#/p5/beginShape\">beginShape()</a> 関数を呼び出した後、一連の <a href=\"#/p5/vertex\">vertex()</a> コマンドが続きます。図形の描画を停止するには、<a href=\"#/p5/endShape\">endShape()</a> を呼び出します。各図形は現在のストロークカラーで輪郭が描かれ、塗りつぶしカラーで塗りつぶされます。",
        "<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a> などの変換は <a href=\"#/p5/beginShape\">beginShape()</a> 内では機能しません。<a href=\"#/p5/ellipse\">ellipse()</a> や <a href=\"#/p5/rect\">rect()</a> などの他の図形も、<a href=\"#/p5/beginShape\">beginShape()</a> 内では使用できません。"
      ],
      "params": {
        "kind": "Constant: (オプション) POINTS, LINES, TRIANGLES, TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, QUAD_STRIP, TESS のいずれか"
      }
    },
    "bezierVertex": {
      "description": [
        "Bezier 曲線の頂点座標を指定します。bezierVertex() を呼び出すごとに、Bezier 曲線の2つのコントロールポイントとひとつのアンカーポイントの位置が定義され、線または図形に新しいセグメントが追加されます。WebGL モードでは、bezierVertex() は 2D および 3D モードの両方で使用できます。2D モードでは6つのパラメーターが必要ですが、3D モードでは9つのパラメーター（z 座標を含む）が必要です。",
        "<a href=\"#/p5/beginShape\">beginShape()</a> 呼び出し内で初めて bezierVertex() を使用する際は、最初のアンカーポイントを設定するために <a href=\"#/p5/vertex\">vertex()</a> 呼び出しを先頭に置く必要があります。この関数は <a href=\"#/p5/beginShape\">beginShape()</a> と <a href=\"#/p5/endShape\">endShape()</a> の間でのみ使用できますが、<a href=\"#/p5/beginShape\">beginShape()</a> に MODE または POINTS パラメーターが指定されている場合は使用できません。"
      ],
      "params": {
        "x2": "Number: 第1コントロールポイントの x 座標",
        "y2": "Number: 第1コントロールポイントの y 座標",
        "x3": "Number: 第2コントロールポイントの x 座標",
        "y3": "Number: 第2コントロールポイントの y 座標",
        "x4": "Number: アンカーポイントの x 座標",
        "y4": "Number: アンカーポイントの y 座標",
        "z2": "Number: 第1コントロールポイントの z 座標 (WebGL モード用)",
        "z3": "Number: 第2コントロールポイントの z 座標 (WebGL モード用)",
        "z4": "Number: アンカーポイントの z 座標 (WebGL モード用)"
      }
    },
    "curveVertex": {
      "description": [
        "曲線の頂点座標を指定します。この関数は、<a href=\"#/p5/beginShape\">beginShape()</a> と <a href=\"#/p5/endShape\">endShape()</a> の間でのみ使用できますが、<a href=\"#/p5/beginShape\">beginShape()</a> に MODE パラメーターが指定されている場合は使用できません。WebGL モードでは、curveVertex() は 2D および 3D モードで使用できます。2D モードでは2つのパラメーターが必要ですが、3D モードでは3つのパラメーターが必要です。",
        "一連の curveVertex() ラインの最初と最後の点は、曲線の始点と終点をガイドするために使用されます。2番目と3番目の点の間に小さな曲線を描画するには、最低4つの点が必要です。curveVertex() で5番目の点を追加すると、2番目、3番目、4番目の点の間に曲線が描かれます。curveVertex() 関数は、Catmull-Rom スプラインの実装です。"
      ],
      "params": {
        "x": "Number: 頂点の x 座標",
        "y": "Number: 頂点の y 座標",
        "z": "Number: (オプション) 頂点の z 座標 (WebGL モード用)"
      }
    },
    "endContour": {
      "description": [
        "<a href=\"#/p5/beginContour\">beginContour()</a> 関数と <a href=\"#/p5/endContour\">endContour()</a> 関数を使用して、文字「0」の中心などのような形状内の負の形状を作成します。<a href=\"#/p5/beginContour\">beginContour()</a> 関数は形状の頂点の記録を開始し、<a href=\"#/p5/endContour\">endContour()</a> 関数は記録を停止します。負の形状を定義する頂点は、外部形状とは逆方向に「巻かれる」必要があります。まず外部の頂点を時計回りの順序で描き、内部の形状では反時計回りに頂点を描画します。",
        "これらの関数は、<a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> のペア内でのみ使用できます。また、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、および <a href=\"#/p5/scale\">scale()</a> などの変換は、<a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a> のペア内では機能しません。<a href=\"#/p5/ellipse\">ellipse()</a> や <a href=\"#/p5/rect\">rect()</a> などの他の図形を使用することもできません。"
      ]
    },
    "endShape": {
      "description": [
        "<a href=\"#/p5/endShape\">endShape()</a> 関数は、<a href=\"#/p5/beginShape\">beginShape()</a> とペアで使用され、<a href=\"#/p5/beginShape\">beginShape()</a> の後でのみ呼び出すことができます。<a href=\"#/p5/endshape\">endShape()</a> が呼び出されると、前回の <a href=\"#/p5/beginShape\">beginShape()</a> の呼び出し以降に定義されたすべての画像データが画像バッファに書き込まれます。定数 CLOSE を <code>mode</code> パラメーターの値として使用して、図形を閉じる（始点と終点を接続する）ことができます。"
      ],
      "params": {
        "mode": "Constant: (オプション) 図形を閉じるために CLOSE を使用"
      }
    },
    "quadraticVertex": {
      "description": [
        "quadraticVertex() は、二次ベジェ曲線の頂点座標を指定します。quadraticVertex() の各呼び出しで、ベジェ曲線のひとつのコントロールポイントとひとつのアンカーポイントの位置が定義され、線や図形に新しいセグメントが追加されます。<a href=\"#/p5/beginShape\">beginShape()</a> 内の呼び出しで初めて quadraticVertex() を使用する際は、最初のアンカーポイントを設定するために <a href=\"#/p5/vertex\">vertex()</a> 呼び出しを先頭に置く必要があります。WebGL モードでは、quadraticVertex() は 2D モードと 3D モードの両方で使用できます。2D モードでは4つのパラメーターが必要ですが、3D モードでは6つのパラメーター（z 座標を含む）が必要です。",
        "この関数は <a href=\"#/p5/beginShape\">beginShape()</a> と <a href=\"#/p5/endShape\">endShape()</a> の間でのみ使用できますが、<a href=\"#/p5/beginShape\">beginShape()</a> に MODE または POINTS パラメーターが指定されている場合は使用できません。"
      ],
      "params": {
        "cx": "Number: コントロールポイントの x 座標",
        "cy": "Number: コントロールポイントの y 座標",
        "x3": "Number: アンカーポイントの x 座標",
        "y3": "Number: アンカーポイントの y 座標",
        "cz": "Number: コントロールポイントの z 座標（WebGL モード用）",
        "z3": "Number: アンカーポイントの z 座標（WebGL モード用）"
      }
    },
    "vertex": {
      "description": [
        "すべての図形は、一連の頂点を接続することで構築されます。<a href=\"#/p5/vertex\">vertex()</a> は、点、線、三角形、四角形、ポリゴンの頂点座標を指定するために使用されます。これは、<a href=\"#/p5/beginShape\">beginShape()</a> および <a href=\"#/p5/endShape\">endShape()</a> 関数内でのみ使用されます。"
      ],
      "params": {
        "x": "Number: 頂点の x 座標",
        "y": "Number: 頂点の y 座標",
        "z": "Number: (オプション) 頂点の z 座標。指定されていない場合はデフォルトで0になります。",
        "u": "Number: (オプション) 頂点のテクスチャ u 座標",
        "v": "Number: (オプション) 頂点のテクスチャ v 座標"
      }
    },
    "normal": {
      "description": [
        "以降で <a href=\"#/p5/vertex\">vertex()</a> で描画される頂点に使用する 3D 頂点法線を設定します。法線は、一般的に形状の表面にほぼ垂直なベクトルであり、その表面の部分からどれだけの光が反射されるかを制御します。"
      ],
      "params": {
        "vector": "Vector: 頂点法線を表す p5.Vector。",
        "x": "Number: 頂点法線の x 成分。",
        "y": "Number: 頂点法線の y 成分。",
        "z": "Number: 頂点法線の z 成分。"
      }
    },
    "VERSION": {
      "description": ["この p5.js のバージョン。"]
    },
    "P2D": {
      "description": ["デフォルトの二次元レンダラー。"]
    },
    "WEBGL": {
      "description": [
        "p5.jsの2つのレンダーモードの1つで、3Dレンダリングやシェーダーなどの計算処理が重い作業に使われます。",
        "<code>WEBGL</code> は、デフォルトの <a href=\"/#/p5/P2D\"><code>P2D</code></a> レンダラと以下のように異なります: <ul> <li><strong>座標系</strong> - <code>WEBGL</code> モードで描画する場合、原点（0,0,0）は画面の左上ではなく、中央に位置します。<a href=\"https://p5js.org/learn/getting-started-in-webgl-coords-and-transform.html\">座標と変換についての学習ページ</a>をご覧ください。</li> <li><strong>3D形状</strong> - <code>WEBGL</code> モードは、<a href=\"/#/p5/box\">box()</a>, <a href=\"/#/p5/sphere\">sphere()</a>, <a href=\"/#/p5/cone\">cone()</a>, および<a href=\"/#Shape3D%20Primitives\">その他</a>など、3次元の形状の描画に利用できます。より複雑なオブジェクトを作成するためには、<a href=\"https://p5js.org/learn/getting-started-in-webgl-custom-geometry.html\">カスタムジオメトリについての学習ページ</a>をご覧ください。</li> <li><strong>形状の詳細</strong> - <code>WEBGL</code> モードで描画する際、<code>detail</code> パラメーターを使用して曲線がどの程度滑らかに描かれるかを指定できます。<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#3d-primitives-shapes\">形状に関するwikiセクション</a>をご覧いただければ、より多くの情報と例を見つけられます。</li> <li><strong>テクスチャ</strong> - テクスチャは、形状に被せるスキンのようなものです。<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#textures\">テクスチャに関するwikiセクション</a>を参照して、テクスチャを使って面に画像をマッピングする例をご覧ください。</li> <li><strong>素材と照明</strong> - <code>WEBGL</code> は、シーンを配置するための、<a href=\"/#/p5/ambientLight\">ambientLight()</a>などのさまざまなタイプのライトを提供します。照明を反射し形状と深度を伝える素材として<a href=\"/#/p5/specularMaterial\">specularMaterial()</a>などがあります。異なる組み合わせで実験をするためには、<a href=\"https://p5js.org/learn/getting-started-in-webgl-appearance.html\">スタイリングと外観についての学習ページ</a>をご覧ください。</li> <li><strong>カメラ</strong> - <code>WEBGL</code>スケッチのビューポートは、カメラの属性を変更することで調整できます。<a href=\"https://p5js.org/learn/getting-started-in-webgl-appearance.html#camera\">カメラについての学習ページセクション</a>をご覧いただくと、カメラコントロールの説明があります。</li> <li><strong>テキスト</strong> - <code>WEBGL</code>では、opentype/truetypeフォントファイルを<a href=\"/#/p5/loadFont\">loadFont()</a>を使用して事前に読み込む必要があります。<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#text\">テキストについてのwikiセクション</a>をご覧いただくと、詳細と回避策があります。</li> <li><strong>シェーダー</strong> - シェーダーは、さまざまなエフェクトやグラフィックスに使用できるハードウェアアクセラレートプログラムです。p5.jsでシェーダーの使い方を始めるには、<a href=\"https://p5js.org/learn/getting-started-in-webgl-shaders.html\">シェーダーの導入</a>をご覧ください。</li> <li><strong>グラフィックスアクセラレーション</strong> - <code>WEBGL</code> モードでは、CPUではなくグラフィックカードを利用するため、スケッチのパフォーマンスを向上させる可能性があります（例：一度に画面上により多くの形状を描画する）。</li> </ul>",
        "WEBGL モードについて詳しく知りたい場合は、このウェブサイトの「学ぶ」セクションの<a href=\"https://p5js.org/learn/#:~:text=Getting%20Started%20in%20WebGL\">さまざまなインタラクティブなWEBGLチュートリアル</a>をチェックするか、wiki記事 <a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5\">「p5でWebGLを始める」</a>を読んでください。"
      ]
    },
    "WEBGL2": {
      "description": [
        "WebGLキャンバスの2つの可能な値（WEBGLまたはWEBGL2）のいずれかで、レンダリング環境の機能を判断するために使用できます。"
      ]
    },
    "ARROW": {},
    "CROSS": {},
    "HAND": {},
    "MOVE": {},
    "TEXT": {},
    "WAIT": {},
    "HALF_PI": {
      "description": [
        "HALF_PI は、値が1.57079632679489661923の数学定数です。これは、円の円周と直径の比率の半分です。三角関数 <a href=\"#/p5/sin\">sin()</a> および <a href=\"#/p5/cos\">cos()</a> と組み合わせると便利です。"
      ]
    },
    "PI": {
      "description": [
        "PI は、値が3.14159265358979323846の数学定数です。これは、円の円周と直径の比率です。三角関数 <a href=\"#/p5/sin\">sin()</a> および <a href=\"#/p5/cos\">cos()</a> と組み合わせると便利です。"
      ]
    },
    "QUARTER_PI": {
      "description": [
        "QUARTER_PI は、値が0.7853982の数学定数です。これは、円の円周と直径の比率の4分の1です。三角関数 <a href=\"#/p5/sin\">sin()</a> および <a href=\"#/p5/cos\">cos()</a> と組み合わせると便利です。"
      ]
    },
    "TAU": {
      "description": [
        "TAU は、TWO_PI の別名であり、値が6.28318530717958647693の数学定数です。これは、円の円周と直径の比率の2倍です。三角関数 <a href=\"#/p5/sin\">sin()</a> および <a href=\"#/p5/cos\">cos()</a> と組み合わせると便利です。"
      ]
    },
    "TWO_PI": {
      "description": [
        "TWO_PI は、値が6.28318530717958647693の数学定数です。これは、円の円周と直径の比率の2倍です。三角関数 <a href=\"#/p5/sin\">sin()</a> および <a href=\"#/p5/cos\">cos()</a> と組み合わせると便利です。"
      ]
    },
    "DEGREES": {
      "description": [
        "<a href=\"#/p5/angleMode\">angleMode()</a> 関数で使用する定数で、p5.js が角度を解釈および計算するモード（DEGREES または RADIANS）を設定します。"
      ]
    },
    "RADIANS": {
      "description": [
        "<a href=\"#/p5/angleMode\">angleMode()</a> 関数で使用する定数で、p5.js が角度を解釈および計算するモード（RADIANS または DEGREES）を設定します。"
      ]
    },
    "CORNER": {},
    "CORNERS": {},
    "RADIUS": {},
    "RIGHT": {},
    "LEFT": {},
    "CENTER": {},
    "TOP": {},
    "BOTTOM": {},
    "BASELINE": {},
    "POINTS": {},
    "LINES": {},
    "LINE_STRIP": {},
    "LINE_LOOP": {},
    "TRIANGLES": {},
    "TRIANGLE_FAN": {},
    "TRIANGLE_STRIP": {},
    "QUADS": {},
    "QUAD_STRIP": {},
    "TESS": {},
    "CLOSE": {},
    "OPEN": {},
    "CHORD": {},
    "PIE": {},
    "PROJECT": {},
    "SQUARE": {},
    "ROUND": {},
    "BEVEL": {},
    "MITER": {},
    "RGB": {},
    "HSB": {
      "description": [
        "HSB（hue、saturation、brightness）は、カラーモデルの一種です。詳細については、<a href=\"https://learnui.design/blog/the-hsb-color-system-practicioners-primer.html\">HSB</a> で学ぶことができます。"
      ]
    },
    "HSL": {},
    "AUTO": {
      "description": [
        "AUTO を使用すると、要素の現在の高さと幅にもとづいて、要素の幅または高さ（両方ではない）を自動的に設定できます。<a href=\"/#/p5.Element/size\">size</a> 関数に AUTO として渡すことができるパラメーターは一度にひとつだけです。"
      ]
    },
    "ALT": {},
    "BACKSPACE": {},
    "CONTROL": {},
    "DELETE": {},
    "DOWN_ARROW": {},
    "ENTER": {},
    "ESCAPE": {},
    "LEFT_ARROW": {},
    "OPTION": {},
    "RETURN": {},
    "RIGHT_ARROW": {},
    "SHIFT": {},
    "TAB": {},
    "UP_ARROW": {},
    "BLEND": {},
    "REMOVE": {},
    "ADD": {},
    "DARKEST": {},
    "LIGHTEST": {},
    "DIFFERENCE": {},
    "SUBTRACT": {},
    "EXCLUSION": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "REPLACE": {},
    "OVERLAY": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DODGE": {},
    "BURN": {},
    "THRESHOLD": {},
    "GRAY": {},
    "OPAQUE": {},
    "INVERT": {},
    "POSTERIZE": {},
    "DILATE": {},
    "ERODE": {},
    "BLUR": {},
    "NORMAL": {},
    "ITALIC": {},
    "BOLD": {},
    "BOLDITALIC": {},
    "CHAR": {},
    "WORD": {},
    "LINEAR": {},
    "QUADRATIC": {},
    "BEZIER": {},
    "CURVE": {},
    "STROKE": {},
    "FILL": {},
    "TEXTURE": {},
    "IMMEDIATE": {},
    "IMAGE": {},
    "NEAREST": {},
    "REPEAT": {},
    "CLAMP": {},
    "MIRROR": {},
    "LANDSCAPE": {},
    "PORTRAIT": {},
    "GRID": {},
    "AXES": {},
    "LABEL": {},
    "FALLBACK": {},
    "CONTAIN": {},
    "COVER": {},
    "UNSIGNED_BYTE": {},
    "UNSIGNED_INT": {},
    "FLOAT": {},
    "RGBA": {},
    "print": {
      "description": [
        "<a href=\"#/p5/print\">print()</a> 関数を使用するとブラウザーのコンソールエリアに出力することができます。この関数は、プログラムが生成しているデータを確認するのに役立ちます。この関数を使用すると、関数が呼び出されるたびに新しい行でテキストが作成されます。個々の要素はクォート（\"\"）で区切り、加算演算子（+）で結合できます。",
        "引数なしで print() を呼び出すと、window.print() 関数が呼び出され、ブラウザーの印刷ダイアログが開きます。コンソールに空行を出力するには、print('\\n')と記述します。"
      ],
      "params": {
        "contents": "Any: 印刷する Number、String、Object、Boolean、Array の任意の組み合わせ"
      }
    },
    "frameCount": {
      "description": [
        "システム変数 <a href=\"#/p5/frameCount\">frameCount</a> は、プログラムが開始されてから表示されたフレームの数を格納します。この変数の値は <a href=\"#/p5/setup\">setup()</a> 内では0で、<a href=\"#/p5/draw\">draw()</a> の最初の反復後に1以上になります。"
      ]
    },
    "deltaTime": {
      "description": [
        "システム変数 <a href=\"#/p5/deltaTime\">deltaTime</a> には、前のフレームの開始と現在のフレームの開始の間の時間差がミリ秒単位で格納されます。",
        "この変数は、時間に厳密なアニメーションや、フレームレートに関係なく一定であるべき物理計算を作成するのに便利です。"
      ]
    },
    "focused": {
      "description": [
        "ウィンドウが p5.js プログラムで「フォーカス」されているかどうかを確認します。フォーカスされている場合、スケッチがマウスやキーボードの入力を受け付けます。この変数はウィンドウがフォーカスされている場合は「true」で、フォーカスされていない場合は「false」です。"
      ]
    },
    "cursor": {
      "description": [
        "カーソルを事前定義された記号や画像に設定するか、すでに非表示の場合は表示するようにします。カーソルとして画像を設定する場合、推奨されるサイズは16×16または32×32ピクセルです。パラメーター x と y の値は、画像の寸法よりも小さくする必要があります。"
      ],
      "params": {
        "type": "String|Constant: 組み込み: ARROW, CROSS, HAND, MOVE, TEXT, WAIT  ネイティブ CSS プロパティ: 'grab', 'progress', 'cell'など  外部: カーソル画像のパス（許可されるファイル拡張子: .cur, .gif, .jpg, .jpeg, .png）  ネイティブ CSS カーソルと url の詳細については、次のリンクを参照してください: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\">https://developer.mozilla.org/en-US/docs/Web/CSS/cursor</a>",
        "x": "Number: (オプション) カーソルの水平方向のアクティブスポット（32未満にする必要があります）",
        "y": "Number: (オプション) カーソルの垂直方向のアクティブスポット（32未満にする必要があります）"
      }
    },
    "frameRate": {
      "description": [
        "1秒あたりに表示されるフレーム数を指定します。たとえば、関数コール frameRate(30) は、毎秒30回リフレッシュを試みます。プロセッサが指定されたレートを維持できない場合、フレームレートは達成されません。フレームレートの設定は、<a href=\"#/p5/setup\">setup()</a> 内に記述することをお勧めします。デフォルトのフレームレートは、ディスプレイのフレームレート（ここでは「リフレッシュレート」とも呼ばれます）にもとづいており、ほとんどのコンピューターでは1秒あたり60フレームに設定されています。映画で一般的な24フレーム/秒以上のフレームレートであればアニメーションがスムーズになります。これは、setFrameRate(val)と同じです。",
        "<a href=\"#/p5/frameRate\">frameRate()</a> を引数なしで呼び出すと、現在のフレームレートが返されます。draw 関数は、値を返す前に少なくとも1回実行する必要があります。これは、<a href=\"#/p5/getFrameRate\">getFrameRate()</a> と同じです。",
        "型が Number でない、または非正の引数で <a href=\"#/p5/frameRate\">frameRate()</a> を呼び出した場合も、現在のフレームレートが返されます。"
      ],
      "params": {
        "fps": "Number: 1秒あたりに表示されるフレーム数"
      }
    },
    "getTargetFrameRate": {
      "description": [
        "_targetFrameRate 変数を返します。デフォルトの_targetFrameRate は60に設定されています。これは、frameRate() を呼び出して希望する値に設定することで変更できます。getTargetFrameRate() を呼び出した場合は、設定された値が返されます。"
      ],
      "returns": "Number: _targetFrameRate"
    },
    "noCursor": {
      "description": ["カーソルを非表示にします。"]
    },
    "webglVersion": {
      "description": [
        "スケッチが WebGL モードで作成された場合、<code>weglVersion</code> はそのスケッチで使用されている WebGL のバージョンを示します。<code>setAttributes({ version: 1 })</code>を介して WebGL1 をリクエストしない限り、スケッチは WebGL2 キャンバスの作成を試み、WebGL2 が利用できない場合は WebGL1 にフォールバックします。",
        "<code>webglVersion</code> は常に <code>WEBGL2</code>、<code>WEBGL</code>、または <code>P2D</code>（WebGL モードでない場合）のいずれかになります。"
      ]
    },
    "displayWidth": {
      "description": [
        "デフォルトの <a href=\"#/p5/pixelDensity\">pixelDensity</a> にしたがって画面表示の幅を保存するシステム変数です。これは、任意の表示サイズでフルスクリーンプログラムを実行するために使用されます。実際の画面サイズを返すには、これに pixelDensity を掛けます。"
      ]
    },
    "displayHeight": {
      "description": [
        "デフォルトの <a href=\"#/p5/pixelDensity\">pixelDensity</a> にしたがって画面表示の高さを保存するシステム変数です。これは、任意の表示サイズでフルスクリーンプログラムを実行するために使用されます。実際の画面サイズを返すには、これに pixelDensity を掛けます。"
      ]
    },
    "windowWidth": {
      "description": [
        "内側のウィンドウの幅を保存するシステム変数で、window.innerWidth にマップされます。"
      ]
    },
    "windowHeight": {
      "description": [
        "内側のウィンドウの高さを保存するシステム変数で、window.innerHeight にマップされます。"
      ]
    },
    "windowResized": {
      "description": [
        "<a href=\"#/p5/windowResized\">windowResized()</a> 関数は、ブラウザーウィンドウがリサイズされるたびに一度呼び出されます。この関数を利用してキャンバスのサイズを変更したり、新しいウィンドウサイズに合わせて他の調整を行うと良いでしょう。"
      ],
      "params": {
        "event": "Object: (オプション) オプションのイベントコールバック引数。"
      }
    },
    "width": {
      "description": [
        "描画キャンバスの幅を保存するシステム変数です。<a href=\"#/p5/createCanvas\">createCanvas()</a> 関数の最初のパラメーターによってこの値が設定されます。たとえば、関数呼び出し createCanvas(320, 240)は、width 変数の値を320に設定します。<a href=\"#/p5/createCanvas\">createCanvas()</a> がプログラム内で使用されていない場合、width の値はデフォルトで100になります。"
      ]
    },
    "height": {
      "description": [
        "描画キャンバスの高さを保存するシステム変数です。<a href=\"#/p5/createCanvas\">createCanvas()</a> 関数の2番目のパラメーターによってこの値が設定されます。たとえば、関数呼び出し createCanvas(320, 240)は、height 変数の値を240に設定します。<a href=\"#/p5/createCanvas\">createCanvas()</a> がプログラム内で使用されていない場合、height の値はデフォルトで100になります。"
      ]
    },
    "fullscreen": {
      "description": [
        "引数が与えられた場合、引数の値にもとづいてスケッチをフルスクリーンにするかどうかを設定します。引数が与えられなかった場合、現在のフルスクリーン状態を返します。ただし、ブラウザーの制限により、この関数を呼び出せるのはユーザー入力時のみです。たとえば、下記の例のようにマウスプレス時に呼び出せます。"
      ],
      "returns": "Boolean: 現在のフルスクリーン状態",
      "params": {
        "val": "Boolean: (オプション) スケッチをフルスクリーンモードにするかどうか"
      }
    },
    "pixelDensity": {
      "description": [
        "高ピクセル密度ディスプレイのピクセルスケーリングを設定します。デフォルトでは、ピクセル密度は表示密度に合わせて設定されています。これをオフにするには、pixelDensity(1) を呼び出します。<a href=\"#/p5/pixelDensity\">pixelDensity()</a> を引数なしで呼び出すと、スケッチの現在のピクセル密度が返されます。"
      ],
      "params": {
        "val": "Number: スケッチを拡大縮小するかどうか、またはどの程度拡大縮小するか"
      }
    },
    "displayDensity": {
      "description": [
        "スケッチが実行されている現在のディスプレイのピクセル密度を返します。"
      ],
      "returns": "Number: ディスプレイの現在のピクセル密度"
    },
    "getURL": {
      "description": [
        "現在の URL を取得します。注意:p5 エディターを使用している場合、スケッチが iframe に埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼント URL やシェア URL でスケッチを表示すると、正しく機能します。"
      ],
      "returns": "String: url"
    },
    "getURLPath": {
      "description": [
        "現在の URL パスを配列として取得します。注意:p5 エディターを使用している場合、スケッチが iframe に埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼント URL やシェア URL でスケッチを表示すると、正しく機能します。"
      ],
      "returns": "String[]: パス要素"
    },
    "getURLParams": {
      "description": [
        "現在の URL パラメーターをオブジェクトとして取得します。注意:p5 エディターを使用している場合、スケッチが iframe に埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼント URL やシェア URL でスケッチを表示すると、正しく機能します。"
      ],
      "returns": "Object: URL パラメーター"
    },
    "preload": {
      "description": [
        "<a href=\"#/p5/setup\">setup()</a> の直前に呼び出される <a href=\"#/p5/preload\">preload()</a> 関数は、外部ファイルの非同期ロードをブロッキング方式で処理するために使用されます。preload 関数が定義されている場合、<a href=\"#/p5/setup\">setup()</a> はその中の load コールがすべて終了するまで待機します。preload 関数の中には、load コール（<a href=\"#/p5/loadImage\">loadImage</a>、<a href=\"#/p5/loadJSON\">loadJSON</a>、<a href=\"#/p5/loadFont\">loadFont</a>、<a href=\"#/p5/loadStrings\">loadStrings</a> など）以外のものは入れないでください。非同期ロードが望ましい場合は、代わりにコールバックパラメーターを使用して <a href=\"#/p5/setup\">setup()</a> や他の場所で load メソッドを呼び出すことができます。",
        "デフォルトでは、「loading...」というテキストが表示されます。独自のローディングページを作成するには、ページに ID「p5_loading」の HTML 要素を含めてください。詳細は <a href=\"http://bit.ly/2kQ6Nio\">こちら</a>。"
      ]
    },
    "setup": {
      "description": [
        "プログラムが開始されるときに一度だけ呼び出される <a href=\"#/p5/setup\">setup()</a> 関数は、スクリーンサイズや背景色などの初期環境プロパティを定義し、プログラムの開始時に画像やフォントなどのメディアをロードするために使用されます。各プログラムにはひとつの <a href=\"#/p5/setup\">setup()</a> 関数があり、初回実行後に再度呼び出すことはできません。",
        "注意:<a href=\"#/p5/setup\">setup()</a> 内で宣言された変数は、<a href=\"#/p5/draw\">draw()</a> を含む他の関数内ではアクセスできません。"
      ]
    },
    "draw": {
      "description": [
        "<a href=\"#/p5/setup\">setup()</a> の直後に呼び出される <a href=\"#/p5/draw\">draw()</a> 関数は、プログラムが停止するか <a href=\"#/p5/noLoop\">noLoop()</a> が呼び出されるまで、そのブロック内に含まれるコードを連続して実行します。ただし、<a href=\"#/p5/setup\">setup()</a> で <a href=\"#/p5/noLoop\">noLoop()</a> が呼び出された場合でも、<a href=\"#/p5/draw\">draw()</a> は停止する前に一度だけ実行されます。<a href=\"#/p5/draw\">draw()</a> は自動的に呼び出されるため、明示的に呼び出すことはありません。",
        "<a href=\"#/p5/noLoop\">noLoop()</a>、<a href=\"#/p5/redraw\">redraw()</a>、<a href=\"#/p5/loop\">loop()</a> を使って制御する必要があります。<a href=\"#/p5/noLoop\">noLoop()</a> が <a href=\"#/p5/draw\">draw()</a> 内のコードの実行を停止した後、<a href=\"#/p5/redraw\">redraw()</a> は <a href=\"#/p5/draw\">draw()</a> 内のコードを1回だけ実行し、<a href=\"#/p5/loop\">loop()</a> は <a href=\"#/p5/draw\">draw()</a> 内のコードを連続して実行し続けるようになります。",
        "<a href=\"#/p5/draw\">draw()</a> が1秒間に何回実行されるかは、<a href=\"#/p5/frameRate\">frameRate()</a> 関数で制御できます。",
        "各スケッチにはひとつの <a href=\"#/p5/draw\">draw()</a> 関数があり、コードを連続して実行する場合や、<a href=\"#/p5/mousePressed\">mousePressed()</a> などのイベントを処理する場合には、<a href=\"#/p5/draw\">draw()</a> が必要です。場合によっては、例のようにプログラム内で <a href=\"#/p5/draw\">draw()</a> を空呼び出しすることがあります。",
        "描画座標系は、各 <a href=\"#/p5/draw\">draw()</a> 呼び出しの最初にリセットされることに注意が必要です。<a href=\"#/p5/draw\">draw()</a> 内で変換が実行された場合（例:スケール、回転、移動）、その効果は <a href=\"#/p5/draw\">draw()</a> の最初にもとに戻されるため、変換は時間とともに蓄積されません。一方で、適用されたスタイリング（例:塗りつぶし、ストロークなど）は継続して効果があります。"
      ]
    },
    "remove": {
      "description": [
        "p5 スケッチ全体を削除します。これにより、キャンバスと p5.js によって作成された要素が削除されます。また、描画ループを停止し、ウィンドウのグローバルスコープからプロパティやメソッドのバインドを解除します。新しい p5 スケッチを作成したい場合のために、変数 p5 を残します。必要に応じて、p5 = null を設定して消去することができます。p5 ライブラリによって作成されたすべての関数や変数やオブジェクトが削除されますが、コードによって作成された他のグローバル変数は残ります。"
      ]
    },
    "disableFriendlyErrors": {
      "description": [
        "フレンドリーエラーシステム（FES）の一部の機能をオフにし、必要に応じてパフォーマンスを大幅に向上させます。",
        "これにより、パフォーマンス低下を引き起こす FES の部分（引数チェックなど）が無効になります。パフォーマンスコストがないフレンドリーエラー（ファイルの読み込みに失敗した場合に説明的なエラーを表示する、グローバル空間で p5.js 関数をオーバーライドしようとした場合に警告を表示するなど）はそのまま残ります。",
        "<a href='https://github.com/processing/p5.js/wiki/Optimizing-p5.js-Code-for-Performance#disable-the-friendly-error-system-fes'>フレンドリーエラーシステムの無効化</a> を参照してください。"
      ]
    },
    "let": {
      "description": [
        "新しい変数を作成し、名前を付けます。変数は値のコンテナです。",
        "let で宣言された変数はブロックスコープを持ちます。これは、変数は <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block\">ブロック</a> 内で作成された範囲でのみ存在することを意味します。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let\">MDN のエントリ</a> より:ブロックスコープのローカル変数を宣言し、オプションで値を初期化します。"
      ]
    },
    "const": {
      "description": [
        "新しい定数を作成し、名前を付けます。let で作成された変数のように、const で作成された定数も値のコンテナですが、宣言された後は再代入できません。ただし、オブジェクトや配列などの非プリミティブデータ型の要素は変更可能です。したがって、変数に配列が割り当てられている場合でも、配列から要素を追加したり削除したりできますが、別の配列を再割り当てすることはできません。また、const を使って値なしで変数を宣言することはできません。",
        "定数はブロックスコープを持ちます。これは、定数は <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block\">ブロック</a> 内で作成された範囲でのみ存在することを意味します。定数は、すでに存在するスコープ内で再宣言することはできません。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const\">MDN のエントリ</a> より:読み取り専用の名前付き定数を宣言します。定数はブロックスコープであり、'let'文で定義された変数と同様です。定数の値は再代入で変更できず、再宣言もできません。"
      ]
    },
    "===": {
      "description": [
        "厳密な等価演算子 <a href=\"#/p5/===\">===</a> は、2つの値が等しく、同じ型であるかどうかをチェックします。",
        "比較式は常に <a href=\"#/p5/boolean\">ブール値</a> に評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDN エントリ</a> より: 非同一性演算子は、オペランドが等しくないおよび/または同じ型でない場合に true を返します。",
        "注: ウェブ上の一部の例では、比較に代わりに使われる <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Equality\">==</a> のような二重等号を見ることがあります。これは Javascript の非厳密な等価演算子です。これは、比較する前に比較される2つの値を同じ型に変換します。"
      ]
    },
    ">": {
      "description": [
        "より大きい演算子 <a href=\"#/p5/>\">></a> は、左の値が右の値より大きい場合に true に評価されます。 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDN で比較演算子に関する詳細情報があります。</a>"
      ]
    },
    ">=": {
      "description": [
        "大きいか等しい演算子 <a href=\"#/p5/>=\">>=</a> は、左の値が右の値より大きいか等しい場合に true に評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDN で比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "<": {
      "description": [
        "より小さい演算子 <a href=\"#/p5/<\"><</a> は、左の値が右の値より小さい場合に true に評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDN で比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "<=": {
      "description": [
        "小さいか等しい演算子 <a href=\"#/p5/<=\"><=</a> は、左の値が右の値より小さいか等しい場合に true に評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDN で比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "if-else": {
      "description": [
        "<a href=\"#/p5/if-else\">if-else</a> 文は、コードのフローを制御するのに役立ちます。",
        "'if'に続く括弧の間に条件が置かれ、その条件が <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/truthy\">truthy</a> に評価されると、次の中括弧の間のコードが実行されます。逆に、条件が <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\">falsy</a> に評価されると、'else'ブロックの中括弧の間のコードが代わりに実行されます。else ブロックの記述はオプションです。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else\">MDN エントリ</a> より: 'if'文は、指定された条件が truthy である場合に文を実行します。条件が falsy である場合、別の文を実行することができます。"
      ]
    },
    "function": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions\">関数</a> を作成し、名前を付けます。 <a href=\"#/p5/function\">関数</a> は、タスクを実行する一連の文です。",
        "オプションで、関数はパラメーターをもつことができます。<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Parameter\">パラメーター</a> は、関数にスコープされた変数で、関数を呼び出す際に値を割り当てることができます。複数のパラメーターは、カンマで区切って与えることができます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">MDN エントリ</a> より: 指定されたパラメーターで関数を宣言します。"
      ]
    },
    "return": {
      "description": [
        "関数から返される値を指定します。詳細は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/return\">MDN の return エントリ</a> をご覧ください。"
      ]
    },
    "boolean": {
      "description": [
        "数値または文字列をそのブール表現に変換します。数値の場合、ゼロ以外の値（正または負）は true と評価され、ゼロは false と評価されます。文字列の場合、値「true」は true と評価され、それ以外の値は false と評価されます。数値または文字列の配列が渡されると、同じ長さのブール配列が返されます。"
      ],
      "returns": "Boolean: 値のブール表現",
      "params": {
        "n": "String|Boolean|Number|Array: 解析する値"
      }
    },
    "string": {
      "description": [
        "<a href=\"#/p5/string\">文字列</a> は、JavaScript の7つの <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values\">プリミティブデータ型</a> のひとつです。文字列は一連のテキスト文字です。JavaScript では、文字列値はシングルクォーテーション（'）またはダブルクォーテーション（\"）で囲む必要があります。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/string\">MDN エントリ</a> から:文字列とは、テキストを表す一連の文字です。"
      ]
    },
    "number": {
      "description": [
        "<a href=\"#/p5/number\">数値</a> は、JavaScript の7つの <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values\">プリミティブデータ型</a> のひとつです。数値は整数または小数です。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/number\">数値の MDN エントリ</a>"
      ]
    },
    "object": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics\">MDN のオブジェクトの基本</a> から:<a href=\"#/p5/object\">オブジェクト</a> は、関連するデータおよび/または機能（通常、いくつかの変数と関数で構成されます。これらは、オブジェクト内にあるときにプロパティとメソッドと呼ばれます。）のコレクションです。"
      ]
    },
    "class": {
      "description": [
        "<a href=\"#/p5/class\">クラス</a> は、<a href=\"#/p5/object\">オブジェクト</a> の作成に使用されるテンプレートを作成および命名するためのものです。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/class\">MDN エントリ</a> から:クラス宣言は、プロトタイプベースの継承を使用して、指定された名前をもつ新しいクラスを作成します。"
      ]
    },
    "for": {
      "description": [
        "<a href=\"#/p5/for\">for</a> は、コードのひとつのセクションを複数回実行するために便利なループを作成します。",
        "'for ループ'は、括弧内に3つの異なる式が含まれ、すべてがオプションです。これらの式は、ループが実行される回数を制御するために使用されます。最初の式は、ループの初期状態を設定するために使用される文です。2番目の式は、各ループの前にチェックする条件です。この式が false を返すと、ループは終了します。3番目の式は、各ループの終わりに実行されます。これらの式は、セミコロン（;）で区切られます。空の式の場合、セミコロンだけが書かれます。",
        "ループ本体の（波括弧内の）コードは、2番目の式と3番目の式の評価の間に実行されます。",
        "どのループにおいても、ループを '終了' するか、テスト条件が false に評価されることを確認することが重要です。for ループにおけるテスト条件は、上記で詳述された2番目の式です。この式が最終的に false になるように確保することで、ループが無限に実行されることがなく、ブラウザーがクラッシュすることを防ぎます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for\">MDN エントリ</a> から:指定された文が false に評価されるまで、文を繰り返し実行するループを作成します。条件は文を実行した後に評価され、指定された文が少なくとも1回実行されます。"
      ]
    },
    "while": {
      "description": [
        "<a href=\"#/p5/while\">while</a> は、コードのひとつのセクションを複数回実行するために便利なループを作成します。",
        "'while ループ'では、ループ本体のコード（波括弧内）は、テスト条件（括弧内）が false になるまで繰り返し実行されます。<a href=\"#/p5/while\">while</a> では、コード本体を実行する前に条件をテストするため、条件が最初から false の場合、ループ本体または文は実行されません。",
        "どのループにおいても、ループを '終了' するか、テスト条件が false に評価されることを確認することが重要です。これにより、ループが無限に実行されることがなく、ブラウザーがクラッシュすることを防ぎます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while\">MDN エントリ</a> から:指定された条件が true に評価される限り、指定された文を繰り返し実行するループを作成します。条件は文を実行する前に評価されます。"
      ]
    },
    "createCanvas": {
      "description": [
        "システム変数の幅と高さは、この関数に渡されたパラメーターによって設定されます。 <a href=\"#/p5/createCanvas\">createCanvas()</a> を使用しない場合、ウィンドウにはデフォルトサイズの100 × 100ピクセルが与えられます。",
        "キャンバスを配置する別の方法については、<a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>キャンバスの位置づけ</a> Wiki ページを参照してください。",

        "ドキュメント内でキャンバス要素を作成し、ピクセル単位でその寸法を設定します。この関数は <a href=\"#/p5/setup\">setup()</a> の開始時に一度だけ呼び出すべきです。<a href=\"#/p5/createCanvas\">createCanvas</a> をスケッチで複数回呼び出すと、非常に予測不可能な動作が生じます。複数の描画キャンバスが必要な場合は、<a href=\"#/p5/createGraphics\">createGraphics()</a> (デフォルトでは非表示ですが表示することが可能です)を使用できます。",
        "重要な注意: 2D モード（つまり、<code>p5.Renderer</code> が設定されていない場合）では、原点（0,0）は画面の左上に位置します。3D モード（つまり、<code>p5.Renderer</code> が <code>WEBGL</code> に設定されている場合）では、原点はキャンバスの中心に位置します。詳しくは <a href=\"https://github.com/processing/p5.js/issues/1545\">この課題</a> をご覧ください。",
        "WebGL キャンバスは、ブラウザがサポートしていれば WebGL2 コンテキストを使用します。 <a href=\"#/p5/webglVersion\">webglVersion</a> プロパティを確認して使用しているバージョンを確認するか、 <a href=\"#/p5/setAttributes\">setAttributes({ version: 1 })</a> を呼び出して WebGL1 コンテキストを作成します。",
        "システム変数 width と height は、この関数に渡されたパラメーターによって設定されます。<a href=\"#/p5/createCanvas\">createCanvas()</a> を使用しない場合、ウィンドウにはデフォルトのサイズである 100 × 100ピクセルが割り当てられます。",
        "オプションとして、セレクター(例: document.getElementById(''))を使用して既存のキャンバスを渡すことができます。指定した場合は、後で<code>setAttributes()</code>を使用しないようにしてください。これは既存のキャンバスを取り除き、再度作成します。",
        "その他のキャンバスを配置する方法については、 <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>キャンバスの配置</a> の wiki ページを参照してください。"
      ],
      "returns": "p5.Renderer: キャンバスを保持する p5.Renderer へのポインタ",
      "params": {
        "w": "Number: キャンバスの幅",
        "h": "Number: キャンバスの高さ",
        "renderer": "Constant: (オプション) P2D または WEBGL",
        "canvas": "Object: (オプション) 既存の HTML Canvas 要素"
      }
    },
    "resizeCanvas": {
      "description": [
        "キャンバスを指定された幅と高さにリサイズします。キャンバスはクリアされ、直ちに描画が呼び出され、スケッチがリサイズされたキャンバスで再レンダリングされます。"
      ],
      "params": {
        "w": "Number: キャンバスの幅",
        "h": "Number: キャンバスの高さ",
        "noRedraw": "Boolean: (オプション) キャンバスを直ちに再描画しない"
      }
    },
    "noCanvas": {
      "description": [
        "canvas が必要ない p5 スケッチのデフォルトの canvas を削除します。"
      ]
    },
    "createGraphics": {
      "description": [
        "新しい p5.Graphics オブジェクトを作成して返します。オフスクリーンのグラフィックスバッファに描画する必要がある場合は、このクラスを使用します。2つのパラメーターは、ピクセル単位の幅と高さを定義します。",
        "WebGL p5.Graphics は、ブラウザが WebGL2 をサポートしている場合、 WebGL2 コンテキストを使用します。",
        "レンダラの <a href=\"#/p5/webglVersion\">pg.webglVersion</a> プロパティを確認して使用しているバージョンを確認するか、<a href=\"#/p5/setAttributes\">pg.setAttributes({ version: 1 })</a>を呼び出して WebGL1 コンテキストを作成します。",
        "オプションとして、セレクター(例: document.getElementById(''))を使用して既存のキャンバスを渡すことができます。デフォルトではこのキャンバスは非表示（オフスクリーンバッファ）になりますが、表示するには、要素のスタイルを display:block; に設定します。"
      ],
      "returns": "p5.Graphics: オフスクリーングラフィックバッファ",
      "params": {
        "w": "Number: オフスクリーングラフィックバッファの幅",
        "h": "Number: オフスクリーングラフィックバッファの高さ",
        "renderer": "Constant: (オプション) P2D または WEBGL。未定義の場合は P2D がデフォルトです。",
        "canvas": "Object: (オプション) 既存の HTML Canvas 要素"
      }
    },
    "createFramebuffer": {
      "description": [
        "新しい <a href=\"#/p5.Framebuffer\">p5.Framebuffer</a> を作成し返します。これは高性能な WebGL オブジェクトで、これに描画したり、テクスチャとして使用することができます。",
        "オプションには以下のものがあります: <ul> <li><code>format</code>: テクスチャのデータフォーマット。 <code>UNSIGNED_BYTE</code>、<code>FLOAT</code>、<code>HALF_FLOAT</code> のいずれか。デフォルトは <code>UNSIGNED_BYTE</code> です。</li> <li><code>channels</code>: 保存する色チャンネル。 <code>RGB</code> または <code>RGBA</code>。デフォルトでは、メインキャンバスのチャンネルを一致させます（<code>setAttributes</code> で無効化しない限り、アルファが含まれます）。</li> <li><code>depth</code>: デプスバッファを含めるかどうかのブール値。デフォルトは true です。</li> <li><code>depthFormat</code>: デプス情報のデータフォーマット。<code>UNSIGNED_INT</code> または <code>FLOAT</code>。デフォルトは <code>FLOAT</code> が利用可能な場合、それ以外の場合は <code>UNSIGNED_INT</code> です。</li> <li><code>antialias</code>: ブール値または数値で、エッジが滑らかになるようにレンダリングするかどうか、またはその場合、使用するサンプルの数。メインキャンバスが滑らかに描画されるかどうかにもとづきますが、デフォルトでは2つのサンプルを使用します。アンチエイリアシングは WebGL 2 が利用可能な場合のみサポートされます。</li> <li><code>width</code>: テクスチャの幅。デフォルトはメインキャンバスと一致します。</li> <li><code>height</code>: テクスチャの高さ。デフォルトはメインキャンバスと一致します。</li> <li><code>density</code>: テクスチャのピクセル密度。デフォルトはメインキャンバスのピクセル密度と一致します。</li> <li><code>textureFiltering</code>: <code>LINEAR</code>（色テクスチャから値を読み取る際に近くのピクセルが補間されます）か <code>NEAREST</code>（補間なし）。通常、テクスチャを画像として使用する場合は <code>LINEAR</code> を、テクスチャをデータとして読み取る場合は <code>NEAREST</code> を使用します。デフォルトは <code>LINEAR</code> です。</li> </ul>",
        "<code>width</code>、<code>height</code>、<code>density</code>が指定されている場合、フレームバッファはそのサイズを手動で変更されるまで保持します。それ以外の場合は、自動サイズが設定され、メインキャンバスのサイズや密度が変更されたときにそれに合わせて更新されます。"
      ],
      "params": {
        "options": "Object: (オプション) 設定を含むオプションのオブジェクト"
      }
    },
    "blendMode": {
      "description": [
        "定義されたモードにしたがって、ディスプレイウィンドウ内のピクセルをブレンドします。ソースピクセル（A）をディスプレイウィンドウ内の既存のピクセル（B）とブレンドするために、次のモードを選択できます。: <ul> <li><code>BLEND</code> - 色の線形補間:C = A*factor + B。 <b>これがデフォルトのブレンドモードです。</b></li> <li><code>ADD</code> - A と B の和</li> <li><code>DARKEST</code> - 最も暗い色だけが成功:C = min(A*factor, B)。</li> <li><code>LIGHTEST</code> - 最も明るい色だけが成功:C = max(A*factor, B)。</li> <li><code>DIFFERENCE</code> - 背景画像から色を減算します。<em>(2D)</em></li> <li><code>EXCLUSION</code> - <code>DIFFERENCE</code> に似ていますが、それほど極端ではありません。</li> <li><code>MULTIPLY</code> - 色を乗算し、結果は常に暗くなります。</li> <li><code>SCREEN</code> - 乗算の反対で、色の逆数を使用します。</li> <li><code>REPLACE</code> - ピクセルは他のピクセルと完全に置き換えられ、アルファ（透明度）値を使用しません。</li> <li><code>REMOVE</code> - A のアルファ強度で B からピクセルを削除します。</li> <li><code>OVERLAY</code> - <code>MULTIPLY</code> と <code>SCREEN </code> のミックス。暗い値を乗算し、明るい値をスクリーンにします。<em>(2D)</em></li> <li><code>HARD_LIGHT</code> - 50%以上の灰色の場合は <code>SCREEN</code>、それ以下の場合は <code>MULTIPLY</code>。<em>(2D)</em></li> <li><code>SOFT_LIGHT</code> - <code>DARKEST</code> と <code>LIGHTEST</code> のミックス。<code>OVERLAY</code> のように機能しますが、それほど厳しくありません。<em>(2D)</em></li> <li><code>DODGE</code> - 明るいトーンを明るくし、コントラストを高め、暗い部分を無視します。<em>(2D)</em></li> <li><code>BURN</code> - 暗い領域が適用され、コントラストが増加し、ライトを無視します。<em>(2D)</em></li> <li><code>SUBTRACT</code> - A と B の残差 <em>(3D)</em></li> </ul>",
        "<em>(2D)</em> は、このブレンドモードが <b>2D レンダラーのみ</b> で動作することを示します。<em>(3D)</em> は、このブレンドモードが <b>WebGL レンダラーのみ</b> で動作することを示します。"
      ],
      "params": {
        "mode": "キャンバスに設定するブレンドモードの定数。BLEND、DARKEST、LIGHTEST、DIFFERENCE、MULTIPLY、EXCLUSION、SCREEN、REPLACE、OVERLAY、HARD_LIGHT、SOFT_LIGHT、DODGE、BURN、ADD、REMOVE、SUBTRACT のいずれか。"
      }
    },
    "drawingContext": {
      "description": [
        "p5.js API にはグラフィックを作成するための多くの機能がありますが、p5 では公開されていないネイティブの HTML5 Canvas 機能があります。ただし、変数 <code>drawingContext</code> を使用して直接呼び出すことができます。これは <code>canvas.getContext('2d');</code> または <code>canvas.getContext('webgl');</code> を呼び出すのと同等です。可能な描画関数については、ネイティブキャンバス API の <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">リファレンス</a> を参照してください。"
      ]
    },
    "noLoop": {
      "description": [
        "<a href=\"#/p5/draw\">draw()</a> 内のコードを継続的に実行することを停止します。 <a href=\"#/p5/loop\">loop()</a> が呼び出された場合、<a href=\"#/p5/draw\">draw()</a> 内のコードが再び継続的に実行されます。 <a href=\"#/p5/setup\">setup()</a> 内の <a href=\"#/p5/noLoop\">noLoop()</a> を使用する場合は、ブロック内の最後の行にする必要があります。",
        "<a href=\"#/p5/noLoop\">noLoop()</a> を使用すると、<a href=\"#/p5/mousePressed\">mousePressed()</a> や <a href=\"#/p5/keyPressed\">keyPressed()</a> などのイベント処理関数内で画面を操作またはアクセスすることができません。代わりに、これらの関数を使用して <a href=\"#/p5/redraw\">redraw()</a> または <a href=\"#/p5/loop\">loop()</a> を呼び出し、<a href=\"#/p5/draw\">draw()</a> を実行して、画面を適切に更新します。つまり、<a href=\"#/p5/noLoop\">noLoop()</a> が呼び出された場合、描画は行われず、<a href=\"#/p5/saveFrames\">saveFrames()</a> や <a href=\"#/p5/loadPixels\">loadPixels()</a> などの関数を使用できない可能性があることに注意してください。",
        "スケッチがサイズ変更された場合、<a href=\"#/p5/noLoop\">noLoop()</a> が指定された後でも、<a href=\"#/p5/redraw\">redraw()</a> が呼び出されてスケッチが更新されることに注意してください。そうしないと、スケッチが奇妙な状態になり、<a href=\"#/p5/loop\">loop()</a> が呼び出されるまで戻らなくなります。",
        "<a href=\"#/p5/isLooping\">isLooping()</a> を使用して、<a href=\"#/p5/loop\">loop()</a> の現在の状態を確認してください。"
      ]
    },
    "loop": {
      "description": [
        "デフォルトでは、p5.js は draw() を継続的にループし、その中にあるコードを実行します。ただし、<a href=\"#/p5/draw\">draw()</a> ループは <a href=\"#/p5/noLoop\">noLoop()</a> を呼び出すことで停止させることができます。その場合、<a href=\"#/p5/draw\">draw()</a> ループは loop() で再開できます。",
        "setup() 内から loop() を呼び出さないでください。",
        "<a href=\"#/p5/isLooping\">isLooping()</a> を使用して、<a href=\"#/p5/loop\">loop()</a> の現在の状態を確認してください。"
      ]
    },
    "isLooping": {
      "description": [
        "デフォルトでは、p5.js は draw() を継続的にループし、その中にあるコードを実行します。スケッチが <a href=\"#/p5/noLoop\">noLoop()</a> で停止された場合、または <a href=\"#/p5/loop\">loop()</a> で再開された場合、isLooping() はカスタムイベントハンドラ内で使用するために現在の状態を返します。"
      ],
      "returns": "Boolean:"
    },
    "push": {
      "description": [
        "<a href=\"#/p5/push\">push()</a> 関数は、現在の描画スタイルの設定と変換を保存し、<a href=\"#/p5/pop\">pop()</a> 関数はこれらの設定を復元します。これらの関数は常に一緒に使用されることに注意してください。これにより、スタイルと変換の設定を変更し、後でもとに戻すことができます。<a href=\"#/p5/push\">push()</a> で新しい状態が開始されると、現在のスタイルと変換情報が利用されます。<a href=\"#/p5/push\">push()</a> と <a href=\"#/p5/pop\">pop()</a> 関数は、より多くの制御を提供するために組み込むことができます（2つ目の例を参照してください）。",
        "<a href=\"#/p5/push\">push()</a> は、次の関数によって制御される現在の変換状態とスタイル設定に関連する情報を保存します:<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/noFill\">noFill()</a>、<a href=\"#/p5/noStroke\">noStroke()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/tint\">tint()</a>、<a href=\"#/p5/noTint\">noTint()</a>、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>、<a href=\"#/p5/strokeCap\">strokeCap()</a>、<a href=\"#/p5/strokeJoin\">strokeJoin()</a>、<a href=\"#/p5/imageMode\">imageMode()</a>、<a href=\"#/p5/rectMode\">rectMode()</a>、<a href=\"#/p5/ellipseMode\">ellipseMode()</a>、<a href=\"#/p5/colorMode\">colorMode()</a>、<a href=\"#/p5/textAlign\">textAlign()</a>、<a href=\"#/p5/textFont\">textFont()</a>、<a href=\"#/p5/textSize\">textSize()</a>、<a href=\"#/p5/textLeading\">textLeading()</a>、<a href=\"#/p5/applyMatrix\">applyMatrix()</a>、<a href=\"#/p5/resetMatrix\">resetMatrix()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>、<a href=\"#/p5/shearX\">shearX()</a>、<a href=\"#/p5/shearY\">shearY()</a>、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/noiseSeed\">noiseSeed()</a>。",
        "WebGL モードでは、追加のスタイル設定が保存されます。これらは、次の関数によって制御されます:<a href=\"#/p5/setCamera\">setCamera()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/texture\">texture()</a>、<a href=\"#/p5/specularMaterial\">specularMaterial()</a>、<a href=\"#/p5/shininess\">shininess()</a>、<a href=\"#/p5/normalMaterial\">normalMaterial()</a>、および <a href=\"#/p5/shader\">shader()</a>。"
      ]
    },
    "pop": {
      "description": [
        "<a href=\"#/p5/push\">push()</a> 関数は、現在の描画スタイルの設定と変換を保存し、<a href=\"#/p5/pop\">pop()</a> 関数はこれらの設定を復元します。これらの関数は常に一緒に使用されることに注意してください。これにより、スタイルと変換の設定を変更し、後でもとに戻すことができます。<a href=\"#/p5/push\">push()</a> で新しい状態が開始されると、現在のスタイルと変換情報が利用されます。<a href=\"#/p5/push\">push()</a> と <a href=\"#/p5/pop\">pop()</a> 関数は、より多くの制御を提供するために組み込むことができます（2つ目の例を参照してください）。",
        "<a href=\"#/p5/push\">push()</a> は、次の関数によって制御される現在の変換状態とスタイル設定に関連する情報を保存します:<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/noFill\">noFill()</a>、<a href=\"#/p5/noStroke\">noStroke()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/tint\">tint()</a>、<a href=\"#/p5/noTint\">noTint()</a>、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>、<a href=\"#/p5/strokeCap\">strokeCap()</a>、<a href=\"#/p5/strokeJoin\">strokeJoin()</a>、<a href=\"#/p5/imageMode\">imageMode()</a>、<a href=\"#/p5/rectMode\">rectMode()</a>、<a href=\"#/p5/ellipseMode\">ellipseMode()</a>、<a href=\"#/p5/colorMode\">colorMode()</a>、<a href=\"#/p5/textAlign\">textAlign()</a>、<a href=\"#/p5/textFont\">textFont()</a>、<a href=\"#/p5/textSize\">textSize()</a>、<a href=\"#/p5/textLeading\">textLeading()</a>、<a href=\"#/p5/applyMatrix\">applyMatrix()</a>、<a href=\"#/p5/resetMatrix\">resetMatrix()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>、<a href=\"#/p5/shearX\">shearX()</a>、<a href=\"#/p5/shearY\">shearY()</a>、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/noiseSeed\">noiseSeed()</a>。",
        "WebGL モードでは、追加のスタイル設定が保存されます。これらは、次の関数によって制御されます:<a href=\"#/p5/setCamera\">setCamera()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/texture\">texture()</a>、<a href=\"#/p5/specularMaterial\">specularMaterial()</a>、<a href=\"#/p5/shininess\">shininess()</a>、<a href=\"#/p5/normalMaterial\">normalMaterial()</a>、および <a href=\"#/p5/shader\">shader()</a>。"
      ]
    },
    "redraw": {
      "description": [
        "<a href=\"#/p5/draw\">draw()</a> 内のコードを1回実行します。この関数は、<a href=\"#/p5/mousePressed\">mousePressed()</a> や <a href=\"#/p5/keyPressed\">keyPressed()</a> で登録されたイベントが発生した場合など、必要に応じて表示ウィンドウを更新するプログラムに使用します。",
        "プログラムの構造では、<a href=\"#/p5/redraw\">redraw()</a> は、<a href=\"#/p5/mousePressed\">mousePressed()</a> などのイベント内で呼び出すのが理にかなっています。これは、<a href=\"#/p5/redraw\">redraw()</a> が <a href=\"#/p5/draw\">draw()</a> を即座に実行しないからです（更新が必要であることを示すフラグのみが設定されます）。",
        "<a href=\"#/p5/redraw\">redraw()</a> 関数は、<a href=\"#/p5/draw\">draw()</a> 内で呼び出されると正常に動作しません。アニメーションの有効/無効を切り替えるには、<a href=\"#/p5/loop\">loop()</a> と <a href=\"#/p5/noLoop\">noLoop()</a> を使用してください。",
        "さらに、メソッド呼び出しごとの再描画回数を設定できます。再描画の回数として整数をひとつだけパラメーターに追加してください。"
      ],
      "params": {
        "n": "Integer: (オプション) n 回再描画します。デフォルト値は1です。"
      }
    },
    "p5": {
      "description": [
        "<code>p5()</code> コンストラクターを使用すると、「グローバルモード」の代わりに「インスタンスモード」を有効にすることができます。これは高度な話題です。以下に簡単な説明と例を示します。詳細については、<a target=\"blank\" href=\"https://www.youtube.com/watch?v=Su792jEauZg&feature=youtu.be\">Dan Shiffman's Coding Train ビデオチュートリアル</a> または <a target=\"blank\" href=\"https://github.com/processing/p5.js/wiki/p5.js-overview#instantiation--namespace\">チュートリアルページ</a> を参照してください。",
        "デフォルトでは、すべての p5.js 関数はグローバル名前空間（つまり、window オブジェクトにバインド）にあります。これは、<code>ellipse()</code>、<code>fill()</code> などの関数を単純に呼び出すことができます。ただし、他の JS ライブラリと混ぜて使っている場合（同期的または非同期的に）、または独自の長いプログラムを書いている場合、これは不便になるかもしれません。現在、p5.js では、この問題を回避するための「インスタンスモード」という方法をサポートしています。インスタンスモードでは、すべての p5 関数が単一の変数にバインドされ、グローバル名前空間を汚染しません。",
        "オプションで、キャンバスやその他の要素に追加するデフォルトのコンテナを、2番目の引数で指定できます。html 内の要素の ID、または html ノード自体を指定できます。",
        "このようにインスタンスを作成することで、各々が独自のセットアップ変数でラップされるため、ひとつの Web ページに複数の p5 スケッチをもつことができることに注意してください。もちろん、グローバルモードで複数のスケッチをもつために、iframes を使うこともできます。"
      ],
      "params": {
        "sketch": "Object: p5.js スケッチを含む関数",
        "node": "String|Object: スケッチを含む HTML DOM ノードの ID またはポインタ"
      }
    },
    "applyMatrix": {
      "description": [
        "現在の行列に、パラメーターで指定された行列を乗算します。これは、translate, scale, shear, rotate を一度に実行できる強力な操作です。変換行列については、<a href=\"https://en.wikipedia.org/wiki/Transformation_matrix\">Wikipedia</a> で詳しく学ぶことができます。",
        "ここでの引数の命名は、<a href= \"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-transform\"> WHATWG 仕様</a> の命名にしたがっており、以下の形式の変換行列に対応しています:<blockquote>",
        "<img style=\"max-width: 150px\" src=\"assets/transformation-matrix.png\" alt=\"applyMatrix が呼び出されたときに使用される変換行列\"/> </blockquote>",
        "<img style=\"max-width: 300px\" src=\"assets/transformation-matrix-4-4.png\" alt=\"applyMatrix が4 x 4行列で呼び出されたときに使用される変換行列\"/>"
      ],
      "params": {
        "arr": "Array: 数値の配列 - 6または16の長さである必要があります（2 x 3または4 x 4行列値）",
        "a": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "b": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "c": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "d": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "e": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "f": "Number: 乗算される2 x 3または4 x 4行列を定義する数値",
        "g": "Number: 乗算される4 x 4行列を定義する数値",
        "h": "Number: 乗算される4 x 4行列を定義する数値",
        "i": "Number: 乗算される4 x 4行列を定義する数値",
        "j": "Number: 乗算される4 x 4行列を定義する数値",
        "k": "Number: 乗算される4 x 4行列を定義する数値",
        "l": "Number: 乗算される4 x 4行列を定義する数値",
        "m": "Number: 乗算される4 x 4行列を定義する数値",
        "n": "Number: 乗算される4 x 4行列を定義する数値",
        "o": "Number: 乗算される4 x 4行列を定義する数値",
        "p": "Number: 乗算される4 x 4行列を定義する数値"
      }
    },
    "resetMatrix": {
      "description": ["現在の行列を単位行列に置き換えます。"]
    },
    "rotate": {
      "description": [
        "指定された角度パラメーターで図形を回転させます。この関数は <a href=\"#/p5/angleMode\">angleMode</a> を考慮しているため、角度は RADIANS または DEGREES で入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。変換はその後のすべての操作に適用され、関数への後続の呼び出しは効果を累積します。たとえば、rotate(HALF_PI)を呼び出した後に rotate(HALF_PI)を呼び出すことは、rotate(PI)と同じです。すべての変換は、<a href=\"#/p5/draw\">draw()</a> が再度始まるとリセットされます。",
        "技術的には、<a href=\"#/p5/rotate\">rotate()</a> は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a> および <a href=\"#/p5/pop\">pop()</a> でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 現在の angleMode に応じて、ラジアンまたは度で指定された回転角",
        "axis": "p5.Vector|Number[]: (オプション) (3D の場合) 回転する軸"
      }
    },
    "rotateX": {
      "description": [
        "指定された角度パラメーターで X 軸を中心に図形を回転させます。角度は RADIANS または DEGREES で入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a> が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在の angleMode に応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "rotateY": {
      "description": [
        "指定された角度パラメーターで Y 軸を中心に図形を回転させます。角度は RADIANS または DEGREES で入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a> が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在の angleMode に応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "rotateZ": {
      "description": [
        "指定された角度パラメーターで Z 軸を中心に図形を回転させます。角度は RADIANS または DEGREES で入力できます。",
        "このメソッドは、WebGL モードでのみ動作します。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a> が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在の angleMode に応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "scale": {
      "description": [
        "図形のサイズを拡大または縮小して、頂点を拡大または縮小します。オブジェクトは常に座標系に対する相対原点からスケーリングします。スケール値は10進数のパーセンテージで指定されます。たとえば、関数呼び出し scale(2.0)は、図形の寸法を200%増加させます。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を乗算します。たとえば、scale(2.0)を呼び出してから scale(1.5)を呼び出すことは、scale(3.0)と同じです。 <a href=\"#/p5/scale\">scale()</a> が <a href=\"#/p5/draw\">draw()</a> 内で呼び出される場合、ループが再開すると変換がリセットされます。",
        "この関数は、z パラメーターを使用して WebGL モードでのみ利用できます。この関数は、<a href=\"#/p5/push\">push()</a> および <a href=\"#/p5/pop\">pop()</a> でさらに制御できます。"
      ],
      "params": {
        "s": "Number|p5.Vector|Number[]: オブジェクトのスケール率、または複数の引数が与えられた場合は x 軸でのオブジェクトのスケール率",
        "y": "Number: (オプション) y 軸でのオブジェクトのスケール率",
        "z": "Number: (オプション) z 軸でのオブジェクトのスケール率（webgl のみ）",
        "scales": "p5.Vector|Number[]: オブジェクトをスケーリングするための各軸のパーセント"
      }
    },
    "shearX": {
      "description": [
        "angle パラメーターで指定された量に応じて、図形を x 軸周りにシアします。角度は現在の angleMode で指定する必要があります。オブジェクトは常に原点に対する相対位置を中心にシアされ、正の数値はオブジェクトを時計回りにシアします。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。たとえば、shearX(PI / 2)を呼び出した後に shearX(PI / 2)を呼び出すと、shearX(PI)と同じになります。<a href=\"#/p5/shearX\">shearX()</a> が <a href=\"#/p5/draw\">draw()</a> 内で呼び出された場合、ループが再度始まるときに変換がリセットされます。",
        "技術的には、<a href=\"#/p5/shearX\">shearX()</a> は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a> および <a href=\"#/p5/pop\">pop()</a> 関数でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 角度は、現在の angleMode に応じて、ラジアンまたは度で指定します"
      }
    },
    "shearY": {
      "description": [
        "angle パラメーターで指定された量に応じて、図形を y 軸周りにシアします。角度は現在の angleMode で指定する必要があります。オブジェクトは常に原点に対する相対位置を中心にシアされ、正の数値はオブジェクトを時計回りにシアします。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。たとえば、shearY(PI / 2)を呼び出した後に shearY(PI / 2)を呼び出すと、shearY(PI)と同じになります。<a href=\"#/p5/shearY\">shearY()</a> が <a href=\"#/p5/draw\">draw()</a> 内で呼び出された場合、ループが再度始まるときに変換がリセットされます。",
        "技術的には、<a href=\"#/p5/shearY\">shearY()</a> は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a> および <a href=\"#/p5/pop\">pop()</a> 関数でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 角度は、現在の angleMode に応じて、ラジアンまたは度で指定します"
      }
    },
    "translate": {
      "description": [
        "表示ウィンドウ内のオブジェクトを移動する量を指定します。x パラメーターは左/右の移動を指定し、y パラメーターは上/下の移動を指定します。",
        "変換は累積的であり、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。たとえば、translate(50, 0)を呼び出した後に translate(20, 0)を呼び出すと、translate(70, 0)と同じになります。 <a href=\"#/p5/translate\">translate()</a> が <a href=\"#/p5/draw\">draw()</a> 内で呼び出された場合、ループが再度始まるときに変換がリセットされます。この関数は、<a href=\"#/p5/push\">push()</a> および <a href=\"#/p5/pop\">pop()</a> を使用してさらに制御できます。"
      ],
      "params": {
        "x": "Number: 左/右の移動",
        "y": "Number: 上/下の移動",
        "z": "Number: (オプション) 前/後ろの移動 (WebGL のみ)",
        "vector": "p5.Vector: 移動するベクトル"
      }
    },
    "storeItem": {
      "description": [
        "キー名の下にローカルストレージに値を保存します。ローカルストレージはブラウザーに保存され、閲覧セッションやページのリロード間で持続します。キーは変数名であることができますが、必ずしもそうである必要はありません。<a href=\"#/p5/getItem\">getItem</a> を参照して保存されたアイテムを取得してください。パスワードや個人情報などの機密データは、ローカルストレージに保存しないでください。"
      ],
      "params": {
        "key": "String",
        "value": "String|Number|Object|Boolean|p5.Color|p5.Vector"
      }
    },
    "getItem": {
      "description": [
        "storeItem() を使用してローカルストレージに保存されたアイテムの値を返します。"
      ],
      "returns": "Number|Object|String|Boolean|p5.Color|p5.Vector: 保存されたアイテムの値",
      "params": {
        "key": "String: ローカルストレージに保存するために使用した名前"
      }
    },
    "clearStorage": {
      "description": [
        "現在のドメインに対して storeItem() で設定されたすべてのローカルストレージアイテムをクリアします。"
      ]
    },
    "removeItem": {
      "description": ["storeItem() で保存されたアイテムを削除します。"],
      "params": {
        "key": "String"
      }
    },
    "createStringDict": {
      "description": [
        "キー・バリューペアや提供されたオブジェクトを使用して、p5.StringDict の新しいインスタンスを作成します。"
      ],
      "returns": "p5.StringDict:",
      "params": {
        "key": "String",
        "value": "String",
        "object": "Object: オブジェクト"
      }
    },
    "createNumberDict": {
      "description": [
        "提供されたキー・バリューペアやオブジェクトを使用して、<a href=\"#/p5.NumberDict\">p5.NumberDict</a> の新しいインスタンスを作成します。"
      ],
      "returns": "p5.NumberDict:",
      "params": {
        "key": "Number",
        "value": "Number",
        "object": "Object: オブジェクト"
      }
    },
    "select": {
      "description": [
        "与えられた CSS セレクタ文字列（ID、クラス、タグ名、またはそれらの組み合わせ）と一致するページ上の最初の要素を検索し、<a href=\"#/p5.Element\">p5.Element</a> として返します。DOM ノード自体は.elt でアクセスできます。見つからない場合は null を返します。検索範囲としてコンテナを指定することもできます。"
      ],
      "returns": "p5.Element|null: 見つかったノードを含む <a href=\"#/p5.Element\">p5.Element</a>",
      "params": {
        "selectors": "String: 検索対象の要素の CSS セレクタ文字列",
        "container": "String|p5.Element|HTMLElement: (オプション) CSS セレクタ文字列、<a href=\"#/p5.Element\">p5.Element</a>、または検索対象の HTML 要素"
      }
    },
    "selectAll": {
      "description": [
        "与えられた CSS セレクタ文字列（ID、クラス、タグ名、またはそれらの組み合わせ）と一致するページ上の要素を検索し、それらを配列内の <a href=\"#/p5.Element\">p5.Element</a> として返します。DOM ノード自体は.elt でアクセスできます。見つからない場合は空の配列を返します。検索範囲としてコンテナを指定することもできます。"
      ],
      "returns": "p5.Element[]: 見つかったノードを含む <a href=\"#/p5.Element\">p5.Element</a> の配列",
      "params": {
        "selectors": "String: 検索対象の要素の CSS セレクタ文字列",
        "container": "String|p5.Element|HTMLElement: (オプション) CSS セレクタ文字列、<a href=\"#/p5.Element\">p5.Element</a> 、または検索対象の HTML 要素"
      }
    },
    "removeElements": {
      "description": [
        "p5 によって作成されたすべての要素を削除しますが、<a href=\"#/p5/createCanvas\">createCanvas</a> や <a href=\"#/p5/createGraphics\">createGraphics</a> で作成されたキャンバス/グラフィック要素は除外されます。イベントハンドラが削除され、要素が DOM から削除されます。"
      ]
    },
    "changed": {
      "description": [
        ".<a href=\"#/p5.Element/changed\">changed()</a> 関数は、要素の値が変更されたときに呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の値が変更されたときに発火する関数。代わりに <code>false</code> が渡されると、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "input": {
      "description": [
        ".<a href=\"#/p5.Element/input\">input()</a> 関数は、要素でユーザー入力が検出されると呼び出されます。input イベントは、入力要素でのキーストロークや、スライダー要素の変更を検出するためによく使われます。これを使って、要素固有のイベントリスナーをアタッチできます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素内でユーザー入力が検出されると発火する関数。 <code>false</code> が代わりに渡されると、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "createDiv": {
      "description": [
        "与えられた内部 HTML をもつ DOM 内に <code>&lt;div&gt;&lt;/div&gt;</code> 要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部 HTML"
      }
    },
    "createP": {
      "description": [
        "与えられた内部 HTML をもつ DOM 内の <code>&lt;p&gt;&lt;/p&gt;</code> 要素を作成します。段落の長さのテキストに使用されます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部 HTML"
      }
    },
    "createSpan": {
      "description": [
        "与えられた内部 HTML をもつ DOM 内の <code>&lt;span&gt;&lt;/span&gt;</code> 要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部 HTML"
      }
    },
    "createImg": {
      "description": [
        "与えられた src および代替テキストを使用して、DOM 内に <code>&lt;img&gt;</code> 要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "src": "String: 画像の src パスまたは URL",
        "alt": "String: 画像が読み込まれない場合に使用される <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes\">代替テキスト</a>。画像が意図的に表示されない場合は空の文字列（<code>\"\"</code>）を使用できます。",
        "crossOrigin": "String: <code>img</code> 要素の <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\">crossOrigin プロパティ</a>。'anonymous'または'use-credentials'を使用して、クロスオリジンアクセスで画像を取得します（後で <code>canvas</code> として使用するため）。空の文字列（<code>\"\"</code>）が渡された場合、CORS は使用されません",
        "successCallback": "Function: (オプション) 画像データが読み込まれると、引数として <a href=\"#/p5.Element\">p5.Element</a> を使用して呼び出されるコールバック"
      }
    },
    "createA": {
      "description": [
        "DOM に <code>&lt;a&gt;&lt;/a&gt;</code> 要素を作成し、ハイパーリンクを含めます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "href": "String: リンク先のページの URL",
        "html": "String: リンク要素内に表示する内部 HTML",
        "target": "String: (オプション) 新しいリンクを開く対象。_blank、_self、_parent、_top のいずれか。"
      }
    },
    "createSlider": {
      "description": [
        "DOM にスライダーの <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。.size() を使って、スライダーの表示長さを設定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "min": "Number:  スライダーの最小値",
        "max": "Number:  スライダーの最大値",
        "value": "Number:  (オプション) スライダーのデフォルト値",
        "step": "Number:  (オプション) スライダーの各目盛りのステップサイズ (ステップが0に設定されている場合、スライダーは最小値から最大値まで連続して移動します)"
      }
    },
    "createButton": {
      "description": [
        "DOM に <code>&lt;button&gt;&lt;/button&gt;</code> 要素を作成します。.size() を使って、ボタンの表示サイズを設定します。.mousePressed() を使って、押下時の動作を指定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "label": "String:  ボタンに表示されるラベル",
        "value": "String:  (オプション) ボタンの値"
      }
    },
    "createCheckbox": {
      "description": [
        "DOM にチェックボックスの <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。チェックボックスに対して .checked() を呼び出すと、チェックされているかどうかを示すブール値が返されます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "label": "String: (オプション) チェックボックスの後に表示されるラベル",
        "value": "Boolean: (オプション) チェックボックスの値; チェックされている場合は true、チェックされていない場合は false"
      }
    },
    "createSelect": {
      "description": [
        "DOMに<code>&lt;select&gt;&lt;/select&gt;</code>要素のドロップダウンメニューを作成します。既存の選択ボックスを選択する際に、<a href=\"#/p5.Element\">p5.Element</a>に選択関連のメソッドも割り当てます。メニューのオプションは<code>name</code>（表示テキスト）で一意です。 <ul> <li><code>.option(name, [value])</code> を使用して、<code>name</code>（表示テキスト）および<code>value</code>を選択要素に追加するオプションを追加できます。選択要素内に<code>name</code>が既に存在する場合は、このメソッドでその値を<code>value</code>に変更します。</li> <li><code>.value()</code> は現在選択されているオプションを返します。</li> <li><code>.selected()</code> は現在のドロップダウン要素（<a href=\"#/p5.Element\">p5.Element</a>のインスタンス）を返します。</li> <li><code>.selected(value)</code>を使用すると、指定されたオプションをページが最初に読み込まれたときにデフォルトで選択されるようにすることができます。</li> <li><code>.disable()</code> はドロップダウン要素全体を無効にします。</li> <li><code>.disable(value)</code> は指定されたオプションを無効にします。</li> <li><code>.enable()</code> はドロップダウン要素全体が初めに無効化されている場合、ドロップダウン要素全体を有効にします。</li> <li><code>.enable(value)</code> は初期オプションが無効な場合、指定したオプションを有効にします。</li> </ul>"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "multiple": "Boolean: (オプション) ドロップダウンが複数の選択肢をサポートする場合は true",
        "existing": "Object: DOM の select 要素"
      }
    },
    "createRadio": {
      "description": [
        "DOM にラジオボタン要素を作成します。また、既存のラジオボタンに <a href=\"#/p5.Element/\">p5.Element</a> のメソッドを割り当てるのに役立ちます。 <ul> <li><code>.option(value, [label])</code> は、要素に新しいオプションを作成するために使用できます。すでに値が存在するオプションがある場合は、それが返されます。<code>value</code> の入力として文字列値を使用することが推奨されます。オプションとして、2つ目の引数としてラベルを提供できます。</li> <li><code>.remove(value)</code> は、要素のオプションを削除するために使用できます。<code>value</code> の入力として文字列値が推奨されます。</li> <li><code>.value()</code> メソッドは、現在選択されている値を返します。</li> <li><code>.selected()</code> メソッドは、現在選択されている入力要素を返します。</li> <li><code>.selected(value)</code> メソッドは、オプションを選択して返します。<code>value</code> の入力として文字列値が推奨されます。</li> <li><code>.disable(Boolean)</code> メソッドは、ラジオボタン要素全体を有効/無効にします。</li> </ul>"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "containerElement": "Object: すべての既存のラジオ入力がオプションと見なされる div または span の HTML 要素コンテナ。",
        "name": "String: (オプション) 各入力要素の名前パラメーター。"
      }
    },
    "createColorPicker": {
      "description": [
        "DOM 上でカラー入力のための colorPicker 要素を作成します。.value() メソッドは16進数のカラー文字列（#rrggbb）を返します。.color() メソッドは現在選択されているカラーの <a href=\"#/p5.Color\">p5.Color</a> オブジェクトを返します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "value": "String|p5.Color: 要素のデフォルトカラー(オプション)"
      }
    },
    "createInput": {
      "description": [
        "DOM でテキスト入力用の <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。.<a href=\"#/p5.Element/size\">size()</a> を使ってボックスの表示長さを設定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "value": "String: 入力ボックスのデフォルト値",
        "type": "String: テキストの種類(オプション)、例:text、password など。デフォルトは text。最初に値を指定する必要があります。"
      }
    },
    "createFileInput": {
      "description": [
        "DOM に 'file' タイプの <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。これにより、ユーザーはローカルファイルをスケッチで使用するために選択できます。"
      ],
      "returns": "p5.Element: 作成された DOM 要素を保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "callback": "Function: ファイルが読み込まれたときのコールバック関数",
        "multiple": "Boolean: (オプション) 複数のファイルを選択できるようにするオプション"
      }
    },
    "createVideo": {
      "description": [
        "HTML5 の <code>&lt;video&gt;</code> 要素を DOM に作成し、オーディオ/ビデオのシンプルな再生ができます。デフォルトで表示され、.<a href=\"#/p5.Element/hide\">hide()</a> で非表示にし、<a href=\"#/p5/image\">image()</a> を使ってキャンバスに描画できます。第1引数は、ビデオファイルへの単一の文字列パス、または同じビデオの異なる形式への文字列パスの配列のいずれかです。これは、異なるブラウザーでビデオを再生できるようにするために役立ちます。各ブラウザーは異なる形式をサポートしています。サポートされている形式についての詳細は、<a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>このページ</a> を参照してください。"
      ],
      "returns": "p5.MediaElement: ビデオ <a href=\"#/p5.MediaElement\">p5.MediaElement</a> へのポインタ",
      "params": {
        "src": "String|String[]: ビデオファイルへのパス、または異なるブラウザーをサポートするためのパスの配列",
        "callback": "Function: (オプション) 'canplaythrough' イベントが発火したときに呼ばれるコールバック関数。つまり、ブラウザーがメディアを再生でき、コンテンツのさらなるバッファリングが不要な状態でメディアを最後まで再生できると推定されるデータがロードされたとき"
      }
    },
    "createAudio": {
      "description": [
        "HTML5 の <code>&lt;audio&gt;</code> 要素を DOM 内に隠し、シンプルなオーディオ再生を行います。第1引数は、オーディオファイルへの単一の文字列パス、または同じオーディオの異なる形式への文字列パスの配列のいずれかです。これは、各ブラウザーが異なる形式をサポートしているため、オーディオが異なるブラウザー間で再生できることを確認するために役立ちます。<a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>このページでは、サポートされている形式に関する詳細情報が提供されています</a>。"
      ],
      "returns": "p5.MediaElement: オーディオへのポインタ <a href=\"#/p5.MediaElement\">p5.MediaElement</a>",
      "params": {
        "src": "String|String[]: (オプション) オーディオファイルへのパス、または異なるブラウザーをサポートするためのパスの配列",
        "callback": "Function: (オプション) 'canplaythrough' イベントが発火した際に呼び出されるコールバック関数。つまり、ブラウザーがメディアを再生でき、コンテンツのさらなるバッファリングなしにメディアを最後まで再生できると予測される十分なデータがロードされたとき"
      }
    },
    "createCapture": {
      "description": [
        "ウェブカメラの音声/ビデオフィードを含む新しい HTML5 の <code>&lt;video&gt;</code> 要素を作成します。この要素はキャンバスとは別で、デフォルトで表示されます。要素は、.<a href=\"#/p5.Element/hide\">hide()</a> を使って非表示にすることができます。フィードは <a href=\"#/p5/image\">image()</a> を使ってキャンバスに描画することができます。loadedmetadata プロパティは要素が完全にロードされたことを検出するために使用できます(2つ目の例を参照)。",
        "フィードのより具体的なプロパティは、Constraints オブジェクトを渡すことで指定できます。<a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'>W3C の仕様</a> に可能なプロパティが記載されています。ただし、すべてのブラウザーでこれらがサポートされているわけではありません。",
        "<em>セキュリティに関する注意</em>:新しいブラウザーのセキュリティ仕様では、<a href=\"#/p5/createCapture\">createCapture()</a> の背後にある getUserMedia は、コードをローカルで実行している場合、または HTTPS でのみ動作するようになっています。詳細は <a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>こちら</a> と <a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>こちら</a> を参照してください。"
      ],
      "returns": "p5.Element: キャプチャビデオ <a href=\"#/p5.Element\">p5.Element</a>",
      "params": {
        "type": "String|Constant|Object: キャプチャのタイプで、VIDEO や AUDIO が指定されていない場合はデフォルトで両方、または Constraints オブジェクト",
        "callback": "Function: (オプション) ストリームがロードされたら呼ばれる関数"
      }
    },
    "createElement": {
      "description": ["指定されたタグと内容で DOM 内に要素を作成します。"],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "tag": "String: 新しい要素のタグ",
        "content": "String: (オプション) 要素に挿入される HTML コンテンツ"
      }
    },
    "deviceOrientation": {
      "description": [
        "システム変数 deviceOrientation には、常にデバイスの向きが格納されます。この変数の値は'landscape'または'portrait'に設定されます。データが利用できない場合、'undefined'に設定されます。LANDSCAPE または PORTRAIT です。"
      ]
    },
    "accelerationX": {
      "description": [
        "システム変数 accelerationX には、常にデバイスの x 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "accelerationY": {
      "description": [
        "システム変数 accelerationY には、常にデバイスの y 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "accelerationZ": {
      "description": [
        "システム変数 accelerationZ には、常にデバイスの z 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationX": {
      "description": [
        "システム変数 pAccelerationX には、常に現在のフレームの前のフレームでのデバイスの x 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationY": {
      "description": [
        "システム変数 pAccelerationY には、常に現在のフレームの前のフレームでのデバイスの y 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationZ": {
      "description": [
        "システム変数 pAccelerationZ には、常に現在のフレームの前のフレームでのデバイスの z 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "rotationX": {
      "description": [
        "システム変数 rotationX は常にデバイスの x 軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は-180から180になります。RADIANS に設定されている場合、値は-PI から PI になります。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Y の順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "rotationY": {
      "description": [
        "システム変数 rotationY は常にデバイスの y 軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は-90から90になります。RADIANS に設定されている場合、値は-PI / 2 から PI / 2 になります。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Y の順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "rotationZ": {
      "description": [
        "システム変数 rotationZ は常にデバイスの z 軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は0から360になります。RADIANS に設定されている場合、値は0から 2 * PI になります。",
        "rotationX および rotationY とは異なり、この変数は内蔵コンパスのあるデバイスでのみ利用可能です。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Y の順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "pRotationX": {
      "description": [
        "システム変数 pRotationX は、前のフレームから現在のフレームにかけてのデバイスの x 軸に沿った回転を常に格納しています。スケッチの <a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は-180から180になります。RADIANS に設定されている場合、値は-PI から PI になります。",
        "pRotationX は、X 軸に沿ったデバイスの回転方向を決定するために、rotationX と一緒に使用することもできます。"
      ]
    },
    "pRotationY": {
      "description": [
        "システム変数 pRotationY は、前のフレームから現在のフレームにかけてのデバイスの y 軸に沿った回転を常に格納しています。スケッチの <a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は-90から90になります。RADIANS に設定されている場合、値は-PI / 2 から PI / 2 になります。",
        "pRotationY は、Y 軸に沿ったデバイスの回転方向を決定するために、rotationY と一緒に使用することもできます。"
      ]
    },
    "pRotationZ": {
      "description": [
        "システム変数 pRotationZ は、前のフレームから現在のフレームにかけてのデバイスの z 軸に沿った回転を常に格納しています。スケッチの <a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は0から360になります。RADIANS に設定されている場合、値は0から 2 * PI になります。",
        "pRotationZ は、Z 軸に沿ったデバイスの回転方向を決定するために、rotationZ と一緒に使用することもできます。"
      ]
    },
    "turnAxis": {
      "description": [
        "デバイスが回転すると、<a href=\"#/p5/deviceTurned\">deviceTurned()</a> メソッドをトリガーする軸が turnAxis 変数に格納されます。turnAxis 変数は、deviceTurned() のスコープ内でのみ定義されています。"
      ]
    },
    "setMoveThreshold": {
      "description": [
        "<a href=\"#/p5/setMoveThreshold\">setMoveThreshold()</a> 関数は、<a href=\"#/p5/deviceMoved\">deviceMoved()</a> 関数の動作閾値を設定するために使用されます。デフォルトの閾値は0.5に設定されています。"
      ],
      "params": {
        "value": "Number: 閾値"
      }
    },
    "setShakeThreshold": {
      "description": [
        "<a href=\"#/p5/setShakeThreshold\">setShakeThreshold()</a> 関数は、<a href=\"#/p5/deviceShaken\">deviceShaken()</a> 関数の動作閾値を設定するために使用されます。デフォルトの閾値は30に設定されています。"
      ],
      "params": {
        "value": "Number: 閾値"
      }
    },
    "deviceMoved": {
      "description": [
        "<a href=\"#/p5/deviceMoved\">deviceMoved()</a> 関数は、X、Y、または Z 軸に沿って閾値を超える量だけデバイスが移動したときに呼び出されます。デフォルトの閾値は0.5に設定されています。閾値は、<a href=\"https://p5js.org/reference/#/p5/setMoveThreshold\">setMoveThreshold()</a> を使用して変更できます。"
      ]
    },
    "deviceTurned": {
      "description": [
        "<a href=\"#/p5/deviceTurned\">deviceTurned()</a> 関数は、デバイスが90度以上連続して回転したときに呼び出されます。",
        "turnAxis 変数には、<a href=\"#/p5/deviceTurned\">deviceTurned()</a> メソッドをトリガーする軸が格納されます。<a href=\"#/p5/deviceTurned\">deviceTurned()</a> メソッドは、turnAxis 変数と 'X'、'Y'または'Z'を比較することで、任意の軸（X、Y、または Z）でトリガーするようにロックできます。"
      ]
    },
    "deviceShaken": {
      "description": [
        "<a href=\"#/p5/deviceShaken\">deviceShaken()</a> 関数は、デバイスの合計加速度が、accelerationX および accelerationY の値の変化が閾値を超えたときに呼び出されます。デフォルトの閾値は30に設定されています。閾値は、<a href=\"https://p5js.org/reference/#/p5/setShakeThreshold\">setShakeThreshold()</a> を使用して変更できます。"
      ]
    },
    "keyIsPressed": {
      "description": [
        "ブール型のシステム変数 <a href=\"#/p5/keyIsPressed\">keyIsPressed</a> は、キーが押されている場合は true、キーが押されていない場合は false です。"
      ]
    },
    "key": {
      "description": [
        "システム変数 key には、最後にキーボードで入力されたキーの値が常に格納されます。正しい大文字/小文字を取得するには、<a href=\"#/p5/keyTyped\">keyTyped()</a> の中で使うことが最適です。非 ASCII キーの場合は、<a href=\"#/p5/keyCode\">keyCode</a> 変数を使用してください。"
      ]
    },
    "keyCode": {
      "description": [
        "変数 keyCode は、BACKSPACE、DELETE、ENTER、RETURN、TAB、ESCAPE、SHIFT、CONTROL、OPTION、ALT、UP_ARROW、DOWN_ARROW、LEFT_ARROW、RIGHT_ARROW などの特殊キーを検出するために使用されます。このようなサイトでキーの keyCode を調べることで、カスタムキーのチェックもできます:<a href=\"http://keycode.info/\">keycode.info</a>。"
      ]
    },
    "keyPressed": {
      "description": [
        "<a href=\"#/p5/keyPressed\">keyPressed()</a> 関数は、キーが押されるたびに1回呼び出されます。押されたキーの keyCode は、<a href=\"#/p5/keyCode\">keyCode</a> 変数に格納されます。",
        "非 ASCII キーの場合は、keyCode 変数を使用してください。keyCode が BACKSPACE、DELETE、ENTER、RETURN、TAB、ESCAPE、SHIFT、CONTROL、OPTION、ALT、UP_ARROW、DOWN_ARROW、LEFT_ARROW、RIGHT_ARROW に等しいかどうかを確認できます。",
        "ASCII キーの場合、押されたキーは key 変数に格納されます。ただし、大文字と小文字は区別されません。このため、変数の大文字と小文字を区別する keyTyped() を使用して key 変数を読み取ることが推奨されます。<a href=\"#/p5/keyTyped\">keyTyped()</a> を参照してください。",
        "オペレーティングシステムがキーのリピートを処理する方法のため、キーを押し続けると、<a href=\"#/p5/keyTyped\">keyTyped()</a>（および <a href=\"#/p5/keyReleased\">keyReleased()</a> も）が複数回呼び出される場合があります。リピートの速度は、オペレーティングシステムと各コンピューターの設定によって決まります。ブラウザーは、さまざまなキーイベントに対してデフォルトの動作をもつ場合があります。このイベントのデフォルト動作を防ぐには、「return false」をメソッドの最後に追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の KeyboardEvent コールバック引数。"
      }
    },
    "keyReleased": {
      "description": [
        "<a href=\"#/p5/keyReleased\">keyReleased()</a> 関数は、キーが離されるたびに1回呼び出されます。<a href=\"#/p5/key\">key</a> および <a href=\"#/p5/keyCode\">keyCode</a> を参照してください。ブラウザーには、さまざまなキーイベントに対して異なるデフォルトの動作が関連付けられている場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に \"return false\" を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の KeyboardEvent コールバック引数。"
      }
    },
    "keyTyped": {
      "description": [
        "<a href=\"#/p5/keyTyped\">keyTyped()</a> 関数は、キーが押されるたびに1回呼び出されますが、Backspace、Delete、Ctrl、Shift、Alt などのアクションキーは無視されます。これらのキーの keyCode を検出しようとしている場合は、代わりに <a href=\"#/p5/keyPressed\">keyPressed()</a> 関数を使用してください。最も最近に入力されたキーは、key 変数に格納されます。",
        "オペレーティングシステムがキーリピートを処理する方法のため、キーを押し続けると、<a href=\"#/p5/keyTyped\">keyTyped()</a>（および <a href=\"#/p5/keyReleased\">keyReleased()</a>）が複数回呼び出されます。リピートの速度は、オペレーティングシステムと各コンピューターの設定によって決まります。ブラウザーには、さまざまなキーイベントに対して異なるデフォルトの動作が付与されている場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "オブジェクト: (オプション) オプションの KeyboardEvent コールバック引数。"
      }
    },
    "keyIsDown": {
      "description": [
        "<a href=\"#/p5/keyIsDown\">keyIsDown()</a> 関数は、キーが現在押されている（ダウン）かどうかをチェックします。これは、オブジェクトが動き、複数のキーが同時にその動作に影響を与えることができる場合に使用できます。たとえば、スプライトを斜めに移動させる場合などです。キーの keyCode を表す任意の数値を入力するか、<a href=\"#/p5/keyCode\">keyCode</a> の変数名を <a href=\"#/p5/keyCode\">こちら</a> にリストされているものから使用することができます。"
      ],
      "returns": "Boolean: キーがダウンかどうか",
      "params": {
        "code": "Number: チェックするキー"
      }
    },
    "movedX": {
      "description": [
        "変数 movedX には、最後のフレーム以降のマウスの水平方向の移動が含まれます。"
      ]
    },
    "movedY": {
      "description": [
        "変数 movedY には、最後のフレーム以降のマウスの垂直方向の移動が含まれます。"
      ]
    },
    "mouseX": {
      "description": [
        "システム変数 mouseX は、常にキャンバスの(0, 0)に対するマウスの現在の水平位置を格納しています。左上隅の値は、2-D の場合は(0, 0)、WebGL の場合は(-width/2, -height/2)です。タッチ入力がマウス入力の代わりに使用される場合、mouseX は最新のタッチポイントの x 値を保持します。"
      ]
    },
    "mouseY": {
      "description": [
        "システム変数 mouseY は、常にキャンバスの(0, 0)に対するマウスの現在の垂直位置を格納しています。左上隅の値は、2-D の場合は(0, 0)、WebGL の場合は(-width/2, -height/2)です。タッチ入力がマウス入力の代わりに使用される場合、mouseY は最新のタッチポイントの y 値を保持します。"
      ]
    },
    "pmouseX": {
      "description": [
        "システム変数 pmouseX は、常にマウスまたは指の水平位置を、前のフレームに対してキャンバスの (0, 0) を基準にして格納します。左上隅の値は、2-D の場合は (0, 0) 、WebGL の場合は (-width/2, -height/2) です。注意:各タッチイベントの開始時に、pmouseX は現在の mouseX 値にリセットされます。"
      ]
    },
    "pmouseY": {
      "description": [
        "システム変数 pmouseY は、常にマウスまたは指の垂直位置を、前のフレームに対してキャンバスの (0, 0) を基準にして格納します。左上隅の値は、2-D の場合は (0, 0) 、WebGL の場合は (-width/2, -height/2) です。注意:各タッチイベントの開始時に、pmouseY は現在の mouseY 値にリセットされます。"
      ]
    },
    "winMouseX": {
      "description": [
        "システム変数 winMouseX は、常にマウスの水平位置を、ウィンドウの (0, 0) を基準にして格納します。"
      ]
    },
    "winMouseY": {
      "description": [
        "システム変数 winMouseY は、常にマウスの垂直位置を、ウィンドウの (0, 0) を基準にして格納します。"
      ]
    },
    "pwinMouseX": {
      "description": [
        "システム変数 pwinMouseX は、現在のフレームの前のフレームにおける、ウィンドウの (0, 0) に対するマウスの水平位置を常に含んでいます。注意:pwinMouseX は、各タッチイベントの開始時に現在の winMouseX の値にリセットされます。"
      ]
    },
    "pwinMouseY": {
      "description": [
        "システム変数 pwinMouseY は、現在のフレームの前のフレームにおける、ウィンドウの (0, 0) に対するマウスの垂直位置を常に含んでいます。注意:pwinMouseY は、各タッチイベントの開始時に現在の winMouseY の値にリセットされます。"
      ]
    },
    "mouseButton": {
      "description": [
        "p5 はマウスボタンが押されているかどうかと、どのボタンが押されているかを自動的に追跡します。システム変数 mouseButton の値は、最後に押されたボタンに応じて、LEFT、RIGHT、CENTER になります。警告:異なるブラウザーでは、mouseButton の追跡方法が異なる場合があります。"
      ]
    },
    "mouseIsPressed": {
      "description": [
        "真偽値のシステム変数 mouseIsPressed は、マウスが押されている場合は true、押されていない場合は false です。"
      ]
    },
    "mouseMoved": {
      "description": [
        "<a href=\"#/p5/mouseMoved\">mouseMoved()</a> 関数は、マウスが移動し、マウスボタンが押されていない場合に呼び出されます。ブラウザーには、さまざまなマウスイベントに関連付けられたデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、「return false」をメソッドの最後に追加します。"
      ],
      "params": {
        "event": "Object: (オプション) オプションの MouseEvent コールバック引数。"
      }
    },
    "mouseDragged": {
      "description": [
        "<a href=\"#/p5/mouseDragged\">mouseDragged()</a> 関数は、マウスが移動し、マウスボタンが押されるたびに1回呼び出されます。 <a href=\"#/p5/mouseDragged\">mouseDragged()</a> 関数が定義されていない場合、代わりに <a href=\"#/p5/touchMoved\">touchMoved()</a> 関数が呼び出されます（定義されている場合）。ブラウザーには、さまざまなマウスイベントに対して異なるデフォルトの動作が付随している場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の MouseEvent コールバック引数。"
      }
    },
    "mousePressed": {
      "description": [
        "<a href=\"#/p5/mousePressed\">mousePressed()</a> 関数は、マウスボタンが押されるたびに1回呼び出されます。mouseButton 変数（関連するリファレンスエントリを参照）を使用して、どのボタンが押されたかを判断できます。<a href=\"#/p5/mousePressed\">mousePressed()</a> 関数が定義されていない場合、代わりに <a href=\"#/p5/touchStarted\">touchStarted()</a> 関数が呼び出されます（定義されている場合）。ブラウザーには、さまざまなマウスイベントに対して異なるデフォルトの動作が付随している場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の MouseEvent コールバック引数。"
      }
    },
    "mouseReleased": {
      "description": [
        "<a href=\"#/p5/mouseReleased\">mouseReleased()</a> 関数は、マウスボタンが離されるたびに呼び出されます。 <a href=\"#/p5/mouseReleased\">mouseReleased()</a> 関数が定義されていない場合、代わりに <a href=\"#/p5/touchEnded\">touchEnded()</a> 関数が定義されている場合はそれが呼び出されます。ブラウザーには、さまざまなマウスイベントに関連するデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) オプションの MouseEvent コールバック引数。"
      }
    },
    "mouseClicked": {
      "description": [
        "<a href=\"#/p5/mouseClicked\">mouseClicked()</a> 関数は、マウスボタンが押されてから離された後に1回だけ呼び出されます。ブラウザーはクリックを異なる方法で処理するため、この関数は左マウスボタンがクリックされたときに実行されることが保証されています。他のマウスボタンが押されたり離されたりするのを処理するには、<a href=\"#/p5/mousePressed\">mousePressed()</a> または <a href=\"#/p5/mouseReleased\">mouseReleased()</a> を参照してください。ブラウザーには、さまざまなマウスイベントに関連するデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) オプションの MouseEvent コールバック引数。"
      }
    },
    "doubleClicked": {
      "description": [
        "<a href=\"#/p5/doubleClicked\">doubleClicked()</a> 関数は、DOM L3 仕様の一部である dblclick イベントを検出したイベントリスナーがあるたびに実行されます。doubleClicked イベントは、ポインティングデバイスのボタン（通常はマウスのプライマリボタン）がひとつの要素上で2回クリックされると発火します。dblclick イベントの詳細については、mozilla のドキュメントを参照してください: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/dblclick\">https://developer.mozilla.org/en-US/docs/Web/Events/dblclick</a>"
      ],
      "params": {
        "event": "Object: (オプション) 任意の MouseEvent コールバック引数。"
      }
    },
    "mouseWheel": {
      "description": [
        "関数 <a href=\"#/p5/mouseWheel\">mouseWheel()</a> は、実際のマウスホイールまたはタッチパッドによってトリガーされるたびに、垂直方向のマウスホイールイベントが検出されるたびに実行されます。event.delta プロパティは、マウスホイールがスクロールした量を返します。値は、スクロール方向によって正または負になることがあります（macOS で「ナチュラル」スクロールが有効になっている場合、符号が反転します）。ブラウザーによっては、さまざまなマウスイベントにデフォルトの動作が関連付けられていることがあります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加します。現在の Safari における「wheel」イベントのサポート状況のため、Safari を使用している場合には、期待通りの動作をするために「return false」を含める必要があります。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の WheelEvent コールバック引数。"
      }
    },
    "requestPointerLock": {
      "description": [
        "関数 <a href=\"#/p5/requestPointerLock\">requestPointerLock()</a> は、ポインタを現在の位置にロックし、不可視にします。<a href=\"#/p5/movedX\">movedX</a> と <a href=\"#/p5/movedY\">movedY</a> を使って、draw の最後の呼び出し以降にマウスが移動した差分を取得します。すべてのブラウザーがこの機能をサポートしているわけではないことに注意してください。これにより、マウスが画面の外に出ても、繰り返し一方向に移動しても制限されないエクスペリエンスを作成できます。たとえば、一人称視点のエクスペリエンス。"
      ]
    },
    "exitPointerLock": {
      "description": [
        "関数 <a href=\"#/p5/exitPointerLock\">exitPointerLock()</a> は、以前にトリガーされた <a href=\"#/p5/requestPointerLock\">ポインタロック</a> を終了させます。たとえば、UI 要素を使用可能にするためなど。"
      ]
    },
    "touches": {
      "description": [
        "システム変数 touches[]は、キャンバスの (0, 0) に対する現在のすべてのタッチポイントの位置と、移動するユニークなタッチを識別する ID が含まれた配列です。配列の各要素は、x, y および id プロパティをもつオブジェクトです。",
        "touches[]配列は、タッチベースのデスクトップ（ノートパソコン）の Safari および IE ではサポートされていません。"
      ]
    },
    "touchStarted": {
      "description": [
        "touchStarted() 関数は、タッチが登録されるたびに1回呼び出されます。もし <a href=\"#/p5/touchStarted\">touchStarted()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mousePressed\">mousePressed()</a> 関数が呼び出されます。ブラウザーは、さまざまなタッチイベントに対して異なるデフォルトの動作を持っている場合があります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "touchMoved": {
      "description": [
        "<a href=\"#/p5/touchMoved\">touchMoved()</a> 関数は、タッチムーブが登録されるたびに呼び出されます。もし <a href=\"#/p5/touchMoved\">touchMoved()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mouseDragged\">mouseDragged()</a> 関数が呼び出されます。ブラウザーは、さまざまなタッチイベントに対して異なるデフォルトの動作を持っている場合があります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "touchEnded": {
      "description": [
        "<a href=\"#/p5/touchEnded\">touchEnded()</a> 関数はタッチが終了するたびに呼び出されます。 <a href=\"#/p5/touchEnded\">touchEnded()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mouseReleased\">mouseReleased()</a> 関数が呼び出されます。ブラウザーは、さまざまなタッチイベントに添付された異なるデフォルトの動作をもつことがあります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に \"return false\" を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "createImage": {
      "description": [
        "新しい <a href=\"#/p5.Image\">p5.Image</a>（画像を格納するデータ型）を作成します。これにより、新しいピクセルバッファが利用できるようになります。バッファのサイズを、width および height パラメーターで設定します。",
        ".<a href=\"#/p5.Image/pixels\">pixels</a> は、表示ウィンドウ内のすべてのピクセルの値を含む配列にアクセスできます。これらの値は数字です。この配列は、表示ウィンドウのサイズ（<a href=\"#/p5/pixelDensity\">pixelDensity</a> の適切な係数を含む）x4 で、各ピクセルの R、G、B、A の値を順番に、各行を左から右に、各列を上から下に移動して表現しています。詳細については、.<a href=\"#/p5.Image/pixels\">pixels</a> を参照してください。また、<a href=\"#/p5.Image/set\">set()</a> や <a href=\"#/p5.Image/get\">get()</a> を使用する方が簡単かもしれません。",
        "画像のピクセルにアクセスする前に、<a href=\"#/p5.Image/loadPixels\">loadPixels()</a> 関数を使用してデータをロードする必要があります。配列データが変更された後、変更を更新するために <a href=\"#/p5.Image/updatePixels\">updatePixels()</a> 関数を実行する必要があります。"
      ],
      "returns": "p5.Image: <a href=\"#/p5.Image\">p5.Image</a> オブジェクト",
      "params": {
        "width": "Integer: ピクセル単位の幅",
        "height": "Integer: ピクセル単位の高さ"
      }
    },
    "saveCanvas": {
      "description": [
        "現在のキャンバスを画像として保存します。ブラウザーは、ファイルをすぐに保存するか、ダイアログウィンドウでユーザーにプロンプトを表示します。"
      ],
      "params": {
        "selectedCanvas": "p5.Element|HTMLCanvasElement: 特定の html5 キャンバスを表す変数 (オプション) ",
        "filename": "String (オプション) ",
        "extension": "String: (オプション) 'jpg'または'png'"
      }
    },
    "saveFrames": {
      "description": [
        "映画を作成するために使用できるフレームのシーケンスをキャプチャします。コールバックを受け入れます。たとえば、フレームをサーバーに送信して保存したり、映画に変換したりする場合があります。コールバックが提供されない場合、ブラウザーは作成されたばかりのすべての画像をダウンロードしようとする保存ダイアログをポップアップします。コールバックが提供された場合、画像データはデフォルトでは保存されず、代わりにコールバック関数の引数としてオブジェクトの配列として渡されます。配列のサイズは、フレームの合計数に等しくなります。",
        "引数 <code>duration</code> と <code>framerate</code> は、それぞれ15以下、および22以下に制約されています。これは、1秒あたり22フレームで最大15秒分のフレームをダウンロードできることを意味し、フレームの合計数は330になります。これは、十分な大きさのキャンバスが簡単にコンピューターのメモリーを埋め尽くし、プログラムやブラウザーをクラッシュさせる可能性があるため、メモリーの問題を避けるために行われています。",
        "より長いアニメーションをエクスポートするには、<a href=\"https://github.com/spite/ccapture.js/\">ccapture.js</a> のようなライブラリを検討してみてください。"
      ],
      "params": {
        "filename": "String",
        "extension": "String: 'jpg'または'png'",
        "duration": "Number: フレームを保存するための秒単位の期間。このパラメーターは15以下に制約されます。",
        "framerate": "Number: フレームを保存するフレームレート。このパラメーターは22以下に制約されます。",
        "callback": "Function(Array): (オプション) 画像データを処理するために実行されるコールバック関数。この関数は引数として配列を受け入れる必要があります。配列には、指定された数のフレームオブジェクトが含まれます。各オブジェクトには3つのプロパティがあります:imageData - image/octet-stream、filename、および extension。"
      }
    },
    "loadImage": {
      "description": [
        "画像をパスから読み込み、<a href=\"#/p5.Image\">p5.Image</a> を作成します。",
        "画像はレンダリングのためにすぐに利用できない場合があります。画像が準備完了してから何かを行いたい場合は、<a href=\"#/p5/loadImage\">loadImage()</a> を <a href=\"#/p5/preload\">preload()</a> の中に入れてください。また、準備ができたときに画像を処理するためのコールバック関数を提供することもできます。",
        "画像へのパスは、スケッチにリンクする HTML ファイルに対して相対的であるべきです。URL や他のリモート場所からの画像の読み込みは、ブラウザーの組み込みセキュリティによってブロックされることがあります。",
        "ファイルパスの代わりに、base64 でエンコードされた画像の文字列を渡すこともできます。文字列の前に \"data:image/png;base64,\" を追加することを忘れないでください。"
      ],
      "returns": "p5.Image: <a href=\"#/p5.Image\">p5.Image</a> オブジェクト",
      "params": {
        "path": "String: 読み込む画像のパス",
        "successCallback": "function(p5.Image): (オプション) 画像が読み込まれたら呼び出される関数。<a href=\"#/p5.Image\">p5.Image</a> が渡されます。",
        "failureCallback": "Function(Event): (オプション) 画像の読み込みに失敗した場合、イベントエラーとともに呼び出されます。"
      }
    },
    "saveGif": {
      "description": [
        "現在のアニメーションを gif として生成し、コンピューターにダウンロードします！",
        "duration 引数は、アニメーションから録画したい秒数を指定します。この値は、units の値に応じて、生成する必要があるフレーム数に変換されます。次の段落で詳しく説明します。",
        "さらに2つの引数を含むオプションのオブジェクトです:delay（number）および units（string）。",
        "<code>delay</code> は、録画を開始する前に待つ時間を指定します。",
        "<code>units</code> は、'seconds'または'frames'のいずれかの文字列です。デフォルトでは'seconds'です。",
        "<code>units</code> は、duration と delay 引数の動作方法を指定します。'seconds'の場合、これらの引数は秒に対応し、3秒間のアニメーションが作成されることを意味します。'frames'の場合、引数はアニメーションのフレーム数に対応し、この数値が非常に確実な場合に限ります。",
        "これは、setup で呼び出すことも、以下の例のように、keyPressed や mousePressed などのイベント関数内で呼び出すこともできます。"
      ],
      "params": {
        "filename": "String: gif ファイルのファイル名",
        "duration": "Number: スケッチからキャプチャしたい秒数の長さ",
        "options": "Object: 5つの引数を含むことができるオプションのオブジェクトです: delay, 録画するまでの待ち時間を指定します。; units, 'seconds' または 'frames' の文字列です。デフォルトは 'seconds' です。; silent, 進捗通知の有無を定義するブール値です。デフォルトは false です。; notificationDuration, 最終通知が表示される時間を秒単位で定義する数値です。デフォルト値の 0 は、通知が削除されないことを意味します。; notificationID, 通知先の DOM 要素 ID を指定する文字列です。デフォルトでは 'progressBar' です。"
      }
    },
    "image": {
      "description": [
        "p5.js キャンバスに画像を描画します。",
        "この関数は、異なる数のパラメーターで使用できます。最もシンプルな使い方では、img、x、および y の3つのパラメーターだけが必要で、(x, y)は画像の位置です。さらに2つのパラメーターをオプションで追加して、画像の幅と高さを指定できます。",
        "この関数は、8つの Number パラメーターでも使用できます。これらすべてのパラメーターを区別するために、p5.js では、「destination rectangle」（これに対応するのは「dx」、「dy」など）と「source image」（これに対応するのは「sx」、「sy」など）という言葉を使用しています。ソース画像の一部を表示したい場合に、「source image」の寸法を指定すると便利です。さらに説明するための図を参照してください: <img src=\"assets/drawImage.png\"></img>",
        "この関数は、9番目のパラメーターである fit を追加することで、元のアスペクト比を歪めずに画像を描画するためにも使用できます。fit は、COVER または CONTAIN のいずれかになります。CONTAIN は、名前が示すように、指定された宛先ボックス内に画像全体を含め、画像の比率を歪めません。COVER は、宛先ボックス全体を覆います。"
      ],
      "params": {
        "img": "p5.Image|p5.Element|p5.Texture|p5.Framebuffer|p5.FramebufferTexture: 表示する画像",
        "x": "Number: 画像の左上隅の x 座標",
        "y": "Number: 画像の左上隅の y 座標",
        "width": "Number: (オプション) 画像を描画する幅",
        "height": "Number: (オプション) 画像を描画する高さ",
        "dx": "Number: ソース画像を描画する宛先矩形の x 座標",
        "dy": "Number: ソース画像を描画する宛先矩形の y 座標",
        "dWidth": "Number: 宛先矩形の幅",
        "dHeight": "Number: 宛先矩形の高さ",
        "sx": "Number: ソース画像のサブセクションを宛先矩形に描画する x 座標",
        "sy": "Number: ソース画像のサブセクションを宛先矩形に描画する y 座標",
        "sWidth": "Number: (オプション) ソース画像のサブセクションの幅で、目的の矩形に描画されます",
        "sHeight": "Number: (オプション) ソース画像のサブセクションの高さで、目的の矩形に描画されます",
        "fit": "Constant: (オプション) CONTAIN または COVER のいずれか",
        "xAlign": "Constant: (オプション) LEFT, RIGHT, CENTER のいずれか。デフォルトは CENTER",
        "yAlign": "Constant: (オプション) TOP, BOTTOM, CENTER のいずれか。デフォルトは CENTER"
      }
    },
    "tint": {
      "description": [
        "画像の表示に使用する塗りつぶしの値を設定します。画像は指定された色に着色されたり、アルファ値を含むことで透明になったりします。",
        "画像の色に影響を与えずに透明性を適用するには、塗り色に白を使用し、アルファ値を指定してください。たとえば、tint(255, 128)は、画像を50％透明にします（デフォルトのアルファ範囲が0-255であることを前提にしていますが、<a href=\"#/p5/colorMode\">colorMode()</a> で変更することができます）。",
        "gray パラメーターの値は、<a href=\"#/p5/colorMode\">colorMode()</a> で指定された現在の最大値以下でなければなりません。デフォルトの最大値は255です。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "alpha": "Number (オプション)",
        "value": "String: カラー文字列",
        "gray": "Number: 灰色の値",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color: 着色する色"
      }
    },
    "noTint": {
      "description": [
        "画像の表示に使用する現在の塗りつぶし値を削除し、元の色相で画像を表示するように戻します。"
      ]
    },
    "imageMode": {
      "description": [
        "画像モードを設定します。<a href=\"#/p5/image\">image()</a> に与えられるパラメーターの解釈方法を変更することで、画像が描画される位置を変更します。デフォルトのモードは imageMode(CORNER) で、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメーターを画像の左上の角として解釈します。さらに2つのパラメーターが指定されている場合、それらは画像の幅と高さを設定するために使用されます。",
        "imageMode(CORNERS)は、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメーターをひとつの角の位置として解釈し、第4および第5のパラメーターを反対側の角として解釈します。",
        "imageMode(CENTER)は、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメーターを画像の中心点として解釈します。さらに2つのパラメーターが指定されている場合、それらは画像の幅と高さを設定するために使用されます。"
      ],
      "params": {
        "mode": "Constant: CORNER、CORNERS、CENTER のいずれか"
      }
    },
    "pixels": {
      "description": [
        "ディスプレイウィンドウ内のすべてのピクセルの値を含む <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a> です。これらの値は数値です。この配列は、ディスプレイウィンドウのサイズ（<a href=\"#/p5/pixelDensity\">pixelDensity</a> の適切な係数を含む）x4 で、各ピクセルの R、G、B、A の値を左から右へ、各行から下へ移動しながら順番に表現しています。Retina やその他の高密度ディスプレイは、ピクセル密度の二乗の係数であるピクセル[]を持っています。たとえば、画像が100 × 100ピクセルの場合、40,000になります。Retina ディスプレイでは160,000になります。",
        "配列の最初の4つの値（インデックス0-3）は、ピクセル(0, 0)の R、G、B、A の値です。次の4つの値（インデックス4-7）は、ピクセル(1, 0)の R、G、B、A の値が含まれます。一般的には、(x, y)のピクセルの値を設定するには、次のようにします:<pre><code class=\"language-javascript\">let d = pixelDensity(); for (let i = 0; i < d; i++) {  for (let j = 0; j < d; j++) {  // loop over  index = 4 * ((y * d + j) * width * d + (x * d + i));  pixels[index] = r;  pixels[index+1] = g;  pixels[index+2] = b;  pixels[index+3] = a;  } } </code></pre>",
        "上記の方法は複雑ですが、任意の pixelDensity で動作する柔軟性があります。<a href=\"#/p5/set\">set()</a> は、任意の pixelDensity で指定された(x, y)に対して <a href=\"#/p5/pixels\">pixels[]</a> 内の適切な値を自動的に設定しますが、ピクセル配列に多くの変更が加えられるとパフォーマンスが低下することがあります。",
        "この配列にアクセスする前に、<a href=\"#/p5/loadPixels\">loadPixels()</a> 関数でデータをロードする必要があります。配列データが変更された後、<a href=\"#/p5/updatePixels\">updatePixels()</a> 関数を実行して変更を更新する必要があります。",
        "これは標準的な JavaScript の配列ではないことに注意してください。これは、<a href=\"#/p5/slice\">slice()</a> や <a href=\"#/p5/arrayCopy\">arrayCopy()</a> などの標準的な JavaScript 関数が動作しないことを意味します。"
      ]
    },
    "blend": {
      "description": [
        "指定されたブレンドモードを使用して、ある画像のピクセル領域を別の画像にコピーします。"
      ],
      "params": {
        "srcImage": "p5.Image: ソース画像",
        "sx": "Integer: ソースの左上隅の X 座標",
        "sy": "Integer: ソースの左上隅の Y 座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 送り先の左上隅の X 座標",
        "dy": "Integer: 送り先の左上隅の Y 座標",
        "dw": "Integer: 送り先画像の幅",
        "dh": "Integer: 送り先画像の高さ",
        "blendMode": "Constant: ブレンドモード。BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT, SOFT_LIGHT, DODGE, BURN, ADD, NORMAL のいずれか。"
      }
    },
    "copy": {
      "description": [
        "キャンバスの一部を別の領域にコピーし、srcImg パラメーターとして使用される画像のピクセル領域をキャンバスにコピーします。srcImage が指定されている場合、これがソースとして使用されます。ソースと宛先の領域が同じサイズでない場合、ソースのピクセルが自動的に指定されたターゲット領域に合わせてサイズ変更されます。"
      ],
      "params": {
        "srcImage": "p5.Image|p5.Element: ソース画像",
        "sx": "Integer: ソースの左上隅の X 座標",
        "sy": "Integer: ソースの左上隅の Y 座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 宛先の左上隅の X 座標",
        "dy": "Integer: 宛先の左上隅の Y 座標",
        "dw": "Integer: 宛先画像の幅",
        "dh": "Integer: 宛先画像の高さ"
      }
    },
    "filter": {
      "description": [
        "キャンバスにフィルターを適用します。プリセットオプションは以下の通りです:",
        "THRESHOLD 画像を、ピクセルが level パラメーターで定義された閾値より上か下かによって、白黒のピクセルに変換します。パラメーターは0.0(黒)から1.0(白)の間でなければなりません。level が指定されていない場合、0.5が使用されます。",
        "GRAY 画像内のすべての色をグレースケールに変換します。パラメーターは使用されません。",
        "OPAQUE アルファチャンネルを完全に不透明に設定します。パラメーターは使用されません。",
        "INVERT 各ピクセルをその反転値に設定します。パラメーターは使用されません。",
        "POSTERIZE 画像の各チャンネルを、パラメーターとして指定された色数に制限します。パラメーターは2から255の間の値に設定できますが、低い範囲で結果が最も目立ちます。",
        "BLUR レベルパラメーターでぼかしの範囲を指定したガウシアンブラーを実行します。パラメーターが使用されていない場合、ブラーは半径1のガウシアンブラーに相当します。値が大きいほど、ぼかしが増えます。",
        "ERODE 明るい領域を減少させます。パラメーターは使用されません。",
        "DILATE 明るい領域を増加させます。パラメーターは使用されません。",
        "filter() は WebGL モードでは動作しません。WebGL モードではカスタムシェーダーを使用して類似の効果を実現できます。Adam Ferriss は、フィルターの例にある多くの効果を含む <a href=\"https://github.com/aferriss/p5jsShaderExamples\" target='_blank'>シェーダーの例の選択</a> を書いています。"
      ],
      "params": {
        "filterType": "Constant: THRESHOLD, GRAY, OPAQUE, INVERT,  POSTERIZE, BLUR, ERODE, DILATE, BLUR のいずれか。Filters.js のドキュメントに各利用可能なフィルターについて記載されています。",
        "filterParam": "Number: (オプション) 各フィルタに固有のオプションパラメーター。上記を参照"
      }
    },
    "get": {
      "description": [
        "キャンバスからピクセルの領域、またはひとつのピクセルを取得します。",
        "任意のピクセルの[R,G,B,A]の値の配列を返すか、画像の一部を取得します。パラメーターが指定されていない場合、画像全体が返されます。x と y パラメーターを使用してひとつのピクセルの値を取得します。表示ウィンドウの一部を取得するには、追加の w と h パラメーターを指定します。画像を取得する場合、x および y パラメーターは、現在の <a href=\"#/p5/imageMode\">imageMode()</a> に関係なく、画像の左上隅の座標を定義します。",
        "get(x, y)を使用してひとつのピクセルの色を取得することは簡単ですが、<a href=\"#/p5/pixels\">pixels[]</a> からデータを直接取得するより速くはありません。ピクセル密度 d をもつ <a href=\"#/p5/pixels\">pixels[]</a> を使用した get(x, y)の同等の文は次のとおりです。<pre><code class=\"language-javascript\">let x, y, d; // これらを座標に設定します let off = (y * width + x) * d * 4; let components = [  pixels[off],  pixels[off + 1],  pixels[off + 2],  pixels[off + 3] ]; print(components); </code></pre>",
        "<a href=\"#/p5/pixels\">pixels[]</a> に関する詳細情報は、リファレンスを参照してください。",
        "p5.Image オブジェクトから色の配列やサブ画像を抽出する場合は、<a href=\"#/p5.Image/get\">p5.Image.get()</a> を参照してください。"
      ],
      "returns": "p5.Image: 矩形 <a href=\"#/p5.Image\">p5.Image</a>",
      "params": {
        "x": "Number: ピクセルの x 座標",
        "y": "Number: ピクセルの y 座標",
        "w": "Number: 返却されるセクションの幅",
        "h": "Number: 返却されるセクションの高さ"
      }
    },
    "loadPixels": {
      "description": [
        "表示ウィンドウのピクセルデータを <a href=\"#/p5/pixels\">pixels[]</a> 配列にロードします。この関数は、<a href=\"#/p5/pixels\">pixels[]</a> から読み取るか、書き込む前に必ず呼び出す必要があります。 <a href=\"#/p5/set\">set()</a> で行われた変更、または <a href=\"#/p5/pixels\">pixels[]</a> への直接の操作だけが発生することに注意してください。"
      ]
    },
    "set": {
      "description": [
        "任意のピクセルの色を変更するか、画像を直接表示ウィンドウに書き込みます。x および y パラメーターは、変更するピクセルを指定し、c パラメーターは色の値を指定します。これは、<a href=\"#/p5.Color\">p5.Color</a> オブジェクト、または [R, G, B, A] ピクセル配列であることができます。また、単一のグレースケール値でも構いません。画像を設定する場合、x および y パラメーターは、現在の <a href=\"#/p5/imageMode\">imageMode()</a> に関係なく、画像の左上隅の座標を定義します。",
        "<a href=\"#/p5/set\">set()</a> を使用した後、変更を反映させるために <a href=\"#/p5/updatePixels\">updatePixels()</a> を呼び出す必要があります。これは、すべてのピクセルが設定された後に一度だけ呼び出す必要があり、.<a href=\"#/p5/get\">get()</a> を呼び出すか、画像を描画する前に呼び出す必要があります。",
        "set(x, y) を使ってひとつのピクセルの色を設定するのは簡単ですが、<a href=\"#/p5/pixels\">pixels[]</a> に直接データを入れるより速くはありません。リタイナディスプレイで作業している場合、<a href=\"#/p5/pixels\">pixels[]</a> の値を直接設定することは複雑になるかもしれませんが、多くのピクセルを毎回ループで直接設定する必要がある場合は、パフォーマンスが向上します。<a href=\"#/p5/pixels\">pixels[]</a> に関する詳細は、そのリファレンスを参照してください。"
      ],
      "params": {
        "x": "Number: ピクセルの x 座標",
        "y": "Number: ピクセルの y 座標",
        "c": "Number|Number[]|Object: グレースケール値を挿入 | ピクセル配列 |  <a href=\"#/p5.Color\">p5.Color</a> オブジェクト | コピーする <a href=\"#/p5.Image\">p5.Image</a>"
      }
    },
    "updatePixels": {
      "description": [
        "画面に <a href=\"#/p5/pixels\">pixels[]</a> 配列のデータを更新します。<a href=\"#/p5/loadPixels\">loadPixels()</a> と併用して使用してください。配列からピクセルを読み取るだけであれば、<a href=\"#/p5/updatePixels\">updatePixels()</a> を呼び出す必要はありません。更新は変更を適用する場合にのみ必要です。 <a href=\"#/p5/updatePixels\">updatePixels()</a> は、pixels 配列が操作されるたび、または <a href=\"#/p5/set\">set()</a> が呼び出されるたびに呼び出されるべきであり、<a href=\"#/p5/set\">set()</a> で行われた変更や <a href=\"#/p5/pixels\">pixels[]</a> への直接の変更のみが発生します。"
      ],
      "params": {
        "x": "Number: (オプション) 更新する領域の左上の x 座標",
        "y": "Number: (オプション) 更新する領域の左上の y 座標",
        "w": "Number: (オプション) 更新する領域の幅",
        "h": "Number: (オプション) 更新する領域の高さ"
      }
    },
    "loadJSON": {
      "description": [
        "ファイルまたは URL から JSON ファイルをロードし、オブジェクトを返します。JSON ファイルに配列が含まれていても、インデックス番号がキーとなるオブジェクトが返されることに注意してください。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。JSONP はポリフィルを介してサポートされており、<a href=\"https://github.com/camsong/ fetch-jsonp\">こちら</a> で指定されている構文に従った JSON コールバックの定義を含むオブジェクトを2番目の引数として渡すことができます。",
        "このメソッドは、最大64MB のファイルをフェッチするのに適しています。"
      ],
      "returns": "Object|Array: JSON データ",
      "params": {
        "path": "String: ロードするファイル名または URL",
        "jsonpOptions": "Object: (オプション) jsonp 関連設定のオプションオブジェクト",
        "datatype": "String: (オプション) \"json\"または\"jsonp\"",
        "callback": "Function: (オプション) <a href=\"#/p5/loadJSON\">loadJSON()</a> 完了後に実行される関数。データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadStrings": {
      "description": [
        "ファイルの内容を読み取り、その個々の行のString配列を作成します。上記の例のように、ファイル名がパラメーターとして使用される場合、ファイルはスケッチディレクトリ/フォルダに配置されている必要があります。",
        "あるいは、ファイルは絶対パス（UnixやLinuxでは/から始まり、Windowsではドライブ文字から始まるもの）を使用してローカルコンピュータからどこでもロードできるか、またはファイル名パラメーターはネットワーク上にあるファイルのURLにすることができます。",
        "この方法は非同期であり、スケッチの次の行が実行される前に終了しない可能性があります。",
        "この方法は、64MBまでのファイルを取得するのに適しています。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "filename": "String: ロードするファイル名または URL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadStrings\">loadStrings()</a> 完了後に実行される関数。配列が最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadTable": {
      "description": [
        "ファイルまたは URL の内容を読み込み、その値をもつ <a href=\"#/p5.Table\">p5.Table</a> オブジェクトを作成します。ファイルが指定されている場合、スケッチの「data」フォルダ内に配置する必要があります。filename パラメーターは、オンラインで見つかったファイルの URL でも構いません。デフォルトでは、ファイルはカンマ区切り（CSV 形式）であると想定されています。'header'オプションが含まれている場合にのみ、テーブルはヘッダー行を探します。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。<a href=\"#/p5/loadTable\">loadTable()</a> を <a href=\"#/p5/preload\">preload()</a> 内で呼び出すと、<a href=\"#/p5/setup\">setup()</a> および <a href=\"#/p5/draw\">draw()</a> が呼び出される前に操作が完了することが保証されます。<a href=\"#/p5/preload\">preload()</a> の外では、オブジェクトを処理するコールバック関数を提供することができます。",
        "すべてのロードおよび保存されたファイルは UTF-8 エンコーディングを使用します。このメソッドは、最大64MB のファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: データを含む <a href=\"#/p5.Table\">Table</a> オブジェクト",
      "params": {
        "filename": "String: ロードするファイル名または URL",
        "extension": "String: (オプション) カンマ区切りの値「csv」、セミコロン区切りの値「ssv」、タブ区切りの値「tsv」でテーブルを解析します。",
        "header": "String: (オプション) テーブルにヘッダー行があることを示す「header」",
        "callback": "Function: (オプション) <a href=\"#/p5/loadTable\">loadTable()</a> 完了後に実行される関数。成功時には、<a href=\"#/p5.Table\">Table</a> オブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadXML": {
      "description": [
        "ファイルの内容を読み込み、その値をもつ XML オブジェクトを作成します。ファイル名がパラメーターとして使用される場合、例のように、ファイルはスケッチディレクトリ/フォルダ内に配置する必要があります。",
        "また、ファイルはローカルコンピューターのどこからでも絶対パスを使ってロードすることができます（Unix および Linux では/で始まるもの、Windows ではドライブレターで始まるもの）、またはファイル名パラメーターはネットワーク上にあるファイルの URL になることがあります。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。<a href=\"#/p5/loadXML\">loadXML()</a> を <a href=\"#/p5/preload\">preload()</a> 内で呼び出すと、<a href=\"#/p5/setup\">setup()</a> および <a href=\"#/p5/draw\">draw()</a> が呼び出される前に操作が完了することが保証されます。",
        "<a href=\"#/p5/preload\">preload()</a> の外では、オブジェクトを処理するコールバック関数を提供することができます。",
        "このメソッドは、最大64MB のファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: データを含む XML オブジェクト",
      "params": {
        "filename": "String: ロードするファイル名または URL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadXML\">loadXML()</a> 完了後に実行される関数。XML オブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadBytes": {
      "description": [
        "このメソッドは、最大64MB のファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: ロードされたバッファをもつ 'bytes' プロパティをもつオブジェクト",
      "params": {
        "file": "String: ロードするファイル名または URL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadBytes\">loadBytes()</a> 完了後に実行される関数",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数"
      }
    },
    "httpGet": {
      "description": [
        "HTTP GET リクエストを実行するメソッドです。データ型が指定されていない場合、p5 は URL にもとづいて推測し、テキストをデフォルトとします。これは、<code>httpDo(path, 'GET')</code> を呼び出すことと同等です。'binary'データ型は Blob オブジェクトを返し、'arrayBuffer'データ型は、タイプ付き配列（Uint8Array など）を初期化するために使用できる ArrayBuffer を返します。"
      ],
      "returns": "Promise: 操作が正常に完了した場合はデータを含む Promise、エラーが発生した場合はエラーを含む Promise を返します。",
      "params": {
        "path": "String: ロードするファイル名または URL",
        "datatype": "String: (オプション) \"json\", \"jsonp\", \"binary\", \"arrayBuffer\", \"xml\", \"text\"",
        "data": "Object|Boolean: (オプション) リクエストとともに送信されるパラメーターデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpGet\">httpGet()</a> が完了した後に実行される関数、データは最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数、レスポンスは最初の引数として渡されます。"
      }
    },
    "httpPost": {
      "description": [
        "HTTP POST リクエストを実行するメソッドです。データ型が指定されていない場合、p5 は URL にもとづいて推測し、テキストをデフォルトとします。これは、<code>httpDo(path, 'POST')</code> を呼び出すことと同等です。"
      ],
      "returns": "Promise: 操作が正常に完了した場合はデータを含む Promise、エラーが発生した場合はエラーを含む Promise を返します。",
      "params": {
        "path": "String: ロードするファイル名または URL",
        "datatype": "String: (オプション) \"json\", \"jsonp\", \"xml\", \"text\"。省略された場合、<a href=\"#/p5/httpPost\">httpPost()</a> が推測します。",
        "data": "Object|Boolean: (オプション) リクエストとともに送信されるパラメーターデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpPost\">httpPost()</a> が完了した後に実行される関数で、データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数で、レスポンスが最初の引数として渡されます。"
      }
    },
    "httpDo": {
      "description": [
        "HTTP リクエストを実行するためのメソッドです。データ型が指定されていない場合、p5 は URL にもとづいて推測し、デフォルトではテキストになります。より高度な使用法として、最初の引数にパス、2番目の引数にオブジェクトを渡すこともできます。シグネチャは Fetch API 仕様にしたがっています。このメソッドは、\"GET\"が使用された場合、最大64MB のファイルを取得するのに適しています。"
      ],
      "returns": "Promise: 操作が正常に完了した場合にデータで解決されるプロミス、またはエラーが発生した後にエラーでリジェクトされるプロミス。",
      "params": {
        "path": "String: 読み込むファイル名または URL",
        "method": "String: (オプション) \"GET\"、\"POST\"、または\"PUT\"のいずれかで、デフォルトは\"GET\"",
        "datatype": "String: (オプション) \"json\"、\"jsonp\"、\"xml\"、または\"text\"",
        "data": "Object: (オプション) リクエストとともに送信されるパラメーターデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpGet\">httpGet()</a> が完了した後に実行される関数で、データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数で、レスポンスが最初の引数として渡されます。",
        "options": "Object: リクエストオブジェクトのオプションで、\"fetch\" API の <a href=\"https://developer.mozilla.org/en/docs/Web/API/Fetch_API\">リファレンス</a> に記載されています。"
      }
    },
    "createWriter": {
      "returns": "p5.PrintWriter:",
      "params": {
        "name": "String: 作成するファイルの名前",
        "extension": "String (オプション) "
      }
    },
    "save": {
      "description": [
        "指定された要素（画像、テキスト、json、csv、wav、html）をクライアントのコンピューターに保存します。最初のパラメーターは、保存したい要素へのポインターが指定できます。要素は、<a href=\"#/p5.Element\">p5.Element</a>、文字列の配列、JSON の配列、JSON オブジェクト、<a href=\"#/p5.Table\">p5.Table </a>、<a href=\"#/p5.Image\">p5.Image</a>、または p5.SoundFile（p5.sound が必要）のいずれかです。2番目のパラメーターはファイル名（拡張子を含む）。3番目のパラメーターは、このタイプのオブジェクトに特有のオプションです。このメソッドは、指定されたパラメーターに適合するファイルを保存します。要素を指定せずに呼び出された場合、デフォルトでは画像ファイルとしてキャンバス全体が保存されます。そのような場合、最初のパラメーターとしてファイル名をオプションで指定できます。 <strong>draw 内でこのメソッドを呼び出すことはお勧めしません。なぜなら、レンダリングごとに新しい保存ダイアログが開くためです。</strong>"
      ],
      "params": {
        "objectOrFilename": "Object|String: (オプション) ファイル名が指定された場合、ファイル名に応じて png または jpg 拡張子の画像としてキャンバスを保存します。オブジェクトが指定された場合、オブジェクトとファイル名に応じて保存されます（上記の例を参照）。",
        "filename": "String: (オプション) オブジェクトが最初のパラメーターとして提供された場合、2番目のパラメーターはファイル名を示し、適切なファイル拡張子を含める必要があります（上記の例を参照）。",
        "options": "Boolean|String: (オプション) 追加のオプションはファイルタイプに依存します。たとえば、JSON を保存する場合、<code>true</code> は出力がファイルサイズに最適化され、読みやすさではなくなります。"
      }
    },
    "saveJSON": {
      "description": [
        "配列または JSON オブジェクトの内容を.json ファイルに書き込みます。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザー間で異なります。"
      ],
      "params": {
        "json": "Array|Object",
        "filename": "String",
        "optimize": "Boolean: (オプション) true の場合、ファイルサイズを最適化するために、出力ファイルから改行とスペースを削除します (読みやすさは向上しません)。"
      }
    },
    "saveStrings": {
      "description": [
        "文字列の配列をテキストファイルに書き込みます。ひとつの文字列ごとに1行。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザー間で異なります。"
      ],
      "params": {
        "list": "String[]: 書き込むための文字列配列",
        "filename": "String: 出力用のファイル名",
        "extension": "String: (オプション) ファイル名の拡張子",
        "isCRLF": "Boolean: (オプション) true の場合、改行を CRLF に変更"
      }
    },
    "saveTable": {
      "description": [
        "<a href=\"#/p5.Table\">Table</a> オブジェクトの内容をファイルに書き込みます。デフォルトでは、カンマ区切りの値（'csv'）を含むテキストファイルですが、タブ区切り（'tsv'）を使用することもできますし、HTML テーブル（'html'）を生成することもできます。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザー間で異なります。"
      ],
      "params": {
        "Table": "p5.Table: ファイルに保存する <a href=\"#/p5.Table\">Table</a> オブジェクト",
        "filename": "String: Table が保存されるべきファイル名",
        "options": "String: (オプション) \"tsv\"、\"csv\"、\"html\"のいずれか"
      }
    },
    "abs": {
      "description": [
        "数値の絶対値（大きさ）を計算します。Math.abs() にマッピングされます。数値の絶対値は常に正です。"
      ],
      "returns": "Number: 与えられた数値の絶対値",
      "params": {
        "n": "Number: 計算する数値"
      }
    },
    "ceil": {
      "description": [
        "パラメーターの値以上の最も近い int 値を計算します。Math.ceil() にマッピングされます。たとえば、ceil(9.03)は値10を返します。"
      ],
      "returns": "Integer: 切り上げられた数値",
      "params": {
        "n": "Number: 切り上げる数値"
      }
    },
    "constrain": {
      "description": ["最小値と最大値の間に値を制限します。"],
      "returns": "Number: 制限された数値",
      "params": {
        "n": "Number: 制限する数値",
        "low": "Number: 最小限",
        "high": "Number: 最大限"
      }
    },
    "dist": {
      "description": [
        "2点間の距離を、2次元または3次元で計算します。2つのベクトル間の距離を探している場合は、<a herf=\"#/p5.Vector/dist\">p5.Vector.dist()</a> を参照してください。"
      ],
      "returns": "Number: 2点間の距離",
      "params": {
        "x1": "Number: 第1点の x 座標",
        "y1": "Number: 第1点の y 座標",
        "x2": "Number: 第2点の x 座標",
        "y2": "Number: 第2点の y 座標",
        "z1": "Number: 第1点の z 座標",
        "z2": "Number: 第2点の z 座標"
      }
    },
    "exp": {
      "description": [
        "オイラーの数 e（2.71828...）を、n パラメーターの冪乗にしたものを返します。Math.exp() にマッピングされます。"
      ],
      "returns": "Number: e^n",
      "params": {
        "n": "Number: 上げる指数"
      }
    },
    "floor": {
      "description": [
        "パラメーターの値以下の最も近い int 値を計算します。Math.floor() にマッピングされます。"
      ],
      "returns": "Integer: 切り捨てられた数値",
      "params": {
        "n": "Number: 切り捨てる数値"
      }
    },
    "lerp": {
      "description": [
        "特定の増分で2つの数値の間の数値を計算します。amt パラメーターは、2つの値の間で補間する量で、0.0は最初のポイントと等しく、0.1は最初のポイントに非常に近く、0.5は中間で、1.0は2番目のポイントと等しいです。amt の値が1.0を超えるか、0.0未満の場合、2つの与えられた数値の比率に応じて数値が計算されます。lerp() 関数は、直線上の動きを作成したり、点線を描画するのに便利です。"
      ],
      "returns": "Number: lerped 値",
      "params": {
        "start": "Number: 最初の値",
        "stop": "Number: 2番目の値",
        "amt": "Number: 数値"
      }
    },
    "log": {
      "description": [
        "数値の自然対数（底 e の対数）を計算します。この関数は、n パラメーターが0.0より大きい値であることを期待しています。Math.log() にマップされます。"
      ],
      "returns": "Number: n の自然対数",
      "params": {
        "n": "Number: 0より大きい数"
      }
    },
    "mag": {
      "description": [
        "ベクトルの大きさ（または長さ）を計算します。ベクトルは、コンピューターグラフィックスや線形代数でよく使われる空間上の方向を表します。ベクトルには「開始」位置がないため、ベクトルの大きさは座標0,0からその x,y 値までの距離と考えることができます。したがって、<a href=\"#/p5/mag\">mag()</a> は、dist(0, 0, x, y) を書くためのショートカットです。"
      ],
      "returns": "Number: (0,0) から (a,b) までのベクトルの大きさ",
      "params": {
        "a": "Number: 第一の値",
        "b": "Number: 第二の値"
      }
    },
    "map": {
      "description": [
        "ある範囲の数値を別の範囲に再マップします。",
        "最初の例では、数値25が、0から100の範囲の値から、ウィンドウの左端(0)から右端(width)までの範囲の値に変換されます。"
      ],
      "returns": "Number: 再マップされた数値",
      "params": {
        "value": "Number: 変換される入力値",
        "start1": "Number: 値の現在の範囲の下限",
        "stop1": "Number: 値の現在の範囲の上限",
        "start2": "Number: 値の目標範囲の下限",
        "stop2": "Number: 値の目標範囲の上限",
        "withinBounds": "Boolean: (オプション) 値を新しくマップされた範囲に制約します。"
      }
    },
    "max": {
      "description": [
        "一連の数値の中で最大の値を決定し、その値を返します。 <a href=\"#/p5/max\">max()</a> は、任意の数の Number パラメーター、または任意の長さの配列を受け入れます。"
      ],
      "returns": "Number: 最大の数値",
      "params": {
        "n0": "Number: 比較する数値",
        "n1": "Number: 比較する数値",
        "nums": "Number[]: 比較する数値"
      }
    },
    "min": {
      "description": [
        "一連の数値の中で最小の値を決定し、その値を返します。<a href=\"#/p5/min\">min()</a> は、任意の数の Number パラメーター、または任意の長さの配列を受け入れます。"
      ],
      "returns": "Number: 最小の数値",
      "params": {
        "n0": "Number: 比較する数値",
        "n1": "Number: 比較する数値",
        "nums": "Number[]: 比較する数値"
      }
    },
    "norm": {
      "description": [
        "別の範囲の数値を0から1の範囲に正規化します。map(value, low, high, 0, 1)と同一です。範囲外の数値は、範囲外の値が意図的で有用であることがよくあるため、0および1にクランプされません。(例を参照してください。)"
      ],
      "returns": "Number: 正規化された数値",
      "params": {
        "value": "Number: 正規化されるべき入力値",
        "start": "Number: 値の現在の範囲の下限",
        "stop": "Number: 値の現在の範囲の上限"
      }
    },
    "pow": {
      "description": [
        "指数表現を容易にします。<a href=\"#/p5/pow\">pow()</a> 関数は、数値を自分自身（またはその逆数）と大量にかける効率的な方法です。たとえば、pow(3, 5)は式 3 × 3 × 3 × 3 × 3 と等価であり、pow(3, -5)は 1 / 3 × 3 × 3 × 3 × 3 と等価です。Math.pow() にマップされます。"
      ],
      "returns": "Number: n^e",
      "params": {
        "n": "Number: 指数表現の底",
        "e": "Number: 底を上げるべき指数"
      }
    },
    "round": {
      "description": [
        "n パラメーターに最も近い整数を計算します。たとえば、round(133.8)は値134を返します。Math.round() にマップされます。"
      ],
      "returns": "Integer: 四捨五入された数値",
      "params": {
        "n": "Number: 四捨五入する数値",
        "decimals": "Number: (オプション) 四捨五入する小数点以下の桁数。デフォルトは0"
      }
    },
    "sq": {
      "description": [
        "数値の二乗（数値を自分自身で乗算）。結果は常に正の数です。なぜなら、2つの負の数を乗算すると常に正の結果が得られるからです。たとえば、-1 * -1 = 1。"
      ],
      "returns": "Number: 二乗された数値",
      "params": {
        "n": "Number: 二乗する数値"
      }
    },
    "sqrt": {
      "description": [
        "数値の平方根を計算します。数値の平方根は常に正ですが、有効な負のルートがある場合もあります。数値 a の平方根 s は、s*s = a となるものです。二乗の逆の操作です。Math.sqrt() にマップされます。"
      ],
      "returns": "Number: 数値の平方根",
      "params": {
        "n": "Number: 平方根を求める非負の数値"
      }
    },
    "fract": {
      "description": ["数値の小数部分を計算します。"],
      "returns": "Number: x の小数部分、すなわち、{x}",
      "params": {
        "num": "Number: 小数部分を求める数値"
      }
    },
    "createVector": {
      "description": [
        "新しい <a href=\"#/p5.Vector\">p5.Vector</a>（ベクトルを格納するデータ型）を作成します。これにより、二次元または三次元のユークリッド（幾何学的）ベクトルが提供されます。ベクトルとは、大きさと方向の両方をもつエンティティです。"
      ],
      "returns": "p5.Vector:",
      "params": {
        "x": "Number: (オプション) ベクトルの x 成分",
        "y": "Number: (オプション) ベクトルの y 成分",
        "z": "Number: (オプション) ベクトルの z 成分"
      }
    },
    "noise": {
      "description": [
        "指定された座標でのパーリンノイズ値を返します。パーリンノイズは、標準の <a href=\"#/p5/random\">random()</a> 関数と比較して、より自然に順序付けられた調和のある数列を生成するランダムシーケンスジェネレータです。1980年代に Ken Perlin によって発明され、以降、グラフィカルアプリケーションで手続き的テクスチャ、自然な動き、形状、地形などを生成するために使用されています。<br /><br /><a href=\"#/p5/random\">random()</a> 関数との主な違いは、パーリンノイズは無限の n 次元空間で定義されており、座標のペアごとに固定の半乱数値（プログラムの寿命に対してのみ固定; <a href=\"#/p5/noiseSeed\">noiseSeed()</a> 関数を参照）が対応していることです。p5.js は、与えられた座標の数に応じて 1D、2D、3D のノイズを計算することができます。結果として得られる値は常に0.0から1.0の間になります。ノイズ値は、例で示されているように、ノイズ空間を移動することでアニメーション化することができます。第2および第3の次元は、時間としても解釈できます。<br /><br />実際のノイズは、周波数の利用に関してオーディオ信号に似た構造を持っています。物理学の調和の概念に似て、パーリンノイズはいくつかのオクターブで計算され、最終結果に加算されます。<br /><br />結果として得られるシーケンスの性格を調整するもうひとつの方法は、入力座標のスケールです。関数が無限の空間で動作するため、座標の値自体は重要ではなく、連続する座標間の距離だけが重要です(たとえば、ループ内で <a href=\"#/p5/noise\">noise()</a> を使用する場合)。一般的には、座標間の差が小さいほど、得られるノイズシーケンスは滑らかになります。ほとんどのアプリケーションでは0.005-0.03のステップが最適ですが、用途によっては異なります。"
      ],
      "returns": "Number: 指定された座標でのパーリンノイズ値（0から1の間）",
      "params": {
        "x": "Number: ノイズ空間の x 座標",
        "y": "Number: (オプション) ノイズ空間の y 座標",
        "z": "Number: (オプション) ノイズ空間の z 座標"
      }
    },
    "noiseDetail": {
      "description": [
        "パーリンノイズ関数で生成されるノイズの特性とディテールのレベルを調整します。物理学の調和に似て、ノイズはいくつかのオクターブで計算されます。低オクターブは出力信号に大きく寄与し、ノイズの全体的な強度を定義します。一方、高オクターブはノイズ配列の細かいディテールを作成します。デフォルトでは、ノイズは4つのオクターブで計算され、各オクターブは直前のオクターブのちょうど半分の寄与をしています。ひとつ目のオクターブの強度は50%から始まります。この減衰量は、追加の関数パラメーターを追加することで変更することができます。たとえば、減衰係数が0.75の場合、各オクターブは前の低オクターブの75%の影響をもつことになります（25%少なくなります）。 0.0から1.0の間の任意の値が有効ですが、0.5より大きい値は、<a href=\"#/p5/noise\">noise()</a> が1.0より大きい値を返す可能性があることに注意してください。これらのパラメーターを変更することで、<a href=\"#/p5/noise\">noise()</a> 関数で生成される信号は、非常に特定のニーズや特性に適応させることができます。"
      ],
      "params": {
        "lod": "Number: ノイズに使用されるオクターブの数",
        "falloff": "Number: 各オクターブの減衰係数"
      }
    },
    "noiseSeed": {
      "description": [
        "<a href=\"#/p5/noise\">noise()</a> のシード値を設定します。デフォルトでは、<a href=\"#/p5/noise\">noise()</a> はプログラムが実行されるたびに異なる結果を生成します。<code>seed</code> パラメーターを定数に設定すると、ソフトウェアが実行されるたびに同じ疑似乱数が返されます。"
      ],
      "params": {
        "seed": "Number: シード値"
      }
    },
    "randomSeed": {
      "description": [
        "<a href=\"#/p5/random\">random()</a> のシード値を設定します。",
        "デフォルトでは、<a href=\"#/p5/random\">random()</a> はプログラムが実行されるたびに異なる結果を生成します。シードパラメーターを定数に設定すると、ソフトウェアが実行されるたびに同じ疑似乱数が返されます。"
      ],
      "params": {
        "seed": "Number: シード値"
      }
    },
    "random": {
      "description": [
        "ランダムな浮動小数点数を返します。",
        "引数は、未指定、または、ひとつ、または、2つを与えることができます。",
        "引数が未指定の場合、0から1未満のランダムな数を返します。",
        "引数がひとつで、それが数値の場合、0からその数未満のランダムな数を返します。",
        "引数がひとつで、それが配列の場合、その配列からランダムな要素を返します。",
        "引数が2つ与えられた場合、第1引数から第2引数未満までのランダムな数を返します。"
      ],
      "returns": "Number: ランダムな数",
      "params": {
        "min": "Number: (オプション) 下限 (返却値は、この数が含まれることがあります)",
        "max": "Number: (オプション) 上限 (返却値は、この数未満になります)",
        "choices": "Array: 選択肢となる配列"
      }
    },
    "randomGaussian": {
      "description": [
        "ガウス分布、または正規分布に従うランダムな数を返します。<a href=\"#/p5/randomGaussian\">randomGaussian()</a> が理論的に返す最小値や最大値はありません。むしろ、平均値から離れた値が返される確率は非常に低く、平均値に近い数が返される確率が高いです。0、1、または2の引数を取ります。引数がない場合、平均は0で標準偏差は1です。引数がひとつの場合、その引数が平均で標準偏差は1です。引数が2つの場合、最初の引数が平均で、2つ目が標準偏差です。"
      ],
      "returns": "Number: ランダムな数",
      "params": {
        "mean": "Number: (オプション) 平均",
        "sd": "Number: (オプション) 標準偏差"
      }
    },
    "acos": {
      "description": [
        "<a href=\"#/p5/cos\">cos()</a> の逆関数で、値の逆余弦を返します。この関数は、-1から1の範囲の値を想定しており、<a href=\"#/p5/angleMode\">angleMode()</a> が RADIANS の場合は0からPI(3.1415927)の範囲の値が、DEGREES の場合は0から180の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆余弦",
      "params": {
        "value": "Number: 逆余弦を返す値"
      }
    },
    "asin": {
      "description": [
        "<a href=\"#/p5/sin\">sin()</a> の逆関数で、値の逆正弦を返します。この関数は、-1から1の範囲の値を想定しており、angleMode が RADIANS の場合は-PI / 2 から PI / 2 の範囲の値が、DEGREES の場合は-90から90の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆正弦",
      "params": {
        "value": "Number: 逆正弦を返す値"
      }
    },
    "atan": {
      "description": [
        "<a href=\"#/p5/tan\">tan()</a> の逆関数で、値の逆正接を返します。この関数は、-Infinity から Infinity(exclusive) の範囲の値を想定しており、angleMode が RADIANS の場合は -PI / 2 から PI / 2 の範囲の値が、DEGREES の場合は-90から90の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆正接",
      "params": {
        "value": "Number: 逆正接を返す値"
      }
    },
    "atan2": {
      "description": [
        "指定した点から座標原点までの角度を、正の x 軸から測定したラジアン単位で計算します。値は、<a href=\"#/p5/angleMode\">angleMode()</a> が RADIANS の場合は PI から-PI の範囲の浮動小数点で返され、DEGREES の場合は180から-180の範囲で返されます。<a href=\"#/p5/\">atan2()</a> 関数は、ジオメトリをカーソルの位置に合わせて向きを決定するために最もよく使用されます。",
        "注: 点の y 座標が最初のパラメーターで、x 座標が2番目のパラメーターです。これは、正接を計算する構造によるものです。"
      ],
      "returns": "Number: 与えられた点の逆正接",
      "params": {
        "y": "Number: 点の y 座標",
        "x": "Number: 点の x 座標"
      }
    },
    "cos": {
      "description": [
        "角度の余弦を計算します。この関数は、現在の <a href=\"#/p5/angleMode\">angleMode</a> を考慮しています。値は、-1から1の範囲で返されます。"
      ],
      "returns": "Number: 角度の余弦",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "sin": {
      "description": [
        "角度の正弦を計算します。この関数は、現在の <a href=\"#/p5/angleMode\">angleMode</a> を考慮しています。値は、-1から1の範囲で返されます。"
      ],
      "returns": "Number: 角度の正弦",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "tan": {
      "description": [
        "角度の正接を計算します。この関数は、現在の <a href=\"#/p5/angleMode\">angleMode</a> を考慮しています。値は、すべての実数の範囲で返されます。"
      ],
      "returns": "Number: 角度の正接",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "degrees": {
      "description": [
        "ラジアン単位の測定値を、対応する角度の値に変換します。ラジアンと角度は、同じことを測定する2つの方法です。円には360度があり、円には 2 * PI ラジアンがあります。たとえば、90° = PI / 2 = 1.5707964。この関数は、現在の <a href=\"#/p5/angleMode\">angleMode()</a> は考慮しません。"
      ],
      "returns": "Number: 変換された角度",
      "params": {
        "radians": "Number: 度数法に変換するラジアン値"
      }
    },
    "radians": {
      "description": [
        "角度の測定値を、対応するラジアンの値に変換します。ラジアンと角度は、同じことを測定する2つの方法です。円には360度があり、円には 2 * PI ラジアンがあります。たとえば、90° = PI / 2 = 1.5707964。この関数は、現在の <a href=\"#/p5/angleMode\">angleMode</a> は考慮しません。"
      ],
      "returns": "Number: 変換された角度",
      "params": {
        "degrees": "Number: ラジアンに変換する度数法の値"
      }
    },
    "angleMode": {
      "description": [
        "p5 の現在のモードを指定されたモードに設定します。デフォルトのモードは RADIANS です。",
        "<a href=\"#/p5/angleMode\">angleMode()</a> を引数なしで呼び出すと、現在の angleMode が返されます。"
      ],
      "params": {
        "mode": "Constant: RADIANS または DEGREES のいずれか"
      }
    },
    "textAlign": {
      "description": [
        "テキストの描画に使用する現在のアライメントを設定します。2つの引数を受け入れます: horizAlign（LEFT、CENTER、または RIGHT）と vertAlign（TOP、BOTTOM、CENTER、または BASELINE）。",
        "horizAlign パラメーターは、<a href=\"#/p5/text\">text()</a> 関数の x 値を参照し、vertAlign パラメーターは y 値を参照します。",
        "したがって、textAlign(LEFT)と記述すると、テキストの左端を <a href=\"#/p5/text\">text()</a> で指定した x 値に揃えます。textAlign(RIGHT, TOP)と記述すると、テキストの右端を x 値に、上端を y 値に揃えます。"
      ],
      "params": {
        "horizAlign": "Constant: 水平方向のアライメント。LEFT、CENTER、RIGHT",
        "vertAlign": "Constant:  (オプション) 垂直方向のアライメント。TOP、BOTTOM、CENTER、BASELINE"
      }
    },
    "textLeading": {
      "description": [
        "テキストの行間をピクセル単位で設定/取得します。この設定は、以降の <a href=\"#/p5/text\">text()</a> 関数の呼び出しで使用されます。"
      ],
      "params": {
        "leading": "Number: 行間のピクセル単位のサイズ"
      }
    },
    "textSize": {
      "description": [
        "現在のフォントサイズを設定/取得します。このサイズは、以降の <a href=\"#/p5/text\">text()</a> 関数の呼び出しで使用されます。フォントサイズはピクセル単位で測定されます。"
      ],
      "params": {
        "theSize": "Number: 文字のサイズ（ピクセル単位）"
      }
    },
    "textStyle": {
      "description": [
        "システムフォントのテキストスタイルを NORMAL、ITALIC、BOLD、または BOLDITALIC に設定/取得します。注意: これは CSS のスタイル設定によって上書きされる場合があります。非システムフォント（オープンタイプ、トゥルータイプなど）の場合は、代わりにスタイル付きフォントを読み込んでください。"
      ],
      "params": {
        "theStyle": "Constant: テキストのスタイル。NORMAL、ITALIC、BOLD、BOLDITALIC"
      }
    },
    "textWidth": {
      "description": ["任意の文字やテキスト文字列の幅を計算して返します。"],
      "returns": "Number: 計算された幅",
      "params": {
        "theText": "String: 測定する文字の文字列"
      }
    },
    "textAscent": {
      "description": [
        "現在のフォントの上昇を、現在のサイズで返します。上昇は、ベースラインから最も高い文字までの距離（ピクセル単位）を表します。"
      ],
      "returns": "Number:"
    },
    "textDescent": {
      "description": [
        "現在のフォントの下降を、現在のサイズで返します。下降は、ベースラインから最も長い降り幅をもつ文字までの距離（ピクセル単位）を表します。"
      ],
      "returns": "Number:"
    },
    "textWrap": {
      "description": [
        "テキストボックス内でのテキスト行の折り返し方法を指定します。これには、<a href=\"#/p5/text\">text()</a> のパラメーター <code>x2</code> で指定されたテキスト領域の最大幅が必要です。",
        "WORD ラップスタイルは、空白でのみ行を折り返します。空白がない単一の文字列で、キャンバスやテキスト領域の境界を超える場合は、テキストは切り捨てられず、指定された領域をオーバーフローし、キャンバスの端で消えます。",
        "CHAR ラップスタイルは、テキストボックス内に収まるように必要に応じて行を折り返します。",
        "WORD はデフォルトのラップスタイルであり、両方のスタイルでは、元のテキストで指定された改行（<code>\\n</code>）で行が折り返されます。テキストエリアの最大高さパラメーター（<code>y2</code>）は、両方のスタイルで折り返されたテキストにも適用され、テキストエリアに収まらないテキストの行は画面に描画されません。"
      ],
      "returns": "String: wrapStyle",
      "params": {
        "wrapStyle": "Constant: テキストの折り返しスタイル。WORD または CHAR"
      }
    },
    "loadFont": {
      "description": [
        "ファイルまたは URL から OpenType フォントファイル（.otf、.ttf）をロードし、<a href=\"#/p5.Font\">p5.Font</a> オブジェクトを返します。この関数は非同期であり、スケッチの次の行が実行される前に終了しない場合があります。",
        "フォントへのパスは、スケッチにリンクされた HTML ファイルに対して相対的である必要があります。URL や他のリモート場所からのフォントの読み込みは、ブラウザーの組み込みセキュリティによりブロックされることがあります。"
      ],
      "returns": "p5.Font: <a href=\"#/p5.Font\">p5.Font</a> オブジェクト",
      "params": {
        "path": "String:  ロードするファイルまたは URL の名前",
        "callback": "関数: (オプション) <a href=\"#/p5/loadFont\">loadFont()</a> が完了した後に実行される関数",
        "onError": "関数: (オプション) エラーが発生した場合に実行される関数"
      }
    },
    "text": {
      "description": [
        "画面上にテキストを描画します。追加のパラメーターで指定された位置に、最初のパラメーターで指定された情報を画面上に表示します。<a href=\"#/p5/textFont\">textFont()</a> 関数でフォントが設定されていない場合はデフォルトのフォントが使用され、<a href=\"#/p5/textSize\">textSize()</a> でフォントサイズが設定されていない場合はデフォルトのサイズが使用されます。テキストの色を <a href=\"#/p5/fill\">fill()</a> 関数で変更します。テキストのアウトラインを <a href=\"#/p5/stroke\">stroke()</a> 関数と <a href=\"#/p5/strokeWeight\">strokeWeight()</a> 関数で変更します。",
        "テキストは <a href=\"#/p5/textAlign\">textAlign()</a> 関数に関連して表示され、座標の左、右、および中央に描画するオプションがあります。",
        "x2 および y2 パラメーターは、文字列データのみで使用できる表示範囲を定義し、現在の <a href=\"#/p5/rectMode\">rectMode()</a> 設定にもとづいて解釈されます。指定された矩形内に完全に収まらないテキストは画面に描画されません。x2 と y2 が指定されていない場合、デフォルトのベースライン揃えが適用され、テキストは x および y から上向きに描画されます。",
        "<b>WebGL</b>: Opentype/Truetype フォントのみがサポートされています。例のように、<a href=\"#/p5/loadFont\">loadFont()</a> メソッドを使ってフォントを読み込む必要があります。<a href=\"#/p5/stroke\">stroke()</a> は、現在 webgl モードでは効果がありません。WebGL モードでテキストを操作する方法については、<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#text\">wiki</a> を参照してください。"
      ],
      "params": {
        "str": "String|Object|Array|Number|Boolean: 表示する英数字のシンボル",
        "x": "Number: テキストの x 座標",
        "y": "Number: テキストの y 座標",
        "x2": "Number: (オプション) デフォルトでは、テキストボックスの幅で、<a href=\"#/p5/rectMode\">rectMode()</a> で詳細を確認できます",
        "y2": "Number: (オプション) デフォルトでは、テキストボックスの高さで、<a href=\"#/p5/rectMode\">rectMode()</a> で詳細を確認できます"
      }
    },
    "textFont": {
      "description": [
        "<a href=\"#/p5/text\">text()</a> 関数で描画される現在のフォントを設定します。textFont() が引数なしで呼び出されると、すでに設定されているフォントがあれば現在のフォントを返します。そうでなければ、デフォルトフォントの名前を文字列として返します。textFont() が使用するフォントで呼び出されると、p5 オブジェクトを返します。",
        "<b>WebGL</b>: <a href=\"#/p5/loadFont\">loadFont()</a> で読み込まれたフォントのみがサポートされています。"
      ],
      "returns": "Object: 現在のフォント / p5 オブジェクト",
      "params": {
        "font": "Object|String: <a href=\"#/p5/loadFont\">loadFont()</a> で読み込まれたフォント、または <a href=\"https://mzl.la/2dOw8WD\">ウェブセーフフォント</a>（一般的にすべてのシステムで利用可能なフォント）を表す文字列",
        "size": "Number:  (オプション) 使用するフォントサイズ"
      }
    },
    "append": {
      "description": [
        "配列の末尾に値を追加します。配列の長さがひとつ延びます。Array.push() に対応します。"
      ],
      "returns": "Array: 追加された配列",
      "params": {
        "array": "Array: 追加する配列",
        "value": "Any: 配列に追加される値"
      }
    },
    "arrayCopy": {
      "description": [
        "配列（または配列の一部）を別の配列にコピーします。src 配列は、srcPosition で指定された位置から始まり、dstPosition で指定された位置にある dst 配列にコピーされます。コピーする要素の数は length で決定されます。値のコピーは、destination 配列内の既存の値を上書きすることに注意してください。上書きする代わりに値を追加するには、<a href=\"#/p5/concat\">concat()</a> を使用してください。",
        "2つの引数のみの単純化されたバージョンである arrayCopy(src, dst)は、同じサイズの別の配列に配列全体をコピーします。arrayCopy(src, 0, dst, 0, src.length) と同等です。",
        "この関数を使用することは、for() ループを反復処理して各要素を個別にコピーするよりも、配列データをコピーするのにはるかに効率的です。"
      ],
      "params": {
        "src": "Array: ソース配列",
        "srcPosition": "Integer: ソース配列内の開始位置",
        "dst": "Array: 送信先配列",
        "dstPosition": "Integer: 送信先配列内の開始位置",
        "length": "Integer: コピーされる配列要素の数"
      }
    },
    "concat": {
      "description": [
        "2つの配列を連結します。Array.concat() に対応します。入力配列は変更されません。"
      ],
      "returns": "Array: 連結された配列",
      "params": {
        "a": "Array: 連結する最初の配列",
        "b": "Array: 連結する2番目の配列"
      }
    },
    "reverse": {
      "description": ["配列の順序を逆にします。Array.reverse() に対応します。"],
      "returns": "Array: 逆順に並べられたリスト",
      "params": {
        "list": "Array: 逆にする配列"
      }
    },
    "shorten": {
      "description": [
        "配列をひとつの要素で減らし、短くなった配列を返します。Array.pop() に対応します。"
      ],
      "returns": "Array: 短くなった配列",
      "params": {
        "list": "Array: 短くする配列"
      }
    },
    "shuffle": {
      "description": [
        "配列の要素の順序をランダム化します。<a href='http://Bost.Ocks.org/mike/shuffle/' target=_blank>フィッシャーイェーツシャッフルアルゴリズム</a> を実装します。"
      ],
      "returns": "Array: シャッフルされた配列",
      "params": {
        "array": "Array: シャッフルする配列",
        "bool": "Boolean: (オプション) 渡された配列を変更"
      }
    },
    "sort": {
      "description": [
        "数字の配列を最小から最大まで並べ替えるか、単語の配列をアルファベット順に並べます。元の配列は変更されず、並べ替えられた配列が返されます。count パラメーターは、並べ替える要素の数を示します。たとえば、配列に12個の要素があり、count が5に設定されている場合、配列の最初の5つの要素のみが並べ替えられます。"
      ],
      "returns": "Array: ソートされたリスト",
      "params": {
        "list": "Array: 並べ替える配列",
        "count": "Integer: (オプション) 0から始まる並べ替える要素の数"
      }
    },
    "splice": {
      "description": [
        "既存の配列に値または値の配列を挿入します。第一パラメーターは変更される初期配列を指定し、第二パラメーターは挿入されるデータを定義します。第三パラメーターは、データを挿入する配列の位置を指定するインデックス値です。（配列のインデックス番号は0から始まることを覚えておいてください。つまり、最初の位置は0、2番目の位置は1、という具合です。）"
      ],
      "returns": "Array: リスト",
      "params": {
        "list": "Array: スプライスする配列",
        "value": "Any: スプライスされる値",
        "position": "Integer: データを挿入する配列内の位置"
      }
    },
    "subset": {
      "description": [
        "既存の配列から要素の配列を抽出します。list パラメーターは、要素がコピーされる配列を定義し、start と count パラメーターは抽出する要素を指定します。count が指定されていない場合、配列の最初から最後までの要素が抽出されます。start を指定するときは、最初の配列要素が0であることを覚えておいてください。この関数はソース配列を変更しません。"
      ],
      "returns": "Array: 抽出された要素の配列",
      "params": {
        "list": "Array: 抽出元の配列",
        "start": "Integer: 開始位置",
        "count": "Integer: (オプション) 抽出する値の数"
      }
    },
    "float": {
      "description": [
        "文字列を浮動小数点表現に変換します。文字列の内容は数値に似ていなければならず、そうでない場合は NaN（数値ではない）が返されます。たとえば、float(\"1234.56\")は1234.56に評価されますが、float(\"キリン\")は NaN が返されます。",
        "値の配列が渡された場合、同じ長さの浮動小数点の配列が返されます。"
      ],
      "returns": "Number: 文字列の浮動小数点表現",
      "params": {
        "str": "String: 解析する浮動小数点の文字列"
      }
    },
    "int": {
      "description": [
        "ブール値、文字列、または浮動小数点数を整数表現に変換します。値の配列が渡された場合、同じ長さの int 配列が返されます。"
      ],
      "returns": "Number: 値の整数表現",
      "params": {
        "n": "String|Boolean|Number: 解析する値",
        "radix": "Integer:  (オプション) 変換する基数（デフォルト:10）",
        "ns": "Array: 解析する値"
      }
    },
    "str": {
      "description": [
        "ブール値、文字列、または数値をその文字列表現に変換します。値の配列が渡された場合、同じ長さの文字列の配列が返されます。"
      ],
      "returns": "String: 値の文字列表現",
      "params": {
        "n": "String|Boolean|Number|Array: 解析する値"
      }
    },
    "byte": {
      "description": [
        "数値、数値の文字列表現、またはブール値をそのバイト表現に変換します。バイトは-128から127までの整数のみになるため、この範囲外の値が変換されると、対応するバイト表現にラップされます。数値、文字列、ブール値の配列が渡された場合、同じ長さのバイトの配列が返されます。"
      ],
      "returns": "Number: 値のバイト表現",
      "params": {
        "n": "String|Boolean|Number: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "char": {
      "description": [
        "数値または文字列をそれに対応する1文字の文字列表現に変換します。文字列パラメーターが指定された場合、まず整数として解析され、その後1文字の文字列に変換されます。数値または文字列の値の配列が渡された場合、同じ長さの1文字の文字列の配列が返されます。"
      ],
      "returns": "String: 値の文字列表現",
      "params": {
        "n": "String|Number: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "unchar": {
      "description": [
        "1文字の文字列を対応する整数表現に変換します。1文字の文字列の値の配列が渡された場合、同じ長さの整数の配列が返されます。"
      ],
      "returns": "Number: 値の整数表現",
      "params": {
        "n": "String: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "hex": {
      "description": [
        "数値をそれに相当する16進数表記の文字列に変換します。2つ目のパラメーターが渡された場合、16進数表記で生成する文字数を設定するために使用されます。配列が渡された場合、同じ長さの16進数表記の文字列の配列が返されます。"
      ],
      "returns": "String: 値の16進数の文字列表現",
      "params": {
        "n": "Number: 解析する値",
        "digits": "Number (オプション)",
        "ns": "Number[]: 解析する値の配列"
      }
    },
    "unhex": {
      "description": [
        "16進数表記の文字列表現を、それに相当する整数値に変換します。16進数表記の文字列の配列が渡された場合、同じ長さの整数の配列が返されます。"
      ],
      "returns": "Number: 16進数の値の整数表現",
      "params": {
        "n": "String: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "join": {
      "description": [
        "文字列の配列をひとつの文字列に結合し、separator パラメーターで使用される文字でそれぞれ区切ります。整数や浮動小数点数の配列を結合するには、まず <a href=\"#/p5/nf\">nf()</a> や nfs() を使って文字列に変換する必要があります。"
      ],
      "returns": "String: 結合された文字列",
      "params": {
        "list": "Array: 結合される文字列の配列",
        "separator": "String: 各アイテムの間に配置される文字列"
      }
    },
    "match": {
      "description": [
        "この関数は、テキストに正規表現を適用し、一致するグループ(括弧内に見つかった要素)を文字列配列として返すために使用されます。一致がない場合は null 値が返されます。正規表現でグループが指定されていない場合でも、シーケンスが一致する場合は、配列の長さ1(一致したテキストが配列の最初の要素)が返されます。",
        "関数を使用するには、まず結果が null かどうかを確認します。結果が null の場合、シーケンスはまったく一致しませんでした。シーケンスが一致した場合、配列が返されます。",
        "正規表現にグループ(括弧で指定されたセット)がある場合、それぞれの内容が配列に返されます。正規表現のマッチングの要素[0]は、マッチングした文字列全体を返し、マッチンググループは要素[1]から始まります(最初のグループは[1]、次は[2]、と続きます)。"
      ],
      "returns": "String[]: 見つかった文字列の配列",
      "params": {
        "str": "String: 検索対象の文字列",
        "regexp": "String: マッチングに使用される正規表現"
      }
    },
    "matchAll": {
      "description": [
        "この関数は、正規表現をテキストに適用し、一致するグループ（括弧内に見つかった要素）を二次元の String 配列として返すために使用されます。一致がない場合は、null 値が返されます。正規表現でグループが指定されていないが、シーケンスが一致している場合でも、二次元配列が返されますが、2次元目の長さは1です。",
        "この関数を使用するには、最初に結果が null かどうかを確認してください。結果が null の場合、シーケンスはまったく一致しませんでした。シーケンスが一致した場合、2次元配列が返されます。",
        "正規表現にグループ（括弧で指定されたセット）がある場合、それぞれの内容が配列に返されます。カウンタ変数 i をもつループを仮定すると、正規表現の一致の要素[i][0]は、一致する文字列全体を返し、一致グループは要素[i][1]で始まります（最初のグループは[i][1]、2番目のグループは[i][2]、といった具合）。"
      ],
      "returns": "String[]: 見つかった文字列の2次元配列",
      "params": {
        "str": "String: 検索対象の文字列",
        "regexp": "String: 一致させるために使用される正規表現"
      }
    },
    "nf": {
      "description": [
        "数値を文字列にフォーマットするためのユーティリティ関数。float 用のものと int 用のものの2つのバージョンがあります。",
        "digits、left、right パラメーターの値は常に正の整数である必要があります。",
        "（注意）:left と right パラメーターを使用する際には注意してください。パラメーターが現在の数値の長さよりも大きい場合、0の数が前に付加されます。",
        "たとえば、数値が123.2で、left パラメーターに4（123（整数部分）の長さよりも大きい3）が渡された場合、結果は0123.2になります。right パラメーターについても同様で、right が3の場合、結果は123.200になります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number|String: フォーマットする数値",
        "left": "Integer|String: (オプション) 小数点の左の桁数",
        "right": "Integer|String: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "nfc": {
      "description": [
        "数値を文字列にフォーマットし、1000の単位を示す適切なカンマを配置するユーティリティ関数。整数用のバージョンと整数の配列用のバージョンの2つがあります。right パラメーターの値は常に正の整数である必要があります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number|String: フォーマットする数値",
        "right": "Integer|String: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "nfp": {
      "description": [
        "数値を文字列にフォーマットするユーティリティ関数。<a href=\"#/p5/nf\">nf()</a> と似ていますが、正の数の前に「+」を付け、負の数の前に「-」を付けます。float 用のバージョンと int 用のバージョンの2つがあります。left と right パラメーターの値は常に正の整数である必要があります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number: フォーマットする数値",
        "left": "Integer: (オプション) 小数点の左の桁数",
        "right": "Integer: (オプション) 小数点の右の桁数",
        "nums": "Number[]: フォーマットする数値"
      }
    },
    "nfs": {
      "description": [
        "数値を文字列にフォーマットするユーティリティ関数。<a href=\"#/p5/nf\">nf()</a> と似ていますが、正の数の前に追加の「_」（スペース）を付けて、マイナス記号を含む負の数と整列させます。",
        "nfs() の主な使用例は、非負数の桁（位）を負数と整列させたい場合に見られます（例を参照して明確なイメージを得てください）。float 用のバージョンと int 用のバージョンの2つがあります。",
        "digits、left、right パラメーターの値は常に正の整数である必要があります。",
        "（重要）:キャンバス上の結果、つまり期待される整列は、使用している書体によって異なる場合があります。",
        "（注意）:left と right パラメーターを使用する際には注意してください。パラメーターが現在の数値の長さよりも大きい場合、0の数が前に付加されます。",
        "たとえば、数値が123.2で、left パラメーターに4（123（整数部分）の長さよりも大きい3）が渡された場合、結果は0123.2になります。right パラメーターについても同様で、right が3の場合、結果は123.200になります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number: フォーマットする数値",
        "left": "Integer: (オプション) 小数点の左の桁数",
        "right": "Integer: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "split": {
      "description": [
        "<a href=\"#/p5/split\">split()</a> 関数は、String.split() にマップされ、区切り文字または文字列を使用してテキストを分割します。delim パラメーターは、各部分の境界を示す文字または文字列を指定します。分割された各部分を含む String[]配列が返されます。",
        "<a href=\"#/p5/splitTokens\">splitTokens()</a> 関数も同様に機能しますが、特定の文字やシーケンスではなく、複数の文字を使って分割します。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "value": "String: 分割される文字列",
        "delim": "String: データを分割するために使用される文字列"
      }
    },
    "splitTokens": {
      "description": [
        "<a href=\"#/p5/splitTokens\">splitTokens()</a> 関数は、ひとつまたは複数の文字区切り（トークン）で文字列を分割します。delim パラメーターは、境界として使用される文字または文字列を指定します。",
        "delim 文字が指定されていない場合、任意の空白文字が分割に使用されます。空白文字には、タブ（\t）、改行（\n）、キャリッジリターン（\r）、フォームフィード（\f）、およびスペースが含まれます。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "value": "String: 分割される文字列",
        "delim": "String: (オプション) セパレータとして使用される個々の文字列のリスト"
      }
    },
    "trim": {
      "description": [
        "文字列の先頭と末尾から空白文字を削除します。スペース、キャリッジリターン、タブなどの標準的な空白文字に加えて、この関数は Unicode の「nbsp」文字も削除します。"
      ],
      "returns": "String: トリミングされた文字列",
      "params": {
        "str": "String: トリミングする文字列",
        "strs": "Array: トリミングする文字列の配列"
      }
    },
    "day": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/day\">day()</a> 関数は、現在の日付を1から31までの値として返します。"
      ],
      "returns": "Integer: 現在の日付"
    },
    "hour": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/hour\">hour()</a> 関数は、現在の時刻を0から23までの値として返します。"
      ],
      "returns": "Integer: 現在の時刻"
    },
    "minute": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/minute\">minute()</a> 関数は、現在の分を0から59までの値として返します。"
      ],
      "returns": "Integer: 現在の分"
    },
    "millis": {
      "description": [
        "スケッチの開始時からのミリ秒（1秒の千分の1）を返します（<code>setup()</code> が呼ばれる時点）。この情報は、イベントやアニメーションシーケンスのタイミングによく使われます。"
      ],
      "returns": "Number: スケッチ開始からのミリ秒数"
    },
    "month": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/month\">month()</a> 関数は、現在の月を1から12までの値として返します。"
      ],
      "returns": "Integer: 現在の月"
    },
    "second": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/second\">second()</a> 関数は、現在の秒を0から59までの値として返します。"
      ],
      "returns": "Integer: 現在の秒"
    },
    "year": {
      "description": [
        "p5.js はコンピューター上の時計と通信します。 <a href=\"#/p5/year\">year()</a> 関数は、現在の年を整数として返します（2014、2015、2016など）。"
      ],
      "returns": "Integer: 現在の年"
    },
    "plane": {
      "description": ["指定された幅と高さで平面を描画します。"],
      "params": {
        "width": "Number: (オプション) 平面の幅",
        "height": "Number: (オプション) 平面の高さ",
        "detailX": "Integer: (オプション) x 次元の三角形の細分割数",
        "detailY": "Integer: (オプション) y 次元の三角形の細分割数"
      }
    },
    "box": {
      "description": ["指定された幅、高さ、奥行きで箱を描画します。"],
      "params": {
        "width": "Number: (オプション) 箱の幅",
        "height": "Number: (オプション) 箱の高さ",
        "depth": "Number: (オプション) 箱の奥行き",
        "detailX": "Integer: (オプション) x 次元の三角形の細分割数",
        "detailY": "Integer: (オプション) y 次元の三角形の細分割数"
      }
    },
    "sphere": {
      "description": [
        "指定された半径の球を描画します。",
        "DetailX および detailY は、球の x 次元および y 次元の細分割数を決定します。細分割が多いほど、球は滑らかに見えます。推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザーが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 円の半径",
        "detailX": "Integer: (オプション) x 次元の細分割数",
        "detailY": "Integer: (オプション) y 次元の細分割数"
      }
    },
    "cylinder": {
      "description": [
        "指定された半径と高さの円柱を描画します。",
        "DetailX および detailY は、円柱の x 次元および y 次元の細分割数を決定します。細分割が多いほど、円柱は滑らかに見えます。detailX の推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザーが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 表面の半径",
        "height": "Number: (オプション) 円柱の高さ",
        "detailX": "Integer: (オプション) x 次元の細分割数; デフォルトは24",
        "detailY": "Integer: (オプション) y 次元の細分割数; デフォルトは1",
        "bottomCap": "Boolean: (オプション) 円柱の底面を描画するかどうか",
        "topCap": "Boolean: (オプション) 円柱の上面を描画するかどうか"
      }
    },
    "cone": {
      "description": [
        "指定された半径と高さの円錐を描画します。",
        "DetailX および detailY は、円錐の x 次元および y 次元の細分割数を決定します。細分割が多いほど、円錐は滑らかに見えます。detailX の推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザーが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 底面の半径",
        "height": "Number: (オプション) 円錐の高さ",
        "detailX": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24",
        "detailY": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは1",
        "cap": "Boolean: (オプション) 円錐の底面を描画するかどうか"
      }
    },
    "ellipsoid": {
      "description": [
        "指定された半径の楕円体を描画します。",
        "DetailX および detailY は、楕円体の x 次元および y 次元の細分割数を決定します。細分割が多いほど、楕円体は滑らかに見えます。細分割数が150以上にならないようにしてください。それはブラウザーがクラッシュする原因になるかもしれません。"
      ],
      "params": {
        "radiusx": "Number: (オプション) 楕円体の x 半径",
        "radiusy": "Number: (オプション) 楕円体の y 半径",
        "radiusz": "Number: (オプション) 楕円体の z 半径",
        "detailX": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24。細分割数が150以上にならないようにしてください。それはブラウザーがクラッシュする原因になるかもしれません。",
        "detailY": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは16。細分割数が150以上にならないようにしてください。それはブラウザーがクラッシュする原因になるかもしれません。"
      }
    },
    "torus": {
      "description": [
        "指定された半径とチューブ半径のトーラスを描画します。",
        "detailX および detailY は、トーラスの x 次元および y 次元の細分割数を決定します。細分割が多いほど、トーラスは滑らかに見えます。detailX および detailY のデフォルト値および最大値はそれぞれ24および16です。それらを比較的小さな値に設定することで、トーラス以外の新しい形状を作成できます。"
      ],
      "params": {
        "radius": "Number: (オプション) リング全体の半径",
        "tubeRadius": "Number: (オプション) チューブの半径",
        "detailX": "Integer: (オプション) x 次元のセグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24",
        "detailY": "Integer: (オプション) y 次元のセグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは16"
      }
    },
    "orbitControl": {
      "description": [
        "マウス、トラックパッド、またはタッチを使って、3D スケッチを操作することができます。左クリックしてドラッグしたり、スワイプ動作をすると、カメラの位置がスケッチの中心を中心に回転します。右クリックしてドラッグしたり、マルチスワイプをすると、カメラの位置が回転せずにパンします。また、マウスホイール（スクロール）を使ったり、ピンチイン/アウトをしたりすると、カメラをスケッチの中心から遠ざけたり近づけたりすることができます。この関数は、X軸とY軸に沿ったマウス/タッチの動きの感度を指定するパラメーターで呼び出すことができます。パラメーターを指定せずにこの関数を呼び出すことは、orbitControl(1,1)を呼び出すことと同じです。いずれかの軸の移動方向を逆にするには、感度の値に負の数を入力します。"
      ],
      "params": {
        "sensitivityX": "Number: (オプション) X 軸に沿ったマウス移動の感度",
        "sensitivityY": "Number: (オプション) Y 軸に沿ったマウス移動の感度",
        "sensitivityZ": "Number: (オプション) Z 軸に沿ったスクロール移動の感度",
        "options": "Object: (オプション) 追加の設定を含むオブジェクト、disableTouchActions - Boolean: デフォルト値は true です。これを true に設定すると、orbit中の偶然のページインタラクションが防がれるで、モバイルでのインタラクションがスムーズになります。しかし、すでにcssを通じて行っているか、デフォルトのタッチアクションが必要な場合は、これを false に設定することを検討してください。 freeRotation - Boolan: デフォルト値は false です。デフォルトでは、マウスまたはタッチポインタの水平方向の動きはカメラを y 軸周りに回転させ、垂直方向の動きはカメラを x 軸周りに回転させます。しかし、このオプションを true に設定すると、カメラは常にポインタが移動している方向に回転します。ズームと移動については、 true/false に関係なく挙動は同じです。"
      }
    },
    "debugMode": {
      "description": [
        "debugMode() は、3D 空間を視覚化するのに役立ちます。グリッドを追加してスケッチ内の「地面」の位置を示し、+X、+Y、+Z 方向を示す軸アイコンを表示します。この関数は、デフォルトのグリッドと軸アイコンを作成するために引数なしで呼び出すことができますし、例にしたがってグリッドおよび/または軸アイコンのサイズと位置をカスタマイズするために呼び出すことができます。グリッドは、最も最近設定されたストロークの色と太さで描画されます。これらのパラメーターを指定するには、draw() ループの直前に stroke() および strokeWeight() を追加してください。",
        "デフォルトでは、グリッドはスケッチの原点(0,0,0)を中心に XZ 平面に沿って走り、軸アイコンは原点からオフセットされます。グリッドと軸アイコンの両方が、現在のキャンバスサイズに応じてサイズが調整されます。グリッドがデフォルトのカメラビューに平行して走るため、グリッドを完全に表示できるように debugMode と orbitControl を一緒に使用することがよく役立ちます。"
      ],
      "params": {
        "mode": "Constant: GRID または AXES",
        "gridSize": "Number: (オプション) グリッドの一辺のサイズ",
        "gridDivisions": "Number: (オプション) グリッドの分割数",
        "xOff": "Number: (オプション) 原点 (0,0,0) からの X 軸オフセット",
        "yOff": "Number: (オプション) 原点 (0,0,0) からの Y 軸オフセット",
        "zOff": "Number: (オプション) 原点 (0,0,0) からの Z 軸オフセット",
        "axesSize": "Number: (オプション) 軸アイコンのサイズ",
        "gridXOff": "Number (オプション) ",
        "gridYOff": "Number (オプション) ",
        "gridZOff": "Number (オプション) ",
        "axesXOff": "Number (オプション) ",
        "axesYOff": "Number (オプション) ",
        "axesZOff": "Number (オプション) "
      }
    },
    "noDebugMode": {
      "description": ["3D スケッチで debugMode() をオフにします。"]
    },
    "ambientLight": {
      "description": [
        "与えられた色でアンビエントライトを作成します。",
        "アンビエントライトは特定の方向から来るものではありません。オブジェクトはすべての面から均等に照らされます。アンビエントライトは、ほとんどの場合、他の種類のライトと組み合わせて使用されます。",
        "注意: ループするプログラムでライトが持続するためには、draw() 内で（直接的または間接的に）呼び出す必要があります。setup() に配置すると、ループの最初のサイクルでのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明るさの値",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは0-255)",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "value": "String: 色を表す文字列",
        "values": "Number[]: 色の赤、緑、青、アルファ成分を含む配列",
        "color": "p5.Color: <a href=\"#/p5.Color\">p5.Color</a> としての色"
      }
    },
    "specularColor": {
      "description": [
        "非環境光（つまり、<a href=\"#/p5/ambientLight\">ambientLight()</a> を除くすべての光）のスペキュラハイライトの色を設定します。",
        "specularColor() は、コード内でそれ以降に作成される光にのみ影響します。",
        "この関数は、<a href=\"#/p5/specularMaterial\">specularMaterial()</a> と組み合わせて使用されます。ジオメトリが specularMaterial() を使用しない場合、この関数は効果がありません。",
        "デフォルトの色は白（255, 255, 255）で、specularColor() が明示的に呼び出されない場合に使用されます。",
        "注: specularColor は、Processing 関数の <a href=\"https://processing.org/reference/lightSpecular_.html\">lightSpecular</a> と同等です。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "gray": "Number: 白と黒の間の値を指定する数",
        "value": "String: CSS 文字列としての色",
        "values": "Number[]: 赤、緑、青の成分を含む配列としての色",
        "color": "p5.Color: <a href=\"#/p5.Color\">p5.Color</a> としての色"
      }
    },
    "directionalLight": {
      "description": [
        "指定された色と方向の指向性光を作成します。",
        "指向性光はひとつの方向から来ます。方向は、-1から1までの数字で指定されます。たとえば、方向を(0, -1, 0)に設定すると、ジオメトリが下から照らされます（光が真上を向いているため）。同様に、方向を(1, 0, 0)に設定すると、ジオメトリが左から照らされます（光が真右を向いているため）。",
        "指向性光には特定の発光源がないため、ジオメトリから遠ざけたり近づけたりすることはできません。",
        "一度にアクティブにできる指向性光は <strong>5</strong> つまでです。",
        "注: ループプログララム内でライトを持続させるためには、draw() 内でライトを呼び出す必要があります（直接または間接的に）。setup() に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "x": "Number: 方向の x 成分（-1から1までの範囲を含む）",
        "y": "Number: 方向の y 成分（-1から1までの範囲を含む）",
        "z": "Number: 方向の z 成分（-1から1までの範囲を含む）",
        "direction": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> としての光の方向",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>、配列、または CSS 文字列としての色"
      }
    },
    "pointLight": {
      "description": [
        "指定された色と位置で点光源を作成します。",
        "点光源は、単一の点からすべての方向に光を放射します。光は特定の点（位置）から放射されるため、オブジェクトに対して遠くまたは近くに配置すると効果が異なります。",
        "一度にアクティブにできる点光源は <strong>5</strong> つまでです。",
        "注: ループプログラム内でライトを持続させるためには、draw() 内でライトを呼び出す必要があります（直接または間接的に）。setup() に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "x": "Number: 位置の x 成分",
        "y": "Number: 位置の y 成分",
        "z": "Number: 位置の z 成分",
        "position": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> としての光の位置",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>、配列、または CSS 文字列としての色"
      }
    },
    "lights": {
      "description": [
        "シーンにアンビエントライトとディレクショナルライトを配置します。ライトは、ambientLight(128, 128, 128)および directionalLight(128, 128, 128, 0, 0, -1)に設定されます。",
        "注: ループプログラム内でライトを持続させるためには、draw() 内でライトを呼び出す必要があります（直接または間接的に）。setup() に配置すると、ループの最初の通過でのみ効果があります。"
      ]
    },
    "lightFalloff": {
      "description": [
        "<a href=\"#/p5/pointLight\">pointLight()</a> および <a href=\"#/p5/spotLight\">spotLight()</a> の減衰率を設定します。",
        "lightFalloff() は、コード内でそれ以降に作成されたライトにのみ影響します。",
        "<code>constant</code>、<code>linear</code>、および <code>quadratic</code> パラメーターは、次のように減衰を計算するために使用されます:",
        "d = 光の位置から頂点位置までの距離",
        "減衰 = 1 / (CONSTANT + d * LINEAR + (d * d) * QUADRATIC)"
      ],
      "params": {
        "constant": "Number: 減衰を決定する CONSTANT 値",
        "linear": "Number: 減衰を決定する LINEAR 値",
        "quadratic": "Number: 減衰を決定する QUADRATIC 値"
      }
    },
    "spotLight": {
      "description": [
        "指定された色、位置、光の方向、角度、および集中度でスポットライトを作成します。",
        "<a href=\"#/p5/pointLight\">pointLight()</a> と同様に、spotLight() は特定の点（位置）から光を放射します。オブジェクトに対して遠くまたは近くに配置すると効果が異なります。",
        "ただし、pointLight() とは異なり、光は <strong>一方向</strong> に沿って円錐状に放射されます。円錐の形状は、<code>angle</code> および <code>concentration</code> パラメーターを使用して制御できます。",
        "<code>angle</code> パラメーターは、円錐の半径を決定するために使用されます。そして、<code>concentration</code> パラメーターは、円錐の中心に向かって光を集めるために使用されます",
        "両方のパラメーターはオプションですが、<code>concentration</code> を指定する場合は、<code>angle</code> も指定する必要があります。最小集中値は1です。一度に最大 <strong>5</strong> つのスポットライトがアクティブにできます。",
        "注意: ループプログラム内でライトを持続させるためには、draw() 内でライトを呼び出す必要があります（直接または間接的に）。setup() に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在の色範囲に対する赤または色相値",
        "v2": "Number: 現在の色範囲に対する緑または彩度値",
        "v3": "Number: 現在の色範囲に対する青または明るさ値",
        "x": "Number: 位置の x 成分",
        "y": "Number: 位置の y 成分",
        "z": "Number: 位置の z 成分",
        "rx": "Number: 光の方向の x 成分（-1から1までの範囲を含む）",
        "ry": "Number: 光の方向の y 成分（-1から1までの範囲を含む）",
        "rz": "Number: 光の方向の z 成分（-1から1までの範囲を含む）",
        "angle": "Number:  (オプション) 円錐の角度。デフォルトは PI/3",
        "concentration": "Number:  (オプション) 円錐の集中度。デフォルトは100",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> としての色、配列として、または CSS 文字列として",
        "position": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> としてのライトの位置",
        "direction": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> としてのライトの方向"
      }
    },
    "noLights": {
      "description": [
        "スケッチ内のすべての光を取り除きます。",
        "その後のジオメトリは、新しい光が照明関数(<a href=\"#/p5/lights\">lights()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/spotLight\">spotLight()</a> など)で作成されるまで、照明なしでレンダリングされます。"
      ]
    },
    "loadModel": {
      "description": [
        "OBJ または STL ファイルから 3D モデルを読み込みます。",
        "<a href=\"#/p5/loadModel\">loadModel()</a> は、<a href=\"#/p5/preload\">preload()</a> の中に配置する必要があります。これにより、モデルが他のコードが実行される前に完全に読み込まれます。",
        "OBJ および STL 形式の制約のひとつは、スケールの組み込み概念がないことです。これは、異なるプログラムからエクスポートされたモデルが非常に異なるサイズになる可能性があることを意味します。モデルが表示されない場合は、正規化パラメーターを true に設定して <a href=\"#/p5/loadModel\">loadModel()</a> を呼び出してみてください。これにより、モデルが p5 に適したスケールにリサイズされます。<a href=\"#/p5/scale\">scale()</a> 関数を使ってモデルの最終サイズにさらに変更を加えることもできます。",
        "また、カラー付き STL ファイルのサポートはありません。カラー付きの STL ファイルは、カラープロパティなしでレンダリングされます。"
      ],
      "returns": "p5.Geometry: <a href=\"#/p5.Geometry\">p5.Geometry</a> オブジェクト",
      "params": {
        "path": "String: 読み込むモデルのパス",
        "normalize": "Boolean: true の場合、読み込み時にモデルを標準化されたサイズにスケールします。",
        "successCallback": "function(p5.Geometry): (オプション) モデルが読み込まれた後に呼び出される関数。3D モデルオブジェクトが渡されます。",
        "failureCallback": "Function(Event): (オプション) モデルの読み込みに失敗した場合にイベントエラーとともに呼び出される関数。",
        "fileType": "String: (オプション) モデルのファイル拡張子（<code>.stl</code>, <code>.obj</code>）"
      }
    },
    "model": {
      "description": ["3D モデルを画面にレンダリングします。"],
      "params": {
        "model": "p5.Geometry: レンダリングされるロード済みの 3D モデル"
      }
    },
    "loadShader": {
      "description": [
        "提供された頂点シェーダーとフラグメントシェーダーファイルから新しい <a href=\"#/p5.Shader\">p5.Shader</a> オブジェクトを作成します。",
        "シェーダーファイルはバックグラウンドで非同期にロードされるため、このメソッドは <a href=\"#/p5/preload\">preload()</a> で使用する必要があります。",
        "注意:シェーダーは WebGL モードでのみ使用できます。"
      ],
      "returns": "p5.Shader: 提供された頂点シェーダーとフラグメントシェーダーファイルから作成されたシェーダーオブジェクト。",
      "params": {
        "vertFilename": "String: 頂点シェーダーソースコードが含まれるファイルへのパス",
        "fragFilename": "String: フラグメントシェーダーソースコードが含まれるファイルへのパス",
        "callback": "Function: (オプション) loadShader が完了した後に実行されるコールバック。成功時には、p5.Shader オブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) loadShader 内でエラーが発生した場合に実行されるコールバック。エラー発生時には、エラーが最初の引数として渡されます。"
      }
    },
    "createShader": {
      "description": [
        "提供された頂点シェーダーとフラグメントシェーダーのコードから新しい <a href=\"#/p5.Shader\">p5.Shader</a> オブジェクトを作成します。",
        "注意:シェーダーは WebGL モードでのみ使用できます。"
      ],
      "returns": "p5.Shader: 提供された頂点シェーダーとフラグメントシェーダーから作成されたシェーダーオブジェクト。",
      "params": {
        "vertSrc": "String: 頂点シェーダーのソースコード",
        "fragSrc": "String: フラグメントシェーダーのソースコード"
      }
    },
    "shader": {
      "description": [
        "次に描画される図形に使用される <a href=\"#/p5.Shader\">p5.Shader</a> オブジェクトを設定します。",
        "カスタムシェーダーは、<a href=\"#/p5/createShader\">createShader()</a> および <a href=\"#/p5/loadShader\">loadShader()</a> 関数を使用して作成できます。",
        "デフォルトのシェーダーを復元するには、<a href=\"#/p5/resetShader\">resetShader()</a> を使用してください。",
        "注意:シェーダーは WebGL モードでのみ使用できます。"
      ],
      "params": {
        "s": "p5.Shader: 図形の描画に使用する <a href=\"#/p5.Shader\">p5.Shader</a> オブジェクト。"
      }
    },
    "resetShader": {
      "description": [
        "デフォルトのシェーダーを復元します。resetShader() の後に実行されるコードは、<a href=\"#/p5/shader\">shader()</a> で設定されたシェーダーには影響されません。"
      ]
    },
    "texture": {
      "description": [
        "これ以降に描画される図形に使用されるテクスチャを設定します。",
        "テクスチャは、3D ジオメトリを覆う「皮膚」のようなものです。現在サポートされているテクスチャは画像、ビデオ、オフスクリーンレンダリングです。",
        "<a href=\"#/p5/beginShape\">beginShape()</a> で作成されたジオメトリにテクスチャを適用するには、<a href=\"#/p5/vertex\">vertex()</a> で uv 座標を指定する必要があります。",
        "なお、texture() は WebGL モードでのみ使用できます。",
        "この <a href=\"/examples/3d-materials.html\">例</a> でさらに多くのマテリアルを見ることができます。"
      ],
      "params": {
        "tex": "p5.Image|p5.MediaElement|p5.Graphics|p5.Texture|p5.Framebuffer|p5.FramebufferTexture: テクスチャとして使用する画像"
      }
    },
    "textureMode": {
      "description": [
        "テクスチャマッピングの座標空間を設定します。デフォルトモードは IMAGE で、画像の実際の座標を指します。NORMAL は、0から1の範囲の正規化された値の空間を指します。",
        "IMAGE では、画像が100 × 200ピクセルの場合、画像をクワッド全体のサイズにマッピングするには、点(0,0) (100, 0) (100,200) (0,200)が必要です。NORMAL では、同じマッピングが(0,0) (1,0) (1,1) (0,1)になります。"
      ],
      "params": {
        "mode": "Constant: IMAGE、NORMAL のいずれか"
      }
    },
    "textureWrap": {
      "description": [
        "グローバルなテクスチャラッピングモードを設定します。これにより、uv が0から1の範囲外になった場合のテクスチャの動作が制御されます。選択肢は CLAMP、REPEAT、MIRROR の3つです。",
        "CLAMP は、テクスチャの端にあるピクセルが境界まで伸びるようになります。REPEAT は、テクスチャが境界に達するまで繰り返しタイルされます。MIRROR は、REPEAT と同様に動作しますが、新しいタイルごとにテクスチャが反転します。",
        "REPEAT と MIRROR は、テクスチャのサイズが2の累乗である場合（128、256、512、1024など）にのみ利用可能です。",
        "このメソッドは、次の textureWrap() 呼び出しが行われるまで、スケッチ内のすべてのテクスチャに影響します。",
        "引数がひとつだけ指定された場合、水平軸と垂直軸の両方に適用されます。"
      ],
      "params": {
        "wrapX": "Constant: CLAMP、REPEAT、MIRROR のいずれか",
        "wrapY": "Constant: (オプション) CLAMP、REPEAT、MIRROR のいずれか"
      }
    },
    "normalMaterial": {
      "description": [
        "現在のマテリアルを通常のマテリアルとして設定します。",
        "通常のマテリアルは光の影響を受けません。デバッグ時にプレースホルダーマテリアルとしてよく使われます。",
        "X 軸に面した面は赤くなり、Y 軸に面した面は緑になり、Z 軸に面した面は青になります。",
        "他のマテリアルは、この <a href=\"/examples/3d-materials.html\">例</a> で見ることができます。"
      ]
    },
    "ambientMaterial": {
      "description": [
        "マテリアルのアンビエントカラーを設定します。",
        "ambientMaterial() カラーは、オブジェクトが反射する <strong>ambientLight()</strong> カラーの成分を表します。",
        "色が黄色 (255, 255, 0) の ambientMaterial() を考えてみてください。ambientLight() が白色 (255, 255, 255) を発しいる場合、オブジェクトは赤と緑の光を反射するため黄色に見えます。ambientLight() が赤色 (255, 0, 0) を発しいる場合、オブジェクトは赤色の光を反射するために赤色に見えます。ambientLight() が青色 (0, 0, 255) を発しいる場合、オブジェクトは反射できる光の成分がないため、黒色に見えます。",
        "より多くのマテリアルをこの <a href=\"https://p5js.org/examples/3d-materials.html\">例</a> で見ることができます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> としての色、配列としての色、または CSS 文字列としての色"
      }
    },
    "emissiveMaterial": {
      "description": [
        "マテリアルのエミッシブカラーを設定します。",
        "エミッシブマテリアルは、照明に関係なくエミッシブカラーを最大強度で表示します。これにより、オブジェクトが光っているように見える効果が得られます。",
        "ただし、「エミッシブ」という言葉は、マテリアルが周囲のオブジェクトに影響を与える光を実際に放射しないという意味では誤解を招くものです。",
        "他のマテリアルは、この <a href=\"/examples/3d-materials.html\">例</a> で見ることができます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは0-255)",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> としての色、配列としての色、または CSS 文字列としての色"
      }
    },
    "specularMaterial": {
      "description": [
        "マテリアルのスペキュラーカラーを設定します。",
        "スペキュラーマテリアルは反射性（光沢）があります。<a href=\"#/p5/shininess\">shininess()</a> 関数で光沢度を調整できます。",
        "<a href=\"#/p5/ambientMaterial\">ambientMaterial()</a> と同様に、specularMaterial() カラーは、物体が <a href=\"#/p5/ambientLight\">ambientLight()</a> もとで反射する色です。ただし、ambientMaterial() とは異なり、他のすべてのタイプの光源（<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/spotLight\">spotLight()</a>）に対して、スペキュラーマテリアルは <strong>光源の色</strong> を反射します。これが「光沢」のある外観を与える理由です。",
        "他のマテリアルは、この <a href=\"/examples/3d-materials.html\">例</a> で見ることができます。"
      ],
      "params": {
        "gray": "Number: 白と黒の間の値を指定する数値。",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは0-255)",
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> としての色、配列としての色、または CSS 文字列としての色"
      }
    },
    "shininess": {
      "description": [
        "<a href=\"#/p5/specularMaterial\">specularMaterial()</a> の光沢度（「光沢」）を設定します。",
        "デフォルト値および最小値は1です。"
      ],
      "params": {
        "shine": "Number: 光沢度"
      }
    },
    "camera": {
      "description": [
        "3D スケッチ内の現在のカメラの位置を設定します。この関数のパラメーターは、カメラの位置、スケッチの中心（カメラが指している場所）、および上方向（カメラの向き）を定義します。",
        "この関数はカメラの動きをシミュレートし、オブジェクトをさまざまな角度から見ることができます。覚えておいてください、オブジェクト自体を移動させるのではなく、カメラを移動させます。たとえば、centerX の値が正であり、カメラがスケッチの右側に回転する場合、オブジェクトは左に移動しているように見えます。",
        "この <a href = \"https://www.openprocessing.org/sketch/740258\">例</a> を参照して、カメラの位置を確認してください。",
        "パラメーターが指定されていない場合、デフォルトで次のようになります: camera(0, 0, (height/2) / tan(PI/6), 0, 0, 0, 0, 1, 0)"
      ],
      "params": {
        "x": "Number: (オプション) x 軸上のカメラ位置の値",
        "y": "Number: (オプション) y 軸上のカメラ位置の値",
        "z": "Number: (オプション) z 軸上のカメラ位置の値",
        "centerX": "Number: (オプション) スケッチの中心を表す x 座標",
        "centerY": "Number: (オプション) スケッチの中心を表す y 座標",
        "centerZ": "Number: (オプション) スケッチの中心を表す z 座標",
        "upX": "Number: (オプション) カメラからの'上'の方向の x 成分",
        "upY": "Number: (オプション) カメラからの'上'の方向の y 成分",
        "upZ": "Number: (オプション) カメラからの'上'の方向の z 成分"
      }
    },
    "perspective": {
      "description": [
        "3D スケッチの現在のカメラに対して透視投影を設定します。この投影は、縮尺を通じて奥行きを表現します。カメラに近いオブジェクトは実際のサイズで表示され、カメラから離れたオブジェクトは小さく表示されます。",
        "この関数のパラメーターは、垂直視野角、アスペクト比（通常は幅/高さ）、および、近距離および遠距離クリッピング平面を通じて、視錐台（カメラによってオブジェクトが見られる切り取られたピラミッド）を定義します。",
        "パラメーターが指定されていない場合、デフォルトで次のようになります: perspective(PI/3, width/height, eyeZ/10, eyeZ*10)。ここで、eyeZ は((height/2) / tan(PI/6))と等しいです。"
      ],
      "params": {
        "fovy": "Number: (オプション) カメラの視錐台の垂直視野角、ビューの下から上まで、<a href=\"#/p5/angleMode\">angleMode</a> の単位で",
        "aspect": "Number: (オプション) カメラの視錐台のアスペクト比",
        "near": "Number: (オプション) 視錐台の近距離平面の長さ",
        "far": "Number: (オプション) 視錐台の遠距離平面の長さ"
      }
    },
    "ortho": {
      "description": [
        "3D スケッチの現在のカメラに対して正射影を設定し、オブジェクトが見られる箱型の視錐台を定義します。この投影では、同じ次元のすべてのオブジェクトは、カメラに近いか遠いかに関係なく、同じサイズで表示されます。",
        "この関数のパラメーターは、左と右が最小および最大の x 値、上と下が最小および最大の y 値、および近くと遠くが最小および最大の z 値である視錐台を指定します。",
        "パラメーターが指定されていない場合、デフォルトで次のようになります: ortho(-width/2, width/2, -height/2, height/2)。"
      ],
      "params": {
        "left": "Number: (オプション) カメラの視錐台の左平面",
        "right": "Number: (オプション) カメラの視錐台の右平面",
        "bottom": "Number: (オプション) カメラの視錐台の下平面",
        "top": "Number: (オプション) カメラの視錐台の上平面",
        "near": "Number: (オプション) カメラの視錐台の近平面",
        "far": "Number: (オプション) カメラの視錐台の遠平面"
      }
    },
    "frustum": {
      "description": [
        "パラメーターで定義された現在のカメラの視錐台を設定します。",
        "視錐台は幾何学的な形状であり、頂点が切り取られたピラミッドです。視聴者の目が想像上のピラミッドの頂点に位置しているとき、視錐台の6つの面は3Dビューをレンダリングする際のクリッピング平面として機能します。したがって、クリッピング平面内のどんな形状も可視であり、それらの平面の外側にあるものは可視ではありません。",
        "視錐台を設定すると、レンダリングされるシーンの視点が変わります。多くの場合、これは<a href=\"https://p5js.org/reference/#/p5/perspective\">perspective()</a>を使用することでより簡単に達成できます。",
        "パラメーターが指定されていない場合、次のデフォルトが使用されます: frustum(-width/20, width/20, height/20, -height/20, eyeZ/10, eyeZ*10)、ここでeyeZは((height/2) / tan(PI/6))と等しいです。"
      ],
      "params": {
        "left": "Number: (オプション) カメラの視錐台の左面",
        "right": "Number: (オプション) カメラの視錐台の右面",
        "bottom": "Number: (オプション) カメラの視錐台の底面",
        "top": "Number: (オプション) カメラの視錐台の上面",
        "near": "Number: (オプション) カメラの視錐台の近面",
        "far": "Number: (オプション) カメラの視錐台の遠面"
      }
    },
    "createCamera": {
      "description": [
        "新しい <a href=\"#/p5.Camera\">p5.Camera</a> オブジェクトを作成し、現在の(アクティブな)カメラとして設定します。",
        "新しいカメラは、デフォルトの位置( <a href=\"#/p5.Camera/camera\">camera()</a> を参照)とデフォルトの遠近法プロジェクション( <a href=\"#/p5.Camera/perspective\">perspective()</a> を参照)で初期化されます。プロパティは <a href=\"#/p5.Camera\">p5.Camera</a> のメソッドで制御できます。",
        "注:すべての 3D スケッチは、デフォルトのカメラで初期化されます。このカメラは、シーン内で唯一のカメラである場合、グローバルなメソッド <a href=\"#/p5/camera\">camera()</a>、<a href=\"#/p5/perspective\">perspective()</a>、<a href=\"#/p5/ortho\">ortho()</a>、および <a href=\"#/p5/frustum\">frustum()</a> で制御できます。"
      ],
      "returns": "p5.Camera: 新しく作成されたカメラオブジェクト。"
    },
    "setCamera": {
      "description": [
        "3D スケッチの現在の(アクティブな)カメラを設定します。複数のカメラ間を切り替えることができます。"
      ],
      "params": {
        "cam": "p5.Camera: p5.Camera オブジェクト"
      }
    },
    "vertexNormal": {
      "description": [
        "後続の頂点に使用するための法線を設定します。"
      ],
      "params": {
        "x": "Number",
        "y": "Number",
        "z": "Number",
        "v": "Vector"
      }
    },
    "setAttributes": {
      "description": [
        "WebGL Drawing context の属性を設定します。これは、WebGL レンダラーの表示とパフォーマンスを調整する方法です。",
        "注意: WebGL キャンバスが作成された後に呼び出されると、描画コンテキストが再初期化されます。",
        "パラメーターとしてオブジェクトが渡された場合、オブジェクトで宣言されていない属性はすべてデフォルト値に設定されます。",
        "利用可能な属性は以下の通りです: alpha - キャンバスにアルファバッファが含まれているかどうかを示します。デフォルトは true です。",
        "depth - 描画バッファに少なくとも16ビットの深度バッファがあるかどうかを示します。デフォルトは true です。",
        "stencil - 描画バッファに少なくとも8ビットのステンシルバッファがあるかどうかを示します。",
        "antialias - アンチエイリアシングを実行するかどうかを示します。デフォルトは false（Safari では true）です。",
        "premultipliedAlpha - ページコンポジターが、描画バッファにプレ乗算アルファの色が含まれていると仮定することを示します。デフォルトは true です。",
        "preserveDrawingBuffer - true の場合、バッファはクリアされず、著者によってクリアまたは上書きされるまで値が保持されます（p5 は自動的に draw ループでクリアします）。デフォルトは true です。",
        "perPixelLighting - true の場合、ライティングシェーダーでピクセルごとのライティングが使用され、そうでない場合は頂点ごとのライティングが使用されます。デフォルトは true です。",
        "version - 1か2を指定して、どの WebGL バージョンをリクエストするかを指定します。デフォルトでは、 WebGL 2 がリクエストされます。 WebGL2 が利用できない場合、 WebGL 1 にフォールバックします。どのバージョンが使用されているかは、グローバルな<code>webglVersion</code>プロパティを見ることで確認できます。"
      ],
      "params": {
        "key": "String: 属性名",
        "value": "Boolean: 属性の新しい値",
        "obj": "Object: キーと値のペアをもつオブジェクト"
      }
    },
    "getAudioContext": {
      "description": [
        "このスケッチのための AudioContext を返します。 <a target='_blank' href= 'http://webaudio.github.io/web-audio-api/'>Web Audio API</a> について深く掘り下げたいユーザーにとって役立ちます。",
        "一部のブラウザーは、touchStarted（以下の例）などのユーザージェスチャーで startAudioContext を実行する必要があります。"
      ],
      "returns": "Object: このスケッチのための AudioContext"
    },
    "userStartAudio": {
      "description": [
        "ユーザーにオーディオの開始制御を与えることはよい慣習だけでなく、iOS や <a href=\"https://goo.gl/7K7WLu\" title=\"Google Chrome's autoplay policy\">Google Chrome</a> などの多くの Web ブラウザーによって強制されるポリシーです。これらのブラウザー固有のポリシーでは、Web Audio API の <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\" title=\"Audio Context @ MDN\">Audio Context</a> は一時停止状態で作成されます。",
        "これらの場合、ユーザーが操作イベント（例: <code>mousePressed()</code>）を明示的に再開するか、オーディオノードを開始するまで、サウンドは再生されません。これは、<code>p5.Oscillator</code> の <code>start()</code>、<code>p5.SoundFile</code> の <code>play()</code>、または <code>userStartAudio()</code> を呼び出すことで達成できます。",
        "<code>userStartAudio()</code> は、ユーザージェスチャーで AudioContext を開始します。デフォルトの動作では、どの mouseUp または touchEnd イベントでもオーディオが有効になります。下の例のように、<code>mousePressed()</code> などの特定のインタラクション関数に配置することもできます。この方法では、Yotam Mann による <a href=\"https://github.com/tambien/StartAudioContext\">StartAudioContext </a> ライブラリ（MIT ライセンス、2016年）を使用します。"
      ],
      "returns": "Promise: AudioContext の状態が「実行中」になったときに解決される Promise を返します",
      "params": {
        "elements": "Element|Array:  (オプション) この引数は Element、Selector String、NodeList、p5.Element、jQuery Element、またはそれらのいずれかの配列である必要があります。",
        "callback": "Function:  (オプション) AudioContext が開始されたときに呼び出すコールバック関数"
      }
    },
    "getOutputVolume": {
      "description": ["このスケッチの音の出力ボリュームを表す数値を返します。"],
      "returns": "Number: このスケッチの音の出力ボリューム。0.0（無音）から1.0の範囲内である必要があります。"
    },
    "outputVolume": {
      "description": [
        "このスケッチ内のすべての音の出力をスケール化し、0.0（無音）から1.0（最大ボリューム）の範囲で表します。デジタル音の最大振幅は1.0なので、1.0以上を掛けるとデジタル歪みが発生する可能性があります。フェードするには、<code>rampTime</code> パラメーターを指定します。より複雑なフェードには、Envelope クラスを使用してください。",
        "また、オシレータなどの信号源を渡すことで、オーディオ信号による振幅変調を行うことができます。",
        "<b>動作の概要</b>: p5.sound モジュールをロードすると、p5sound の単一のインスタンスが作成されます。このモジュール内のすべての音オブジェクトは、コンピューターの出力に到達する前に、p5sound に出力されます。したがって、p5sound の振幅を変更すると、このモジュール内のすべての音に影響します。",
        "値を指定しない場合は、Web Audio API Gain Node が返されます。"
      ],
      "params": {
        "volume": "Number|Object: 0.0から1.0の間のボリューム（振幅）または変調信号/オシレータ",
        "rampTime": "Number:  (オプション) t 秒間フェードします。",
        "timeFromNow": "Number:  (オプション) このイベントを、t 秒後にスケジュールします。"
      }
    },
    "soundOut": {
      "description": [
        "<code>p5.soundOut</code> は p5.sound の最終出力バスです。このウィンドウ Web Audio コンテキストの出力先に出力します。それには Web Audio API ノードが含まれており、<code>.limiter</code> のためのダイナミクスコンプレッサと <code>.input</code> と <code>.output</code> のためのゲインノードが含まれています。"
      ]
    },
    "sampleRate": {
      "description": [
        "すべてのサウンドオブジェクトのサンプルレートを表す、1秒あたりのサンプル数を返します。これはオペレーティングシステムのサウンドカードのサンプリングレートによって決定され、現在は変更できません。通常、44100であり、人間の聴覚範囲の2倍です。"
      ],
      "returns": "Number: サンプルレート (1 秒あたりのサンプル数)"
    },
    "freqToMidi": {
      "description": ["指定された周波数に最も近い MIDI ノート値を返します。"],
      "returns": "Number: MIDI ノート値",
      "params": {
        "frequency": "Number: 周波数。たとえば、中央ドの上の「A」は440Hzです。"
      }
    },
    "midiToFreq": {
      "description": [
        "指定された MIDI ノート値の周波数値を返します。General MIDI では、ノートを整数で扱います。中央ドは60、C#は61、D は62などです。オシレーターで音階を生成するのに役立ちます。"
      ],
      "returns": "Number: 指定された MIDI ノートの周波数値",
      "params": {
        "midiNote": "Number: MIDI ノート番号"
      }
    },
    "soundFormats": {
      "description": [
        "SoundFile フォーマットをリストアップし、クライアントの Web ブラウザーに適合するフォーマットを探します。LoadSound はこれらの拡張子を検索し、変換が必要な場合は <a href=\"http://media.io/\">こちら</a> の無料のオンラインファイルコンバーターを使用してください。"
      ],
      "params": {
        "formats": "String: (オプション) 例: 'mp3', 'wav', 'ogg'"
      }
    },
    "saveSound": {
      "description": [
        "p5.SoundFile を.wav ファイルとして保存します。ブラウザーはユーザーにファイルをダウンロードするように促します。サーバーにオーディオをアップロードする場合は、<a href=\"/docs/reference/#/p5.SoundFile/saveBlob\"><code>p5.SoundFile.saveBlob</code></a> を使用してください。"
      ],
      "params": {
        "soundFile": "p5.SoundFile: 保存したい p5.SoundFile",
        "fileName": "String: .wav ファイルの名前。"
      }
    },
    "loadSound": {
      "description": [
        "指定されたパスから新しい p5.SoundFile を返します。preload() 中に呼び出された場合、p5.SoundFile は setup() および draw() の実行前に再生準備ができます。preload() の外で呼び出された場合、p5.SoundFile はすぐに再生準備ができないため、loadSound にはコールバック関数が第二引数として渡されます。外部ファイルをロードする場合は、<a href=\"https://github.com/processing/p5.js/wiki/Local-server\">local server</a> を使用することをお勧めします。"
      ],
      "returns": "SoundFile: p5.SoundFile を返します。",
      "params": {
        "path": "String|Array: 音声ファイルへのパス、または複数の形式の音声ファイルへのパスを含む配列、例: ['sound.ogg', 'sound.mp3']。また、HTML5 File API または p5.File からのオブジェクトも受け入れます。",
        "successCallback": "Function: (オプション) ファイルの読み込みが完了したときに呼び出す関数の名前",
        "errorCallback": "Function: (オプション) ファイルの読み込み中にエラーが発生した場合に呼び出す関数の名前。",
        "whileLoading": "Function: (オプション) ファイルの読み込み中に呼び出す関数の名前。現在読み込まれているパーセンテージ（0.0〜1.0）が渡されます。"
      }
    },
    "createConvolver": {
      "description": [
        "p5.Convolver を作成します。インパルス応答を生成するために使用される音声ファイルへのパスを受け入れます。"
      ],
      "returns": "p5.Convolver:",
      "params": {
        "path": "String: 音声ファイルへのパス",
        "callback": "Function: (オプション) 読み込みが成功した場合に呼び出す関数。オブジェクトは、コールバック関数に引数として渡されます。",
        "errorCallback": "Function: (オプション) 読み込みに失敗した場合に呼び出す関数。カスタムエラーがコールバック関数の引数として渡されます。"
      }
    },
    "setBPM": {
      "description": [
        "すべての p5.Parts のグローバルテンポ（1分あたりの拍数）を設定します。このメソッドは、すべてのアクティブな p5.Parts に影響を与えます。"
      ],
      "params": {
        "BPM": "Number: 拍数(分あたり)",
        "rampTime": "Number: 現在からの秒数"
      }
    }
  },
  "p5.Color": {
    "description": [
      "このクラスは色を表現します。各 <code>p5.Color</code> オブジェクトは、その構築時にアクティブであった色モードとレベルの最大値を保存します。これらの値は、オブジェクトのコンストラクタに渡された引数を解釈するために使用されます。また、 <a href=\"#/p5/saturation\">saturation()</a> が呼び出されたときの出力フォーマットも決定します。",
      "色は、0 から 1 まで正規化された浮動小数点形式の理想的な RGBA 値として配列内に格納されます。これらの値は、 0 から 255 までの RGBA レベルの最も近いスクリーン色を計算するために使用されます。スクリーンカラーはレンダラーに送信されます。",
      "異なる色表現が計算されると、結果はパフォーマンスのためにキャッシュされます。これらの値は正規化された浮動小数点数です。",
      "<a href=\"#/p5/color\">color()</a> は、このクラスのインスタンスを作成するのに推奨される方法です。"
    ],
    "params": {
      "pInst": "P5: (オプション) p5インスタンスへのポインタ",
      "vals": "Number[]|String: 赤、緑、青、およびアルファチャンネル、または、 CSS カラーの色値を含む配列。"
    },
    "toString": {
      "description": [
        "色を文字列としてフォーマットして返します。これはデバッグに役立つことがあります。また、p5.js を他のライブラリと一緒に使用する場合にも役立ちます。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "format": "String: (オプション) カラー文字列の書式設定方法。空白にすると、rgba(r、g、b、a)として文字列をフォーマットします。 '#rgb'、 '#rgba'、 '#rrggbb'、および'#rrggbbaa'は16進数のカラーコードとしてフォーマットされます。 'rgb'、 'hsb'、および'hsl'は、指定されたカラーモードでフォーマットされたカラーを返します。 'rgba'、 'hsba'、および'hsla'は、上記と同じですがアルファチャネルが含まれます。 'rgb%'、 'hsb%'、 'hsl%'、 'rgba%'、 'hsba%'、および'hsla%'はパーセントとしてフォーマットされます。"
      }
    },
    "setRed": {
      "description": [
        "カラーの赤成分を設定します。範囲は <a href=\"#/colorMode\">colorMode()</a> に依存します。デフォルトの RGB モードでは、0 から 255 の範囲です。"
      ],
      "params": {
        "red": "Number: 新しい赤の値"
      }
    },
    "setGreen": {
      "description": [
        "カラーの緑成分を設定します。範囲は <a href=\"#/colorMode\">colorMode()</a> に依存します。デフォルトの RGB モードでは、0 から 255 の範囲です。"
      ],
      "params": {
        "green": "Number: 新しい緑の値"
      }
    },
    "setBlue": {
      "description": [
        "カラーの青成分を設定します。範囲は <a href=\"#/colorMode\">colorMode()</a> に依存します。デフォルトの RGB モードでは、0 から 255 の範囲です。"
      ],
      "params": {
        "blue": "Number: 新しい青の値"
      }
    },
    "setAlpha": {
      "description": [
        "カラーのアルファ(透明度)成分を設定します。範囲は <a href=\"#/colorMode\">colorMode()</a> に依存します。デフォルトの RGB モードでは、0 から 255 の範囲です。"
      ],
      "params": {
        "alpha": "Number: 新しいアルファ値"
      }
    }
  },
  "p5.Element": {
    "description": [
      "スケッチに追加されるすべての要素の基底クラスで、キャンバス、グラフィックスバッファ、およびその他の HTML 要素が含まれます。直接呼び出されることはありませんが、<a href=\"#/p5.Element\">p5.Element</a> オブジェクトは、<a href=\"#/p5/createCanvas\">createCanvas()</a>、<a href=\"#/p5/createGraphics\">createGraphics()</a>、<a href=\"#/p5/createDiv\">createDiv()</a>、<a href=\"#/p5/createImg\">createImg()</a>、<a href=\"#/p5/createInput\">createInput()</a> などを呼び出すことで作成されます。"
    ],
    "params": {
      "elt": "HTMLElement: ラップされた DOM ノード",
      "pInst": "P5: (オプション) p5 インスタンスへのポインタ"
    },
    "elt": {
      "description": [
        "基礎となる HTML 要素。これに対してすべての通常の HTML メソッドを呼び出すことができます。"
      ]
    },
    "width": {},
    "height": {},
    "parent": {
      "description": [
        "指定された親要素に要素をアタッチします。要素のコンテナを設定する方法です。文字列 ID、DOM ノード、または <a href=\"#/p5.Element\">p5.Element</a> を受け入れます。引数がない場合、親ノードが返されます。キャンバスの位置を決める他の方法については、<a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>キャンバスの配置</a> の wiki ページを参照してください。"
      ],
      "params": {
        "parent": "String|p5.Element|Object: 望ましい親要素の ID、DOM ノード、または <a href=\"#/p5.Element\">p5.Element</a>"
      }
    },
    "id": {
      "description": [
        "要素の ID を設定します。ID 引数が渡されない場合は、代わりに要素の現在の ID が返されます。ページ内で特定の ID をもつ要素はひとつだけであることに注意してください。<a href=\"#/p5.Element/class\">class()</a> メソッドは、同じクラス名をもつ複数の要素を識別するために使用できます。"
      ],
      "params": {
        "id": "String: 要素の ID"
      }
    },
    "class": {
      "description": [
        "指定されたクラスを要素に追加します。クラス引数が渡されない場合は、代わりに要素の現在のクラスを含む文字列が返されます。"
      ],
      "params": {
        "class": "String: 追加するクラス"
      }
    },
    "mousePressed": {
      "description": [
        "<a href=\"#/p5.Element/mousePressed\">mousePressed()</a> メソッドは、要素の上でマウスボタンが押されるたびに1回呼び出されます。一部のモバイルブラウザーでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスが押されたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "doubleClicked": {
      "description": [
        "<a href=\"#/p5.Element/doubleClicked\">doubleClicked()</a> メソッドは、要素の上でマウスボタンが2回押されるたびに1回呼び出されます。これは、要素とアクション固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがダブルクリックされたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseWheel": {
      "description": [
        "要素の上でマウスホイールがスクロールされるたびに、<a href=\"#/p5.Element/mouseWheel\">mouseWheel()</a> メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。",
        "このメソッドは、コールバック関数を引数として受け入れ、要素で <code>wheel</code> イベントがトリガーされると実行されます。コールバック関数には、<code>event</code> というひとつの引数が渡されます。<code>event.deltaY</code> プロパティは、マウスホイールが上に回転するか、ユーザーから離れる方向に回転すると負の値を返し、他の方向では正の値を返します。<code>event.deltaX</code> は、<code>event.deltaY</code> と同様のことを行いますが、マウスホイールの水平方向のスクロールを読み取ります。",
        "macOS で「ナチュラル」スクロールが有効になっている場合、<code>event.deltaY</code> の値は反転します。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがスクロールされたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseReleased": {
      "description": [
        "要素の上でマウスボタンが離されるたびに、<a href=\"#/p5.Element/mouseReleased\">mouseReleased()</a> メソッドが1回呼び出されます。一部のモバイルブラウザーでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスが離されたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseClicked": {
      "description": [
        "要素の上でマウスボタンが押されて離された後、<a href=\"#/p5.Element/mouseClicked\">mouseClicked()</a> メソッドが1回呼び出されます。一部のモバイルブラウザーでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがクリックされたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseMoved": {
      "description": [
        "マウスが要素の上を移動するたびに、<a href=\"#/p5.Element/mouseMoved\">mouseMoved()</a> メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素の上を移動したときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseOver": {
      "description": [
        "マウスが要素に移動するたびに、<a href=\"#/p5.Element/mouseOver\">mouseOver()</a> メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素に移動したときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseOut": {
      "description": [
        "マウスが要素から離れるたびに、<a href=\"#/p5.Element/mouseOut\">mouseOut()</a> メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素から離れたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "touchStarted": {
      "description": [
        "タッチが登録されるたびに、<a href=\"#/p5.Element/touchStarted\">touchStarted()</a> メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素上でタッチが開始されたときに発火する関数。代わりに <code>false</code> が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "touchMoved": {
      "description": [
        "touchMoved() メソッドは、タッチが移動するたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: タッチが要素の上を移動するときに発火する関数。代わりに <code>false</code> を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "touchEnded": {
      "description": [
        "touchEnded() メソッドは、タッチが終了するたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: タッチが要素の上で終了するときに発火する関数。代わりに <code>false</code> を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "dragOver": {
      "description": [
        "dragOver() メソッドは、ファイルが要素の上にドラッグされるたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: ファイルが要素の上にドラッグされるときに発火する関数。代わりに <code>false</code> を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "dragLeave": {
      "description": [
        "dragLeave() メソッドは、ドラッグされたファイルが要素領域を離れるたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: ファイルが要素からドラッグされたときに発火する関数。代わりに <code>false</code> を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "addClass": {
      "description": ["指定されたクラスを要素に追加します。"],
      "params": {
        "class": "String: 追加するクラスの名前"
      }
    },
    "removeClass": {
      "description": ["指定されたクラスを要素から削除します。"],
      "params": {
        "class": "String: 削除するクラスの名前"
      }
    },
    "hasClass": {
      "description": [
        "指定されたクラスがすでに要素に適用されているかどうかを確認します。"
      ],
      "returns": "Boolean: 要素が指定されたクラスを持っているかどうかの真偽値",
      "params": {
        "c": "String: 確認するクラスのクラス名"
      }
    },
    "toggleClass": {
      "description": ["要素のクラスを切り替えます。"],
      "params": {
        "c": "String: 切り替えるクラス名"
      }
    },
    "child": {
      "description": [
        "要素を指定された親に子としてアタッチします。文字列 ID、DOM ノード、または <a href=\"#/p5.Element\">p5.Element</a> を受け入れます。引数が指定されていない場合、子 DOM ノードの配列が返されます。"
      ],
      "returns": "Node[]: 子ノードの配列",
      "params": {
        "child": "String|p5.Element: (オプション) 現在の要素に追加する ID、DOM ノード、または <a href=\"#/p5.Element\">p5.Element</a>"
      }
    },
    "center": {
      "description": [
        "p5.Element を親に対して垂直方向、水平方向、または両方で中央に配置します。親がない場合は、ボディに対して中央に配置されます。引数が渡されない場合、p5.Element は垂直方向と水平方向の両方で整列されます。"
      ],
      "params": {
        "align": "String: (オプション) 'vertical'、'horizontal'を渡すと、要素がそれに応じて整列されます"
      }
    },
    "html": {
      "description": [
        "引数が与えられた場合、要素の内部 HTML を設定し、既存の HTML を置き換えます。true が2番目の引数として含まれている場合、HTML は既存の HTML を置き換えるのではなく追加されます。引数が与えられない場合、要素の内部 HTML が返されます。"
      ],
      "returns": "String: 要素の内部 HTML",
      "params": {
        "html": "String: (オプション) 要素内に配置される HTML",
        "append": "Boolean: (オプション) HTML を既存のものに追加するかどうか"
      }
    },
    "position": {
      "description": [
        "要素の位置を設定します。位置タイプの引数が与えられない場合、位置はウィンドウの(0, 0)に対して相対的になります。基本的に、これにより position:absolute および style の left および top プロパティが設定されます。位置タイプを指定するオプションの第3引数が与えられた場合、x 座標と y 座標は <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/position\">位置決めスキーム</a> にもとづいて解釈されます。引数が与えられない場合、関数は要素の x および y 位置を返します。"
      ],
      "returns": "Object: 要素の位置を含むオブジェクト { x: 0, y: 0 }形式のオブジェクト",
      "params": {
        "x": "Number: (オプション) ウィンドウの左上を基準とした x 位置(オプション)",
        "y": "Number: (オプション) ウィンドウの左上を基準とした y 位置(オプション)",
        "positionType": "String: (オプション) static, fixed, relative, sticky, initial, inherit のいずれか(オプション)"
      }
    },
    "style": {
      "description": [
        "与えられたスタイル（CSS）プロパティ（第1引数）を、与えられた値（第2引数）で要素に設定します。単一の引数が与えられた場合、.style() は指定されたプロパティの値を返します。ただし、単一の引数が CSS 構文（'text-align:center'）で与えられた場合、.style() は適切に CSS を設定します。"
      ],
      "returns": "String: プロパティの値",
      "params": {
        "property": "String: 設定するプロパティ",
        "value": "String|p5.Color: プロパティに割り当てる値"
      }
    },
    "attribute": {
      "description": [
        "指定された要素に新しい属性を追加するか、既存の属性の値を変更します。値が指定されていない場合、指定された属性の値を返すか、属性が設定されていない場合は null を返します。"
      ],
      "returns": "String: 属性の値",
      "params": {
        "attr": "String: 設定する属性",
        "value": "String: 属性に割り当てる値"
      }
    },
    "removeAttribute": {
      "description": ["指定された要素の属性を削除します。"],
      "params": {
        "attr": "String: 削除する属性"
      }
    },
    "value": {
      "description": [
        "引数が与えられない場合は要素の値を返すか、要素の値を設定します。"
      ],
      "returns": "String|Number: 要素の値",
      "params": {
        "value": "String|Number"
      }
    },
    "show": {
      "description": [
        "現在の要素を表示します。基本的に、style に display:block を設定します。"
      ]
    },
    "hide": {
      "description": [
        "現在の要素を非表示にします。基本的に、style に display:none を設定します。"
      ]
    },
    "size": {
      "description": [
        "要素の幅と高さを設定します。AUTO を使用して、一度にひとつの次元だけを調整することもできます。引数が与えられない場合、オブジェクトで要素の幅と高さを返します。画像など、読み込む必要のある要素の場合は、要素の読み込みが完了した後に関数を呼び出すことをお勧めします。"
      ],
      "returns": "Object: オブジェクト内の要素の幅と高さ",
      "params": {
        "w": "Number|Constant: 要素の幅で、AUTO または数値",
        "h": "Number|Constant: (オプション) 要素の高さで、AUTO または数値"
      }
    },
    "remove": {
      "description": [
        "要素を削除し、すべてのメディアストリームを停止し、すべてのリスナーを登録解除します。"
      ]
    },
    "drop": {
      "description": [
        "要素にドロップされたファイルがすべて読み込まれるたびに呼び出されるコールバックを登録します。p5 は、ドロップされたすべてのファイルをメモリーに読み込み、p5.File オブジェクトとしてコールバックに渡します。同時にドロップされた複数のファイルは、コールバックが複数回呼び出される結果となります。",
        "必要に応じて、2つ目のコールバックを渡すこともできます。これは、生の <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/drop\">drop</a> イベントに登録されます。そのため、コールバックは元の <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\">DragEvent</a> が提供されます。同時に複数のファイルをドロップすると、2つ目のコールバックは1回のドロップごとにトリガーされますが、最初のコールバックはロードされたファイルごとにトリガーされます。"
      ],
      "params": {
        "callback": "Function: 読み込まれたファイルを受け取るコールバックで、ドロップされた各ファイルに対して呼び出されます。",
        "fxn": "Function: (オプション) ファイルがドロップされたときに、ドロップイベントでトリガーされるコールバック。"
      }
    }
  },
  "p5.Graphics": {
    "description": [
      "レンダラーを薄くラップするために使用される、グラフィックスバッファオブジェクトを作成するためのクラスです。オフスクリーングラフィックスバッファに描画する必要がある場合は、このクラスを使用してください。2つのパラメーターは、ピクセル単位での幅と高さを定義します。このクラスのフィールドとメソッドは多岐にわたりますが、p5 の通常の描画 API を反映しています。"
    ],
    "params": {
      "w": "Number: 幅",
      "h": "Number: 高さ",
      "renderer": "Constant: 使用するレンダラーで、P2D または WEBGL のいずれか",
      "pInst": "P5: (オプション) p5 インスタンスへのポインタ",
      "canvas": "Object: (オプション) 既存の HTML Canvas 要素"
    },
    "reset": {
      "description": [
        "グラフィックスバッファオブジェクトで自動的にリセットされない、変換カテゴリやライトカテゴリの関数によって変更された値などをリセットします。<a href='#/p5/draw'>draw()</a> でこれを呼び出すと、標準キャンバスの動作がコピーされます。"
      ]
    },
    "remove": {
      "description": [
        "グラフィックスオブジェクトをページから削除し、関連するリソースを解放します。"
      ]
    },
    "createFramebuffer": {
      "description": [
        "新しい <a href=\"#/p5.Framebuffer\">p5.Framebuffer</a> を p5.Graphics WebGL コンテキスト内に作成して返します。",
        "これは <a href=\"#/p5/createFramebuffer\">global createFramebuffer 関数</a> と同じパラメーターを取ります。"
      ]
    }
  },
  "p5.Renderer": {
    "description": [
      "p5.js「コア」の主要なグラフィックスとレンダリングコンテキスト、および基本 API 実装です。Renderer2D および Renderer3D クラスのそれぞれのスーパークラスとして使用されます。"
    ],
    "params": {
      "elt": "HTMLElement: ラップされた DOM ノード",
      "pInst": "P5: (オプション) p5 インスタンスへのポインタ",
      "isMainCanvas": "Boolean: (オプション) メインキャンバスとして使用するかどうか"
    }
  },
  "JSON": {
    "stringify": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN エントリ</a> から: JSON.stringify() メソッドは、JavaScript オブジェクトまたは値を JSON<a href=\"#/p5/string\">文字列</a> に変換します。"
      ],
      "params": {
        "object": "Object: JSON に変換したい JavaScript オブジェクト"
      }
    }
  },
  "console": {
    "log": {
      "description": [
        "メッセージをブラウザーのウェブコンソールに出力します。p5 を使用する場合、<a href=\"#/p5/print\">print</a> と <a href=\"#/p5/console/log\">console.log</a> を互換性があります。",
        "コンソールは、使用しているブラウザーによって異なる方法で開きます。以下は、<a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console/Opening_the_Web_Console\">Firefox</a>、<a href=\"https://developers.google.com/web/tools/chrome-devtools/open\">Chrome</a>、<a href=\"https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide/console\">Edge</a>、および <a href=\"https://support.apple.com/en-ca/guide/safari/sfri20948/mac\">Safari</a> でコンソールを開く方法に関するリンクです。 <a href=\"https://editor.p5js.org/\">オンライン p5 エディタ</a> では、コンソールはコードエディタの下に直接埋め込まれています。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Console/log\">MDN エントリ</a> から: Console メソッド log() は、ウェブコンソールにメッセージを出力します。メッセージは、単一の <a href=\"#/p5/string\">文字列</a>（オプションの置換値付き）であっても、ひとつ以上の JavaScript <a href=\"#/p5/object\">オブジェクト</a> であっても構いません。"
      ],
      "params": {
        "message": "String|Expression|Object: コンソールに出力したいメッセージ"
      }
    }
  },
  "p5.TypedDict": {
    "description": [
      "すべての p5.Dictionary タイプの基本クラス。具体的な型付き Dictionary クラスは、このクラスから継承されます。"
    ],
    "size": {
      "description": [
        "現在 Dictionary に格納されているキーと値のペアの数を返します。"
      ],
      "returns": "Integer: Dictionary 内のキーと値のペアの数"
    },
    "hasKey": {
      "description": [
        "指定されたキーが Dictionary に存在する場合は true を返し、それ以外の場合は false を返します。"
      ],
      "returns": "Boolean: そのキーが Dictionary に存在するかどうか",
      "params": {
        "key": "Number|String: 調べたいキー"
      }
    },
    "get": {
      "description": ["指定されたキーに格納されている値を返します。"],
      "returns": "Number|String: そのキーに格納されている値",
      "params": {
        "the": "Number|String: アクセスしたいキー"
      }
    },
    "set": {
      "description": [
        "指定されたキーが Dictionary にすでに存在する場合、そのキーに関連付けられた値を更新します。それ以外の場合は、新しいキーと値のペアが追加されます。"
      ],
      "params": {
        "key": "Number|String",
        "value": "Number|String"
      }
    },
    "create": {
      "description": ["Dictionary に新しいキーと値のペアを作成します。"],
      "params": {
        "key": "Number|String",
        "value": "Number|String",
        "obj": "Object: キー/値のペア"
      }
    },
    "clear": {
      "description": [
        "Dictionary から以前に格納されたすべてのキーと値のペアを削除します。"
      ]
    },
    "remove": {
      "description": [
        "指定されたキーで格納されているキーと値のペアを Dictionary から削除します。"
      ],
      "params": {
        "key": "Number|String: 削除するペアのキー"
      }
    },
    "print": {
      "description": [
        "現在 Dictionary に格納されているアイテムのセットをコンソールにログします。"
      ]
    },
    "saveTable": {
      "description": [
        "Dictionary を CSV ファイルに変換してローカルにダウンロードします。"
      ]
    },
    "saveJSON": {
      "description": [
        "Dictionary を JSON ファイルに変換してローカルにダウンロードします。"
      ]
    }
  },
  "p5.StringDict": {
    "description": ["文字列用のシンプルな Dictionary クラス。"]
  },
  "p5.NumberDict": {
    "description": ["数値用のシンプルな Dictionary クラス。"],
    "add": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値を追加します。合計は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 追加したい値のキー",
        "Number": "Number: 値に追加する数"
      }
    },
    "sub": {
      "description": [
        "指定されたキーで現在保存されている値から指定された数値を減算します。差は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 減算したい値のキー",
        "Number": "Number: 値から減算する数"
      }
    },
    "mult": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値を乗算します。積は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 乗算したい値のキー",
        "Amount": "Number: 値に乗算する数"
      }
    },
    "div": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値で除算します。商は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 除算したい値のキー",
        "Amount": "Number: 値を除算する数"
      }
    },
    "minValue": {
      "description": ["辞書に現在保存されている最小の数値を返します。"],
      "returns": "Number:"
    },
    "maxValue": {
      "description": ["辞書に現在保存されている最大の数値を返します。"],
      "returns": "Number:"
    },
    "minKey": {
      "description": ["辞書で現在使用されている最小のキーを返します。"],
      "returns": "Number:"
    },
    "maxKey": {
      "description": ["辞書で現在使用されている最大のキーを返します。"],
      "returns": "Number:"
    }
  },
  "p5.MediaElement": {
    "description": [
      "<a href=\"#/p5.Element\">p5.Element</a> を拡張してオーディオとビデオを処理します。 <a href=\"#/p5.Element\">p5.Element</a> のメソッドに加えて、メディアを制御するメソッドも含まれています。直接呼び出されることはありませんが、<a href=\"#/p5/createVideo\">createVideo</a>、<a href=\"#/p5/createAudio\">createAudio</a>、および <a href=\"#/p5/createCapture\">createCapture</a> を呼び出すことで <a href=\"#/p5.MediaElement\">p5.MediaElement</a> が作成されます。"
    ],
    "params": {
      "elt": "String: ラップされる DOM ノード"
    },
    "src": {
      "description": ["メディア要素のソースへのパス。"],
      "returns": "String: src"
    },
    "play": {
      "description": ["HTML5 メディア要素を再生します。"]
    },
    "stop": {
      "description": [
        "HTML5 メディア要素を停止します（現在の時間をゼロに設定）。"
      ]
    },
    "pause": {
      "description": ["HTML5 メディア要素を一時停止します。"]
    },
    "loop": {
      "description": [
        "HTML5 メディア要素の'loop'を true に設定し、再生を開始します。"
      ]
    },
    "noLoop": {
      "description": [
        "HTML5 メディア要素の'loop'を false に設定します。要素は最後に達すると停止します。"
      ]
    },
    "autoplay": {
      "description": [
        "HTML5 メディア要素を自動再生するかどうかを設定します。引数が指定されていない場合、デフォルトで自動再生されます。"
      ],
      "params": {
        "shouldAutoplay": "Boolean: 要素が自動再生すべきかどうか"
      }
    },
    "volume": {
      "description": [
        "この HTML5 メディア要素のボリュームを設定します。引数が与えられていない場合、現在のボリュームを返します。"
      ],
      "returns": "Number: 現在のボリューム",
      "params": {
        "val": "Number: 0.0から1.0の間のボリューム"
      }
    },
    "speed": {
      "description": [
        "引数が与えられていない場合、要素の現在の再生速度を返します。speed パラメーターは、2.0で要素を2倍の速度で再生し、0.5で半分の速度で再生し、-1 で通常の速度で逆再生します。（すべてのブラウザーが後方再生をサポートしているわけではなく、サポートしていても再生がスムーズでない場合があります。）"
      ],
      "returns": "Number: 要素の現在の再生速度",
      "params": {
        "speed": "Number: 要素の再生速度の乗数"
      }
    },
    "time": {
      "description": [
        "引数が与えられていない場合、要素の現在の時間を返します。引数が与えられた場合、要素の現在の時間がそれに設定されます。"
      ],
      "returns": "Number: 現在の時間（秒単位）",
      "params": {
        "time": "Number: 移動する時間（秒単位）"
      }
    },
    "duration": {
      "description": ["HTML5 メディア要素の再生時間を返します。"],
      "returns": "Number: 再生時間"
    },
    "onended": {
      "description": [
        "オーディオまたはビデオ要素が終了したときに呼び出されるイベントをスケジュールします。要素がループしている場合、これは呼び出されません。要素は、onended コールバックの引数として渡されます。"
      ],
      "params": {
        "callback": "Function: サウンドファイルが終了したときに呼び出す関数。メディア要素がコールバックの引数として渡されます。"
      }
    },
    "connect": {
      "description": [
        "この要素のオーディオ出力を指定された audioNode または p5.sound オブジェクトに送信します。要素が指定されていない場合、p5 のメイン出力に接続します。その接続は、このメソッドが最初に呼び出されたときに確立されます。すべての接続は、.disconnect() メソッドによって削除されます。",
        "このメソッドは、p5.sound.js アドオンライブラリと一緒に使用することを目的としています。"
      ],
      "params": {
        "audioNode": "AudioNode|Object: Web Audio API の AudioNode、または p5.sound ライブラリのオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "メイン出力を含むすべての Web Audio ルーティングを切断します。これは、たとえば、出力をオーディオエフェクトを介して再ルーティングしたい場合に便利です。"
      ]
    },
    "showControls": {
      "description": [
        "ウェブブラウザーによって決定されるデフォルトの MediaElement コントロールを表示します。"
      ]
    },
    "hideControls": {
      "description": [
        "デフォルトの mediaElement コントロールを非表示にします。"
      ]
    },
    "addCue": {
      "description": [
        "MediaElement（オーディオ/ビデオ）が再生キューポイントに到達するたびにトリガーされるイベントをスケジュールします。",
        "コールバック関数、トリガーする時間（秒単位）、およびコールバックのオプションのパラメーターを受け入れます。",
        "時間はコールバック関数の最初のパラメーターとして渡され、param は2番目のパラメーターとして渡されます。"
      ],
      "returns": "Number: id このキューの ID。removeCue(id)に便利です。",
      "params": {
        "time": "Number: このメディア要素の再生に関連する秒単位の時間。たとえば、再生が2秒に達するたびにイベントをトリガーするには、数値2を渡します。これは、コールバック関数に最初のパラメーターとして渡されます。",
        "callback": "Function: 指定された時間に呼び出される関数の名前。コールバックは、時間と（オプションで）パラメーターを2つのパラメーターとして受け取ります。",
        "value": "Object: (オプション) コールバック関数に2番目のパラメーターとして渡されるオブジェクト。"
      }
    },
    "removeCue": {
      "description": [
        "ID にもとづいてコールバックを削除します。ID は addCue メソッドによって返されます。"
      ],
      "params": {
        "id": "Number: addCue によって返されるキューの ID"
      }
    },
    "clearCues": {
      "description": [
        "addCue メソッドを介して元々スケジュールされていたすべてのコールバックを削除します。"
      ],
      "params": {
        "id": "Number: addCue によって返されるキューの ID"
      }
    }
  },
  "p5.File": {
    "description": [
      "ファイルの基本クラス。Element.drop や createFileInput で使用されます。"
    ],
    "params": {
      "file": "File: ラップされたファイル"
    },
    "file": {
      "description": [
        "基礎となる File オブジェクト。このオブジェクトに対して File クラスの通常のメソッドが呼び出せます。"
      ]
    },
    "type": {
      "description": ["ファイルの種類（画像、テキストなど）"]
    },
    "subtype": {
      "description": [
        "ファイルのサブタイプ（一般的には拡張子 jpg、png、xml など）"
      ]
    },
    "name": {
      "description": ["ファイル名"]
    },
    "size": {
      "description": ["ファイルのサイズ"]
    },
    "data": {
      "description": [
        "ファイルが JSON であれば解析されたオブジェクト、XML であれば p5.XML、画像であれば画像データ、テキストであればテキストデータが含まれる URL 文字列"
      ]
    }
  },
  "p5.Image": {
    "description": [
      "<a href=\"#/p5.Image\">p5.Image</a> を新規に作成します。 <a href=\"#/p5.Image\">p5.Image</a> はキャンバスをバックエンドに使用した画像の表現です。",
      "p5 は.gif、.jpg、.png の画像を表示することができます。画像は 2D および 3D の空間で表示できます。画像を使用する前に、<a href=\"#/p5/loadImage\">loadImage()</a> 関数で画像をロードする必要があります。 <a href=\"#/p5.Image\">p5.Image</a> クラスには、画像の幅と高さを示すフィールドと、画像内のすべてのピクセルの値を含む <a href=\"#/p5.Image/pixels\">pixels[]</a> という配列が含まれています。",
      "以下で説明するメソッドは、画像のピクセルやアルファチャンネルへの簡単なアクセスと合成のプロセスを簡素化します。",
      "<a href=\"#/p5.Image/pixels\">pixels[]</a> 配列を使用する前に、画像に対して <a href=\"#/p5.Image/loadPixels\">loadPixels()</a> メソッドを使用して、ピクセルデータが正しくロードされていることを確認してください。"
    ],
    "params": {
      "width": "Number",
      "height": "Number"
    },
    "width": {
      "description": ["画像の幅"]
    },
    "height": {
      "description": ["画像の高さ"]
    },
    "pixels": {
      "description": [
        "ディスプレイウィンドウ内のすべてのピクセルの値を含む配列です。これらの値は数値です。この配列のサイズは、ピクセル密度の適切な係数を含めたディスプレイウィンドウのサイズ×4 で、各ピクセルの R、G、B、A 値が順番に表示されます。左から右に各行を移動し、各列を下に移動します。Retina やその他の高密度ディスプレイでは、ピクセルがより多く存在します（pixelDensity^2 倍）。「たとえば、画像が100×100ピクセルの場合、40000ピクセルがあります。pixelDensity = 2 の場合、160000になります。配列内の最初の4つの値（インデックス0〜3）は、（0、0）のピクセルの R、G、B、A 値です。次の4つの値（インデックス4〜7）には、（1、0）のピクセルの R、G、B、A 値が含まれます。一般的に、（x、y）のピクセルの値を設定するには:<pre><code class=\"language-javascript\">let d = pixelDensity(); for (let i = 0; i < d; i++) {  for (let j = 0; j < d; j++) {  // loop over  index = 4 * ((y * d + j) * width * d + (x * d + i));  pixels[index] = r;  pixels[index+1] = g;  pixels[index+2] = b;  pixels[index+3] = a;  } } </code></pre>",
        "この配列にアクセスする前に、<a href=\"#/p5.Image/loadPixels\">loadPixels()</a> 関数でデータを読み込む必要があります。配列データが変更された後、変更内容を反映させるには、<a href=\"#/p5.Image/updatePixels\">updatePixels()</a> 関数を実行する必要があります。"
      ]
    },
    "loadPixels": {
      "description": ["この画像のピクセルデータを[pixels]属性にロードします。"]
    },
    "updatePixels": {
      "description": [
        "この画像のバッキングキャンバスを[pixels]配列の内容で更新します。",
        "この画像がアニメーション GIF の場合、ピクセルは現在表示されているフレームで更新されます。"
      ],
      "params": {
        "x": "Integer: アンダーラインキャンバスのターゲット更新領域の x オフセット",
        "y": "Integer: アンダーラインキャンバスのターゲット更新領域の y オフセット",
        "w": "Integer: アンダーラインキャンバスのターゲット更新領域の幅",
        "h": "Integer: アンダーラインキャンバスのターゲット更新領域の高さ"
      }
    },
    "get": {
      "description": [
        "画像からピクセルの領域を取得します。",
        "パラメーターが指定されていない場合、全体の画像が返されます。x と y だけが渡された場合、単一のピクセルが抽出されます。すべてのパラメーターが渡された場合、矩形領域が抽出され、<a href=\"#/p5.Image\">p5.Image</a> が返されます。"
      ],
      "returns": "p5.Image: 矩形 <a href=\"#/p5.Image\">p5.Image</a>。",
      "params": {
        "x": "Number:ピクセルの x 座標",
        "y": "Number:ピクセルの y 座標",
        "w": "Number:幅",
        "h": "Number:高さ"
      }
    },
    "set": {
      "description": [
        "単一のピクセルの色を設定するか、この <a href=\"#/p5.Image\">p5.Image</a> に画像を書き込みます。",
        "多数のピクセルを扱う場合、pixels 配列を直接操作し、<a href=\"#/p5.Image/updatePixels\">updatePixels()</a> を呼び出す方が高速です。"
      ],
      "params": {
        "x": "Number:ピクセルの x 座標",
        "y": "Number:ピクセルの y 座標",
        "a": "Number|Number[]|Object: グレースケール値 | ピクセル配列 | <a href=\"#/p5.Color\">p5.Color</a> | コピーする画像"
      }
    },
    "resize": {
      "description": [
        "画像を新しい幅と高さにリサイズします。画像を比例的にスケーリングするには、wide または high パラメーターの値として0を使用します。たとえば、画像の幅を150ピクセルにし、同じ比率で高さを変更するには、resize(150, 0)を使用します。"
      ],
      "params": {
        "width": "Number: リサイズ後の画像の幅",
        "height": "Number: リサイズ後の画像の高さ"
      }
    },
    "copy": {
      "description": [
        "画像の一部を別の画像にコピーします。srcImage が指定されていない場合は、これがソースとして使用されます。ソースと宛先の領域が同じサイズでない場合、ソースピクセルを自動的に指定されたターゲット領域に合わせてリサイズします。"
      ],
      "params": {
        "srcImage": "p5.Image|p5.Element: ソース画像",
        "sx": "Integer: ソースの左上隅の X 座標",
        "sy": "Integer: ソースの左上隅の Y 座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 宛先の左上隅の X 座標",
        "dy": "Integer: 宛先の左上隅の Y 座標",
        "dw": "Integer: 宛先画像の幅",
        "dh": "Integer: 宛先画像の高さ"
      }
    },
    "mask": {
      "description": [
        "他の画像をロードし、そのアルファチャンネルをこの画像のアルファチャンネルとして使用することにより、画像の一部を表示しないようにマスクします。マスクは累積的であり、画像オブジェクトに適用されると、削除することはできません。"
      ],
      "params": {
        "srcImage": "p5.Image: ソース画像"
      }
    },
    "filter": {
      "description": [
        "<a href=\"#/p5.Image\">p5.Image</a> に画像フィルターを適用します。",
        "THRESHOLD は、レベルパラメーターで定義された閾値を基準に、画像を白黒のピクセルに変換します。パラメーターは0.0（黒）から1.0（白）の間でなければなりません。レベルが指定されていない場合、0.5が使用されます。",
        "GRAY は、画像内の任意の色をグレースケールに変換します。パラメーターは使用されません。",
        "OPAQUE は、アルファチャンネルを完全に不透明に設定します。パラメーターは使用されません。",
        "INVERT は、各ピクセルをその反対値に設定します。パラメーターは使用されません。",
        "POSTERIZE は、画像の各チャンネルをパラメーターで指定された色数に制限します。パラメーターは2から255の値を設定できますが、下限の範囲で効果が最も顕著に現れます。",
        "BLUR は、レベルパラメーターを使用してガウシアンブラーを実行し、ぼかしの程度を指定します。パラメーターが使用されていない場合、ぼかしは半径1のガウシアンブラーと同等です。値が大きくなると、ぼかしが増加します。",
        "ERODE は、明るい領域を減らします。パラメーターは使用されません。",
        "DILATE は、明るい領域を増やします。パラメーターは使用されません。",
        "filter() は WebGL モードでは機能しません。 WebGL モードでは、カスタムシェーダーを使用して類似の効果を実現できます。 Adam Ferriss は、フィルターの例に含まれる多くの効果を含む <a href=\"https://github.com/aferriss/p5jsShaderExamples\" target='_blank'>シェーダー例の選択</a> を作成しました。"
      ],
      "params": {
        "filterType": "Constant: THRESHOLD、GRAY、OPAQUE、INVERT、POSTERIZE、ERODE、DILATE、BLUR のいずれか。使用可能な各フィルターに関するドキュメントについては、Filters.js を参照してください。",
        "filterParam": "Number:  (オプション) 各フィルターユニークなパラメーター。上記を参照してください。"
      }
    },
    "blend": {
      "description": [
        "指定されたブレンドモードを使用して、ひとつの画像からピクセルの領域をコピーし、他の画像に貼り付けます。"
      ],
      "params": {
        "srcImage": "p5.Image: コピー元の画像",
        "sx": "Integer: コピー元画像の左上隅の X 座標",
        "sy": "Integer: コピー元画像の左上隅の Y 座標",
        "sw": "Integer: コピー元画像の幅",
        "sh": "Integer: コピー元画像の高さ",
        "dx": "Integer: コピー先画像の左上隅の X 座標",
        "dy": "Integer: コピー先画像の左上隅の Y 座標",
        "dw": "Integer: コピー先画像の幅",
        "dh": "Integer: コピー先画像の高さ",
        "blendMode": "定数: ブレンドモード。BLEND、DARKEST、LIGHTEST、DIFFERENCE、MULTIPLY、EXCLUSION、SCREEN、REPLACE、OVERLAY、HARD_LIGHT、SOFT_LIGHT、DODGE、BURN、ADD、NORMAL のいずれか。使用可能なブレンドモードは: normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity<a href=\"http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\">http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/</a>"
      }
    },
    "save": {
      "description": [
        "画像をファイルに保存し、ブラウザーをダウンロードするように指示します。ファイル名と拡張子の2つの文字列を受け入れます。png（デフォルト）、jpg、および gif がサポートされています。 p5.Image が GIF ファイルから読み込まれた場合のみ、ファイルはアニメーション GIF としてダウンロードされます。"
      ],
      "params": {
        "filename": "String:  ファイル名を指定してください",
        "extension": "String:  'png'または'jpg'"
      }
    },
    "reset": {
      "description": ["アニメーション GIF を最初の状態から再生します。"]
    },
    "getCurrentFrame": {
      "description": [
        "アニメーション GIF で現在表示されているフレームのインデックスを取得します。"
      ],
      "returns": "Number:  アニメーション GIF で現在表示されているフレームのインデックス"
    },
    "setFrame": {
      "description": [
        "アニメーション GIF で現在表示されているフレームのインデックスを設定します。"
      ],
      "params": {
        "index": "Number:  表示するフレームのインデックス"
      }
    },
    "numFrames": {
      "description": ["アニメーション GIF のフレーム数を返します。"],
      "returns": "Number: "
    },
    "play": {
      "description": [
        "<a href=\"#/p5.Image/pause\">pause()</a> で一時停止されたアニメーション GIF を再生します。"
      ]
    },
    "pause": {
      "description": ["アニメーション GIF を一時停止します。"]
    },
    "delay": {
      "description": [
        "アニメーション GIF のフレーム間の遅延時間を変更します。2番目のオプションパラメーターを指定することで、特定のフレームの遅延時間を変更できます。インデックスが指定されていない場合、すべてのフレームに新しい遅延時間が適用されます。"
      ],
      "params": {
        "d": "Number:  フレームを切り替える間の遅延時間（ミリ秒単位）",
        "index": "Number:  (オプション) 新しい遅延時間が適用されるフレームのインデックス {オプション}"
      }
    }
  },
  "p5.PrintWriter": {
    "params": {
      "filename": "String",
      "extension": "String (オプション) "
    },
    "write": {
      "description": ["PrintWriter ストリームにデータを書き込みます"],
      "params": {
        "data": "Array: PrintWriter によって書き込まれるすべてのデータ"
      }
    },
    "print": {
      "description": [
        "PrintWriter ストリームにデータを書き込み、末尾に改行を追加します"
      ],
      "params": {
        "data": "Array: PrintWriter によって出力されるすべてのデータ"
      }
    },
    "clear": {
      "description": [
        "PrintWriter オブジェクトにすでに書き込まれたデータをクリアします"
      ]
    },
    "close": {
      "description": ["PrintWriter を閉じます"]
    }
  },
  "p5.Table": {
    "description": [
      "<a href=\"#/p5.Table\">Table</a> オブジェクトは、伝統的なスプレッドシートのように、複数の行と列でデータを格納します。テーブルは、ゼロから、動的に、または既存のファイルからデータを生成できます。"
    ],
    "params": {
      "rows": "p5.TableRow[]: (オプション) p5.TableRow オブジェクトの配列"
    },
    "columns": {
      "description": [
        "\"header\"パラメーターでテーブルがロードされた場合、テーブル内の列の名前が含まれる配列です。"
      ]
    },
    "rows": {
      "description": [
        "テーブルの行を構成する <a href=\"#/p5.Table\">p5.TableRow</a> オブジェクトが含まれる配列です。<a href=\"#/p5/getRows\">getRows()</a> を呼び出した場合と同じ結果が得られます。"
      ]
    },
    "addRow": {
      "description": [
        "<a href=\"#/p5.Table\">p5.Table</a> オブジェクトに新しいデータ行を追加するには、<a href=\"#/p5/addRow\">addRow()</a> を使用します。デフォルトでは、空の行が作成されます。通常、新しい行の参照を TableRow オブジェクトに格納し（上記の newRow を参照）、その後 <a href=\"#/p5/set\">set()</a> を使用して個々の値を設定します。",
        "パラメーターとして <a href=\"#/p5.TableRow\">p5.TableRow</a> オブジェクトが含まれている場合、その行は複製され、テーブルに追加されます。"
      ],
      "returns": "p5.TableRow: 追加された行",
      "params": {
        "row": "p5.TableRow: (オプション) テーブルに追加する行"
      }
    },
    "removeRow": {
      "description": ["テーブルオブジェクトから行を削除します。"],
      "params": {
        "id": "Integer: 削除する行の ID 番号"
      }
    },
    "getRow": {
      "description": [
        "指定された <a href=\"#/p5.TableRow\">p5.TableRow</a> への参照を返します。参照は、選択した行の値を取得および設定するために使用できます。"
      ],
      "returns": "p5.TableRow: <a href=\"#/p5.TableRow\">p5.TableRow</a> オブジェクト",
      "params": {
        "rowID": "Integer: 取得する行の ID 番号"
      }
    },
    "getRows": {
      "description": [
        "テーブルからすべての行を取得します。 <a href=\"#/p5.TableRow\">p5.TableRow</a> の配列が返されます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a> の配列"
    },
    "findRow": {
      "description": [
        "提供された値を含む最初の行を見つけ、その行への参照を返します。複数の行が可能な場合でも、最初にマッチした行のみが返されます。検索する列は、ID またはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow:",
      "params": {
        "value": "String: マッチする値",
        "column": "Integer|String: 検索する列の ID 番号またはタイトル"
      }
    },
    "findRows": {
      "description": [
        "提供された値を含む行をテーブルから検索し、これらの行への参照を返します。配列が返されるため、例のように for ループを使用してすべての行を反復処理する必要があります。検索する列は、ID またはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a> オブジェクトの配列",
      "params": {
        "value": "String: マッチする値",
        "column": "Integer|String: 検索する列の ID 番号またはタイトル"
      }
    },
    "matchRow": {
      "description": [
        "提供された正規表現に一致する最初の行をテーブルから検索し、その行への参照を返します。複数の行が可能な場合でも、最初にマッチした行のみが返されます。検索する列は、ID またはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow: TableRow オブジェクト",
      "params": {
        "regexp": "String|RegExp: 一致する正規表現",
        "column": "String|Integer:  列 ID（数字）またはタイトル（文字列）"
      }
    },
    "matchRows": {
      "description": [
        "提供された正規表現に一致する行をテーブルから検索し、これらの行への参照を返します。配列が返されるため、例のように for ループを使用してすべての行を反復処理する必要があります。検索する列は、ID またはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a> オブジェクトの配列",
      "params": {
        "regexp": "String: 一致する正規表現",
        "column": "String|Integer:  (オプション) 列 ID（数字）またはタイトル（文字列）"
      }
    },
    "getColumn": {
      "description": [
        "指定した列内のすべての値を取得し、それらを配列として返します。列は、ID またはタイトルで指定できます。"
      ],
      "returns": "Array:  列値の配列",
      "params": {
        "column": "String|Number: 列の文字列または数値"
      }
    },
    "clearRows": {
      "description": [
        "テーブルからすべての行を削除します。すべての行が削除されますが、列と列のタイトルは維持されます。"
      ]
    },
    "addColumn": {
      "description": [
        "<a href=\"#/p5.Table\">Table</a> オブジェクトに新しい列を追加するには、<a href=\"#/p5/addColumn\">addColumn()</a> を使用します。通常、列を名前で簡単に参照できるようにするために、タイトルを指定する必要があります。（タイトルが指定されていない場合、新しい列のタイトルは null になります。）"
      ],
      "params": {
        "title": "String: (オプション) 列のタイトル"
      }
    },
    "getColumnCount": {
      "description": ["Table の列数を返します。"],
      "returns": "Integer: この Table に含まれる列数"
    },
    "getRowCount": {
      "description": ["Table の行数を返します。"],
      "returns": "Integer: この Table に含まれる行数"
    },
    "removeTokens": {
      "description": [
        "指定された文字（または\"tokens\"）を削除します。",
        "列が指定されていない場合、すべての列と行の値が処理されます。特定の列は、ID またはタイトルのいずれかで参照できます。"
      ],
      "params": {
        "chars": "String: 削除する文字をリストアップした文字列",
        "column": "String|Integer: (オプション) 列の ID（数字）または名前（文字列）"
      }
    },
    "trim": {
      "description": [
        "String の表の値から、先頭および末尾の空白（スペースやタブなど）をトリムします。列が指定されていない場合、すべての列と行の値がトリムされます。特定の列は、ID またはタイトルのいずれかで参照できます。"
      ],
      "params": {
        "column": "String|Integer: (オプション) 列の ID（数字）または名前（文字列）"
      }
    },
    "removeColumn": {
      "description": [
        "既存の Table オブジェクトから列を削除するには、<a href=\"#/p5/removeColumn\">removeColumn()</a> を使用します。削除する列は、そのタイトル（文字列）またはインデックス値（整数）で識別できます。removeColumn(0)は最初の列を、removeColumn(1)は2番目の列を削除します。"
      ],
      "params": {
        "column": "String|Integer: columnName（文字列）または ID（数字）"
      }
    },
    "set": {
      "description": [
        "Table の指定された行と列に値を格納します。行は ID で指定され、列は ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行の ID",
        "column": "String|Integer: 列の ID（数字）またはタイトル（文字列）",
        "value": "String|Number: 割り当てる値"
      }
    },
    "setNum": {
      "description": [
        "Table の指定された行と列に Float 値を格納します。行は ID で指定され、列は ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行の ID",
        "column": "String|Integer: 列の ID（数字）またはタイトル（文字列）",
        "value": "Number: 割り当てる値"
      }
    },
    "setString": {
      "description": [
        "Table の指定された行と列に String 値を格納します。行は ID で指定され、列は ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行の ID",
        "column": "String|Integer: 列の ID（数字）またはタイトル（文字列）",
        "value": "String: 割り当てる値"
      }
    },
    "get": {
      "description": [
        "指定したテーブルの特定の行と列から値を取得します。行は ID で指定され、列は ID またはタイトルで指定することができます。"
      ],
      "returns": "String|Number:",
      "params": {
        "row": "Integer: 行 ID",
        "column": "String|Integer: 列名(string)または ID(number)"
      }
    },
    "getNum": {
      "description": [
        "指定したテーブルの特定の行と列から Float 値を取得します。行は ID で指定され、列は ID またはタイトルで指定することができます。"
      ],
      "returns": "Number:",
      "params": {
        "row": "Integer: 行 ID",
        "column": "String|Integer: 列名(string)または ID(number)"
      }
    },
    "getString": {
      "description": [
        "指定したテーブルの特定の行と列から文字列を取得します。行は ID で指定され、列は ID またはタイトルで指定することができます。"
      ],
      "returns": "String:",
      "params": {
        "row": "Integer: 行 ID",
        "column": "String|Integer: 列名(string)または ID(number)"
      }
    },
    "getObject": {
      "description": [
        "テーブルのすべてのデータを取得し、オブジェクトとして返します。列名が渡された場合、各行のオブジェクトはその属性をタイトルとして保存します。"
      ],
      "returns": "Object:",
      "params": {
        "headerColumn": "String: (オプション) 各行オブジェクトのタイトルとして使用する列の名前 (オプション) "
      }
    },
    "getArray": {
      "description": [
        "テーブルのすべてのデータを取得し、多次元配列として返します。"
      ],
      "returns": "Array:"
    }
  },
  "p5.TableRow": {
    "description": [
      "TableRow オブジェクトは、テーブルから列に格納された単一の行のデータ値を表します。",
      "Table Row は、順序付けられた配列と、順不同の JSON オブジェクトの両方を含みます。"
    ],
    "params": {
      "str": "String: (オプション) オプション:separator で区切られた値の文字列を使用して行を入力します",
      "separator": "String: (オプション) デフォルトでは csv のコンマ区切り値"
    },
    "set": {
      "description": [
        "TableRow の指定された列に値を格納します。列は、ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列 ID（数値）またはタイトル（文字列）",
        "value": "String|Number: 格納する値"
      }
    },
    "setNum": {
      "description": [
        "TableRow の指定された列に浮動小数点値を格納します。列は、ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列 ID（数値）またはタイトル（文字列）",
        "value": "Number|String: 浮動小数点数として格納する値"
      }
    },
    "setString": {
      "description": [
        "TableRow の指定された列に文字列値を格納します。列は、ID またはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列 ID（数値）またはタイトル（文字列）",
        "value": "String|Number|Boolean|Object: 文字列として格納する値"
      }
    },
    "get": {
      "description": [
        "TableRow の指定された列から値を取得します。列は、ID またはタイトルのいずれかで指定できます。"
      ],
      "returns": "String|Number:",
      "params": {
        "column": "String|Integer: 列名（文字列）または ID（数値）"
      }
    },
    "getNum": {
      "description": [
        "TableRow の指定された列から浮動小数点値を取得します。列は、ID またはタイトルのいずれかで指定できます。"
      ],
      "returns": "Number: 浮動小数点数",
      "params": {
        "column": "String|Integer: 列名（文字列）または ID（数値）"
      }
    },
    "getString": {
      "description": [
        "TableRow の指定された列から文字列値を取得します。列は、ID またはタイトルのいずれらかで指定できます。"
      ],
      "returns": "String: 文字列",
      "params": {
        "column": "String|Integer: 列名（文字列）または ID（数値）"
      }
    }
  },
  "p5.XML": {
    "description": [
      "XML は XML オブジェクトの表現で、XML コードをパースすることができます。外部の XML ファイルを読み込んで XML オブジェクトを作成するには、<a href=\"#/p5/loadXML\">loadXML()</a> を使用してください。"
    ],
    "getParent": {
      "description": [
        "要素の親を取得し、別の <a href=\"#/p5.XML\">p5.XML</a> オブジェクトとして返します。"
      ],
      "returns": "p5.XML:要素の親"
    },
    "getName": {
      "description": ["要素の完全な名前を取得し、文字列として返します。"],
      "returns": "String:ノードの名前"
    },
    "setName": {
      "description": ["要素の名前を設定します。文字列として指定します。"],
      "params": {
        "the": "String:ノードの新しい名前"
      }
    },
    "hasChildren": {
      "description": [
        "要素に子要素があるかどうかをチェックし、ブール値として結果を返します。"
      ],
      "returns": "Boolean:"
    },
    "listChildren": {
      "description": [
        "要素のすべての子要素の名前を取得し、文字列の配列として返します。これは、各子要素に個別に <a href=\"#/p5.XML/getName\">getName()</a> を呼び出すことと同じです。"
      ],
      "returns": "String[]:要素の子要素の名前"
    },
    "getChildren": {
      "description": [
        "要素のすべての子要素を <a href=\"#/p5.XML\">p5.XML</a> オブジェクトの配列として返します。name パラメーターが指定された場合、その名前に一致するすべての子要素を返します。"
      ],
      "returns": "p5.XML[]:要素の子要素",
      "params": {
        "name": "String: (オプション) 要素名"
      }
    },
    "getChild": {
      "description": [
        "名前パラメーターまたは指定されたインデックスの子を一致する要素の最初のものを返します。一致する子が見つからない場合、undefined を返します。"
      ],
      "returns": "p5.XML:",
      "params": {
        "name": "String|Integer:要素名またはインデックス"
      }
    },
    "addChild": {
      "description": [
        "要素に新しい子要素を追加します。子要素は、新しいタグの名前として使用される String、または既存の <a href=\"#/p5.XML\">p5.XML</a> オブジェクトの参照で指定でき、新しく作成された子要素への参照が <a href=\"#/p5.XML\">p5.XML</a> オブジェクトとして返されます。"
      ],
      "params": {
        "node": "p5.XML:<a href=\"#/p5.XML\">p5.XML</a> オブジェクト。追加される子要素"
      }
    },
    "removeChild": {
      "description": ["名前またはインデックスで指定された要素を削除します。"],
      "params": {
        "name": "String|Integer:要素名またはインデックス"
      }
    },
    "getAttributeCount": {
      "description": ["指定された要素の属性の数を数え、数値として返します。"],
      "returns": "Integer:"
    },
    "listAttributes": {
      "description": [
        "指定された要素のすべての属性を取得し、文字列の配列として返します。"
      ],
      "returns": "String[]:属性の名前を含む文字列の配列"
    },
    "hasAttribute": {
      "description": [
        "指定された属性が要素に存在するかどうかをチェックします。"
      ],
      "returns": "Boolean:属性が見つかった場合は true、それ以外は false",
      "params": {
        "the": "String:チェックする属性"
      }
    },
    "getNum": {
      "description": [
        "要素の属性値を Number として返します。defaultValue パラメーターが指定されており、属性が存在しない場合、defaultValue が返されます。defaultValue が指定されていなく、属性が存在しない場合、0が返されます。"
      ],
      "returns": "Number:",
      "params": {
        "name": "String: 属性のフルネーム（非 null）",
        "defaultValue": "Number: (オプション) 属性のデフォルト値"
      }
    },
    "getString": {
      "description": [
        "要素の属性値を String として返します。defaultValue パラメーターが指定されており、属性が存在しない場合、defaultValue が返されます。defaultValue が指定されておらず、属性が存在しない場合は null が返されます。"
      ],
      "returns": "String:",
      "params": {
        "name": "String: 属性のフルネーム（非 null）",
        "defaultValue": "Number: (オプション) 属性のデフォルト値"
      }
    },
    "setAttribute": {
      "description": [
        "要素の属性の内容を設定します。最初のパラメーターは属性名を指定し、2番目のパラメーターは新しい内容を指定します。"
      ],
      "params": {
        "name": "String: 属性のフルネーム",
        "value": "Number|String|Boolean: 属性の値"
      }
    },
    "getContent": {
      "description": [
        "要素の内容を返します。そのような内容がない場合、defaultValue が指定されている場合は defaultValue が返され、それ以外の場合は null が返されます。"
      ],
      "returns": "String:",
      "params": {
        "defaultValue": "String: (オプション) 内容が見つからない場合に返される値"
      }
    },
    "setContent": {
      "description": ["要素の内容を設定します。"],
      "params": {
        "text": "String: 新しい内容"
      }
    },
    "serialize": {
      "description": [
        "要素を文字列にシリアライズします。この関数は、コンテンツを http リクエストに送信するか、ファイルに保存する準備をするために役立ちます。"
      ],
      "returns": "String: 要素のシリアル化された文字列"
    }
  },
  "p5.Vector": {
    "description": [
      "2次元または3次元ベクトルを記述するためのクラスです。ベクトルは大きさと方向をもつエンティティで、データ型はベクトルの成分 (<code>x</code> と <code>y</code> は 2D、<code>x</code>、<code>y</code>、<code>z</code> は 3D) を格納します。大きさと方向は、<a href=\"#/p5.Vector/mag\">p5.Vector.mag()</a> と <a href=\"#/p5.Vector/heading\">heading()</a> メソッドを介してアクセスできます。",
      "p5.js の多くの例では、位置、速度、または加速度を表すために <a href=\"#/p5.Vector\">p5.Vector</a> が使用されます。たとえば、画面上を移動する四角形を考えると、任意の瞬間にその位置（原点からその場所を指すベクトル）、速度（オブジェクトの位置が時間単位あたりにどのように変化するかを表すベクトル）、および加速度（オブジェクトの速度が時間単位あたりにどのように変化するかを表すベクトル）があります。",
      "ベクトルは値のグループを表すため、従来の加算/乗算などを単純に使用することはできません。代わりに、<a href=\"#/p5.Vector\">p5.Vector</a> クラス内のメソッドを使用する必要があります。"
    ],
    "params": {
      "x": "Number:  (オプション) ベクトルの x 成分",
      "y": "Number:  (オプション) ベクトルの y 成分",
      "z": "Number:  (オプション) ベクトルの z 成分"
    },
    "x": {
      "description": ["ベクトルの x 成分"]
    },
    "y": {
      "description": ["ベクトルの y 成分"]
    },
    "z": {
      "description": ["ベクトルの z 成分"]
    },
    "toString": {
      "description": [
        "ベクトル <code>v</code> の文字列表現を、<code>String(v)</code> または <code>v.toString()</code> を呼び出して取得します。このメソッドは、コンソールにベクトルを記録するために役立ちます。"
      ],
      "returns": "String: ベクトルの文字列表現"
    },
    "set": {
      "description": [
        "2つまたは3つの別々の変数、<a href=\"#/p5.Vector\">p5.Vector</a> のデータ、または float 配列の値を使用して、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を設定します。"
      ],
      "params": {
        "x": "Number:  (オプション) ベクトルの x 成分",
        "y": "Number:  (オプション) ベクトルの y 成分",
        "z": "Number:  (オプション) ベクトルの z 成分",
        "value": "p5.Vector|Number[]: 設定するベクトル"
      }
    },
    "copy": {
      "description": [
        "ベクトルのコピーを取得し、<a href=\"#/p5.Vector\">p5.Vector</a> オブジェクトを返します。"
      ],
      "returns": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクトのコピー",
      "params": {
        "v": "p5.Vector: コピー元の <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "add": {
      "description": [
        "<code>x</code>、<code>y</code> および <code>z</code> 成分をベクトルに加算したり、ひとつのベクトルを別のベクトルに加算したり、2つの独立したベクトルを合わせたりします。2つのベクトルを加算するメソッドのバージョンは静的メソッドで、<a href=\"#/p5.Vector\">p5.Vector</a> を返します。その他のバージョンは、ベクトルに直接作用します。また、このメソッドの引数に配列を指定することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 加算するベクトルの x 成分",
        "y": "Number:  (オプション) 加算するベクトルの y 成分",
        "z": "Number:  (オプション) 加算するベクトルの z 成分",
        "value": "p5.Vector|Number[]: 加算するベクトル",
        "v1": "p5.Vector: 加算する <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 加算する <a href=\"#/p5.Vector\">p5.Vector</a>",
        "target": "p5.Vector:  (オプション) 結果を受け取るベクトル"
      }
    },
    "rem": {
      "description": [
        "ベクトルを他のベクトルで割ったときの余りを返します。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 除数ベクトルの x 成分",
        "y": "Number: 除数ベクトルの y 成分",
        "z": "Number: 除数ベクトルの z 成分",
        "value": "p5.Vector | Number[]: 除数ベクトル",
        "v1": "p5.Vector: 被除数 <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 除数 <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "sub": {
      "description": [
        "ベクトルから <code>x</code>、<code>y</code>、<code>z</code> 成分を引きます。また、ひとつのベクトルから別のベクトルを引き、2つの独立したベクトルを引くこともできます。2つのベクトルを引くメソッドは静的メソッドで、<a href=\"#/p5.Vector\">p5.Vector</a> を返します。その他のメソッドはベクトルに直接作用します。このメソッドに引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 引かれるベクトルの x 成分",
        "y": "Number: (オプション) 引かれるベクトルの y 成分",
        "z": "Number: (オプション) 引かれるベクトルの z 成分",
        "value": "p5.Vector|Number[]: 引かれるベクトル",
        "v1": "p5.Vector: 引かれる <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 引く <a href=\"#/p5.Vector\">p5.Vector</a>",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "mult": {
      "description": [
        "ベクトルをスカラーで乗算し、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を乗算するか、2つの独立したベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を乗算します。ベクトルをスカラーで乗算する場合、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分はすべてスカラーで乗算されます。ベクトルを別のベクトルで乗算する場合、2つのベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を互いに乗算します（たとえば、2つのベクトル <code>a</code> と <code>b</code> の場合:<code>a.x * b.x</code>、<code>a.y * b.y</code>、<code>a.z * b.z</code>）。このメソッドの静的バージョンは新しい <a href=\"#/p5.Vector\">p5.Vector</a> を作成し、非静的バージョンはベクトルに直接作用します。また、この関数に引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "n": "Number: ベクトルと乗算する数値",
        "x": "Number: ベクトルの x 成分と乗算する数値",
        "y": "Number: ベクトルの y 成分と乗算する数値",
        "z": "Number: (オプション) ベクトルの z 成分と乗算する数値",
        "arr": "Number[]: ベクトルの成分に乗算する配列",
        "v": "p5.Vector: 元のベクトルの成分と乗算するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル",
        "v0": "p5.Vector",
        "v1": "p5.Vector"
      }
    },
    "div": {
      "description": [
        "ベクトルをスカラーで除算したり、ベクトルを <code>x</code>、<code>y</code>、<code>z</code> の各成分で除算したり、2つのベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分同士を除算したりします。スカラーでベクトルを除算する場合、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分がスカラーで除算されます。ベクトルでベクトルを除算する場合、ソースベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分が被除数、引数の <code>x</code>、<code>y</code>、<code>z</code> 成分が除数として扱われます。たとえば、2つのベクトル <code>a</code> と <code>b</code> の場合、<code>a.x / b.x</code>、<code>a.y / b.y</code>、<code>a.z / b.z</code> のようになります。第2のベクトルのいずれかの成分が0の場合、除算0エラーがログに出力されます。ただし、両方のベクトルの <code>z</code> 成分に0がある場合は、<code>x</code> と <code>y</code> 成分のみが除算されます。このメソッドの static 版は新しい <a href=\"#/p5.Vector\">p5.Vector</a> を作成し、non-static 版はベクトル自体に作用します。このメソッドに引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "n": "Number: ベクトルを除算する数値",
        "x": "Number: ベクトルの x 成分を除算する数値",
        "y": "Number: ベクトルの y 成分を除算する数値",
        "z": "Number: (オプション) ベクトルの z 成分を除算する数値",
        "arr": "Number[]: ベクトルの各成分を除算する配列",
        "v": "p5.Vector: 元のベクトルの各成分を除算するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル",
        "v0": "p5.Vector",
        "v1": "p5.Vector"
      }
    },
    "mag": {
      "description": [
        "ベクトルの長さ（大きさ）を計算し、その結果を浮動小数点数で返します。これは単純に式 <code>sqrt(xx + yy + zz)</code> です。"
      ],
      "returns": "Number: ベクトルの長さ",
      "params": {
        "vecT": "p5.Vector: 長さを返すベクトル"
      }
    },
    "magSq": {
      "description": [
        "ベクトルの長さの2乗を計算し、その結果を浮動小数点数で返します。これは単に式 <code>xx + yy + zz</code> です。ベクトルを比較する場合など、実際の長さが必要ない場合には、より高速です。"
      ],
      "returns": "Number: ベクトルの長さの2乗",
      "params": {
        "vecT": "p5.Vector: 長さの2乗を返すベクトル"
      }
    },
    "dot": {
      "description": [
        "2つのベクトルの内積を計算します。2つの独立したベクトルの内積を計算するバージョンは、静的メソッドです。より詳細なコンテキストについては、例を参照してください。"
      ],
      "returns": "Number: 内積",
      "params": {
        "x": "Number: ベクトルの x 成分",
        "y": "Number: (オプション) ベクトルの y 成分",
        "z": "Number: (オプション) ベクトルの z 成分",
        "value": "p5.Vector: ベクトルの value 成分または <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v1": "p5.Vector: 最初の <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "cross": {
      "description": [
        "2つのベクトルの外積から構成されるベクトルを計算し、返します。静的および非静的メソッドの両方が新しい <a href=\"#/p5.Vector\">p5.Vector</a> を返します。より詳細なコンテキストについては、例を参照してください。"
      ],
      "returns": "p5.Vector: 外積から構成される <a href=\"#/p5.Vector\">p5.Vector</a>",
      "params": {
        "v": "p5.Vector: 外積を取る <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v1": "p5.Vector: 最初の <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "dist": {
      "description": [
        "2点間のユークリッド距離（点をベクトルオブジェクトとして扱う）を計算します。2点間の距離を計算する場合は <a href=\"#/p5/dist\">dist()</a> を使用してください。"
      ],
      "returns": "Number: 距離",
      "params": {
        "v": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> の x, y, z 座標",
        "v1": "p5.Vector: 最初の <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "normalize": {
      "description": ["ベクトルの長さを1に正規化します。"],
      "returns": "p5.Vector: 正規化された <a href=\"#/p5.Vector\">p5.Vector</a>",
      "params": {
        "v": "p5.Vector: 正規化するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "limit": {
      "description": [
        "このベクトルの大きさを <code>max</code> パラメーターで指定された値に制限します。"
      ],
      "params": {
        "max": "Number: ベクトルの最大値",
        "v": "p5.Vector: 制限するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "setMag": {
      "description": [
        "このベクトルの大きさを、<code>len</code> パラメーターで指定した値に設定します。"
      ],
      "params": {
        "len": "Number: このベクトルの新しい長さ",
        "v": "p5.Vector: 大きさを設定するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル (オプション) "
      }
    },
    "heading": {
      "description": [
        "このベクトルの回転角度を計算します (2D ベクトルのみ)。 <a href=\"#/p5/createVector\">createVector()</a> で作成された p5.Vector は、現在 <a href=\"#/p5/angleMode\">angleMode()</a> を考慮して、ラジアンまたは度数で角度を返します。"
      ],
      "returns": "Number: 回転角度",
      "params": {
        "v": "p5.Vector: 回転角度を求めるベクトル"
      }
    },
    "setHeading": {
      "description": [
        "このベクトルを、特定の角度 (2D ベクトルのみ) に回転させます。大きさは変わりません。"
      ],
      "params": {
        "angle": "Number: 回転角度"
      }
    },
    "rotate": {
      "description": [
        "このベクトルを、指定された角度 (2D ベクトルのみ) で回転させます。大きさは変わりません。"
      ],
      "params": {
        "angle": "Number: 回転角度",
        "v": "p5.Vector",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "angleBetween": {
      "description": [
        "2つのベクトルの間の角度を計算して返します。現在の <a href=\"#/p5/angleMode\">angleMode</a> を考慮し、ラジアンまたは度数法で角度を返します。"
      ],
      "returns": "Number: 2つのベクトルの間の角度",
      "params": {
        "value": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> の x、y、z 成分。",
        "v1": "p5.Vector: ひとつ目のベクトル。",
        "v2": "p5.Vector: 2つ目のベクトル。"
      }
    },
    "lerp": {
      "description": ["線形補間によってベクトルを別のベクトルに移動します。"],
      "params": {
        "x": "Number: x 成分。",
        "y": "Number: y 成分。",
        "z": "Number: z 成分。",
        "amt": "Number: 補間の割合。0.0 (移動元ベクトル) から1.0 (移動先ベクトル) までの値。0.9は移動先のベクトルに非常に近く、0.5は中間点になります。",
        "v": "p5.Vector: 移動先の <a href=\"#/p5.Vector\">p5.Vector</a>。",
        "v1": "p5.Vector",
        "v2": "p5.Vector",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル。"
      }
    },
    "slerp": {
      "description": [
        "他のベクトルと球面線形補間を実行し、結果のベクトルを返します。これは 3D と 2D の両方で機能します。2D について、 2D ベクトルとの補完の結果は常に 2D ベクトルになります。"
      ],
      "returns": "p5.Vector:",
      "params": {
        "v": "p5.Vector: 移動先 p5.Vector",
        "amt": "Number: 補間の割合。 0.0 (移動元のベクトル) と1.0 (移動先のベクトル)までの値。 0.9は移動先のベクトルに非常に近く、0.5は中間になります。",
        "v1": "p5.Vector: 移動元のベクトル",
        "v2": "p5.Vector: 移動先のベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル。"
      }
    },
    "reflect": {
      "description": [
        "2D の線の法線または 3D の平面の法線について、ベクトルを反射します。"
      ],
      "params": {
        "surfaceNormal": "p5.Vector: 反射の対象となる <a href=\"#/p5.Vector\">p5.Vector</a>。",
        "incidentVector": "p5.Vector: 反射させるベクトル。",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル。"
      }
    },
    "array": {
      "description": [
        "このベクトルを浮動小数点数配列として表します。これは一時的な使用のためのものです。他の用途に使用する場合は、自分自身のベクトルにコピーするために <b>p5.Vector.<a href=\"#/p5.Vector/copy\">copy()</a></b> メソッドを使用して、内容をコピーする必要があります。"
      ],
      "returns": "Number[]: 3つの値をもつ配列",
      "params": {
        "v": "p5.Vector: 配列に変換するベクトル。"
      }
    },
    "equals": {
      "description": [
        "<a href=\"#/p5.Vector\">p5.Vector</a> に対する等価性チェック。"
      ],
      "returns": "Boolean: ベクトルが等しい場合に true、そうでない場合に false を返します。",
      "params": {
        "x": "Number: (オプション) ベクトルの x 成分",
        "y": "Number: (オプション) ベクトルの y 成分",
        "z": "Number: (オプション) ベクトルの z 成分",
        "value": "p5.Vector|Array: 比較するベクトル",
        "v1": "p5.Vector|Array: 比較する最初のベクトル",
        "v2": "p5.Vector|Array: 比較する2番目のベクトル"
      }
    },
    "fromAngle": {
      "description": ["指定した角度から 2D ベクトルを作成します。"],
      "returns": "p5.Vector: 新しい <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクト",
      "params": {
        "angle": "Number: 角度（単位は弧度法、<a href=\"#/p5/angleMode\">angleMode</a> に影響されません）",
        "length": "Number: (オプション) 新しいベクトルの長さ（デフォルトは1）"
      }
    },
    "fromAngles": {
      "description": ["2つの ISO 球面角から新しい 3D ベクトルを作成します。"],
      "returns": "p5.Vector: 新しい <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクト",
      "params": {
        "theta": "Number: 極角（単位は弧度法、上を0度とします）",
        "phi": "Number: 方位角（単位は弧度法、スクリーンから外側を0度とします）",
        "length": "Number: (オプション) 新しいベクトルの長さ（デフォルトは1）"
      }
    },
    "random2D": {
      "description": [
        "ランダムな角度から新しい2次元単位ベクトルを作成します。"
      ],
      "returns": "p5.Vector: 新しい <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクト"
    },
    "random3D": {
      "description": ["新しいランダムな3次元単位ベクトルを作成します。"],
      "returns": "p5.Vector: 新しい <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクト"
    }
  },
  "p5.Font": {
    "description": ["フォントのベースクラス"],
    "params": {
      "pInst": "P5: (オプション) p5 インスタンスへのポインター"
    },
    "font": {
      "description": ["内部のオープンタイプフォント実装"]
    },
    "textBounds": {
      "description": [
        "このフォントを使用して、指定されたテキスト文字列に対して、タイトな境界ボックスを返します。"
      ],
      "returns": "オブジェクト: x、y、w、h プロパティをもつ矩形オブジェクト",
      "params": {
        "line": "String: テキストの行",
        "x": "Number: x 座標",
        "y": "Number: y 座標",
        "fontSize": "Number: (オプション) 使用するフォントサイズ (デフォルトは12)",
        "options": "オブジェクト: (オプション) opentype オプション (オプション) opentype フォントには alignment と baseline オプションが含まれています。デフォルトは'LEFT'と'alphabetic'"
      }
    },
    "textToPoints": {
      "description": [
        "指定されたテキストのパスにしたがって点の配列を計算します。"
      ],
      "returns": "Array:  x、y、alpha（パスの角度）をもつ各ポイントの配列",
      "params": {
        "txt": "String: テキストの行",
        "x": "Number: x 座標",
        "y": "Number: y 座標",
        "fontSize": "Number: 使用するフォントサイズ (オプション) ",
        "options": "オブジェクト: (オプション) サンプルファクター - パスの長さとサンプル数の比率（デフォルト=.1）; 大きい値はより多くの点を生成し、より正確です simplifyThreshold - 非ゼロの値に設定する場合、共線性のあるポイントはポリゴンから削除されます。2つのエッジが共線であるかどうかを判断するときに使用する閾値角度を表します"
      }
    }
  },
  "p5.Camera": {
    "description": [
      "このクラスは、p5 の <a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5\">WebGL モード</a> で使用するためのカメラを記述します。3D シーンをレンダリングするために必要な、カメラの位置、向き、投影情報を含みます。",
      "新しい p5.Camera オブジェクトは <a href=\"#/p5/createCamera\">createCamera()</a> 関数を使用して作成でき、以下に説明するメソッドを通じて制御できます。この方法で作成されたカメラは、シーン内のデフォルト位置とデフォルト透視投影を使用し、これらのプロパティが変更されるまで変更されません。複数のカメラを作成することもできます。この場合、現在のカメラは <a href=\"#/p5/setCamera\">setCamera()</a> メソッドを使用して設定できます。",
      "注意:以下のメソッドは2つの座標系で動作します。'world'座標系は、X、Y、Z 軸に沿って原点との関係で位置を記述します。一方、カメラの'local'座標系は、左右、上下、前後の視点から位置を記述します。たとえば、<a href=\"#/p5.Camera/move\">move()</a> メソッドはカメラを自分自身の軸に沿って移動させますが、<a href=\"#/p5.Camera/setPosition\">setPosition()</a> メソッドは、ワールドスペース内のカメラの位置を設定します。",
      "カメラオブジェクトのプロパティ <code>eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ</code> は、<a href=\"#/p5/createCamera\">createCamera()</a> を使用して生成されたカメラオブジェクトからもアクセスできます。"
    ],
    "params": {
      "rendererGL": "WebGL レンダラーのインスタンスである RendererGL"
    },
    "eyeX": {
      "description": ["x 軸上のカメラ位置値"]
    },
    "eyeY": {
      "description": ["y 軸上のカメラ位置値"]
    },
    "eyeZ": {
      "description": ["z 軸上のカメラ位置値"]
    },
    "centerX": {
      "description": ["スケッチの中心を表す x 座標"]
    },
    "centerY": {
      "description": ["スケッチの中心を表す y 座標"]
    },
    "centerZ": {
      "description": ["スケッチの中心を表す z 座標"]
    },
    "upX": {
      "description": ["カメラから見た上方向の x 成分"]
    },
    "upY": {
      "description": ["カメラから見た上方向の y 成分"]
    },
    "upZ": {
      "description": ["カメラから見た上方向の z 成分"]
    },
    "perspective": {
      "description": [
        "透視投影を設定します。グローバルな <a href=\"#/p5/perspective\">perspective()</a> と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "ortho": {
      "description": [
        "直交投影を設定します。グローバルな <a href=\"#/p5/ortho\">ortho()</a> と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "frustum": {
      "description": [
        "カメラの視錐台を設定します。グローバルな <a href=\"#/p5/frustum\">frustum()</a> と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "pan": {
      "description": ["パンは、カメラビューを左右に回転させます。"],
      "params": {
        "angle": "Number: 現在の <a href=\"#/p5/angleMode\">angleMode</a> モード単位でカメラを回転する量。0より大きい値は反時計回りに回転（左）します。"
      }
    },
    "tilt": {
      "description": ["チルトは、カメラビューを上下に回転させます。"],
      "params": {
        "angle": "Number: 現在の <a href=\"#/p5/angleMode\">angleMode</a> モード単位でカメラを回転する量。0より大きい値は反時計回りに回転（左）します。"
      }
    },
    "lookAt": {
      "description": [
        "ワールド空間の位置を見るようにカメラの向きを変更します。"
      ],
      "params": {
        "x": "Number: ワールド空間内の点の x 座標",
        "y": "Number: ワールド空間内の点の y 座標",
        "z": "Number: ワールド空間内の点の z 座標"
      }
    },
    "camera": {
      "description": [
        "カメラの位置と向きを設定します。グローバルな <a href=\"#/p5/camera\">camera()</a> と同じパラメーターを受け入れます。この関数に関する詳細は、そちらで確認できます。"
      ]
    },
    "move": {
      "description": [
        "現在のカメラの向きを保ったまま、ローカル座標系でカメラを移動させます。"
      ],
      "params": {
        "x": "Number: カメラの左右軸に沿って移動する量",
        "y": "Number: カメラの上下軸に沿って移動する量",
        "z": "Number: カメラの前後軸に沿って移動する量"
      }
    },
    "setPosition": {
      "description": [
        "現在のカメラの向きを保ったまま、ワールド空間内のカメラの位置を設定します。"
      ],
      "params": {
        "x": "Number: ワールド空間内の点の x 座標",
        "y": "Number: ワールド空間内の点の y 座標",
        "z": "Number: ワールド空間内の点の z 座標"
      }
    },
    "set": {
      "description": [
        "パラメーターで指定された元のカメラのビューとプロジェクションに関する情報を、このカメラオブジェクトにコピーします。このカメラオブジェクトがアクティブであれば、それが画面に反映されます。"
      ],
      "params": {
        "cam": "p5.Camera: 元のカメラ"
      }
    },
    "slerp": {
      "description": [
        "パラメーターで指定されたカメラ cam0 と cam1 のビューが、パラメーター amt で指定した量で組み合わされ、得られたビューがこのカメラオブジェクトに適用されます。たとえば、cam0 がまっすぐ前を見ていて、cam1 がまっすぐ右を見ていて、amt が 0.5 の場合、適用されるカメラは前と右の中間を見ます。適用されるカメラがアクティブであれば、適用結果が画面に反映されます。この関数を適用するとき、関与するすべてのカメラは、まったく同じプロジェクション設定をもつ必要があります。たとえば、一方が perspective, ortho, frustum の場合、残りの2つも同じく perspective, ortho, frustum でなければなりません。ただし、すべてのカメラが ortho 設定を持っていれば、左、右、上、下の比率が互いに等しい場合には補間が可能です。たとえば、 orbitControl() で変更したときなどです。"
      ],
      "params": {
        "cam0": "p5.Camera: 移動元の p5.Camera",
        "cam1": "p5.Camera: 移動先の p5.Camera",
        "amt": "Number: slerp 中の補間に使用する量"
      }
    }
  },
  "p5.Framebuffer": {
    "description": [
      "描画し、その後テクスチャとして読み取ることができるオブジェクトです。 p5.Graphics に似ていますが、 p5.Framebuffer をテクスチャとして使用すると、一般的にははるかに高速に動作します。なぜなら、それは作成されたキャンバスと同じ WebGL コンテキスト内に存在するからです。WebGL モードでのみ動作します。"
    ],
    "params": {
      "target": "p5.Graphics|p5: p5 グローバルインスタンス または p5.Graphics",
      "settings": "Object: (オプション) 設定オブジェクト"
    },
    "pixels": {
      "description": [
        "フレームバッファ内のすべてのピクセルの値を含む <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a> です。",
        "<a href=\"#/p5/pixels\">メインキャンバスの pixels プロパティ</a> と同様に、読み取る前に <a href=\"#/p5.Framebuffer/loadPixels\">loadPixels()</a> を呼び出し、その後 <a href=\"#/p5.Framebuffer/updatePixels\">updatePixels()</a> を呼び出してデータを更新します。",
        "このプロパティ経由でピクセルを更新すると、 <a href=\"#/p5.Framebuffer/begin\">フレームバッファに直接描画する</a> よりも遅くなることに注意してください。ピクセル上でループする代わりにシェーダーを使用することを検討してください。"
      ]
    },
    "resize": {
      "description": [
        "指定した幅と高さにフレームバッファのサイズを変更します。"
      ],
      "params": {
        "width": "Number",
        "height": "Number"
      }
    },
    "pixelDensity": {
      "description": [
        "高ピクセル密度のディスプレイのピクセルスケーリングを取得または設定します。デフォルトでは、密度はフレームバッファが作成されたキャンバスのものに一致し、それはディスプレイの密度に一致します。",
        "現在の密度を取得するためにこのメソッドを引数なしで呼び出すか、数値を渡して密度を設定します。"
      ],
      "params": {
        "density": "Number: (オプション) フレームバッファの一辺当たりのピクセル数のスケーリングファクター"
      }
    },
    "autoSized": {
      "description": [
        "このフレームバッファがキャンバスのサイズに合わせて自動的にリサイズされるかどうかを取得または設定します。",
        "現在自動サイズ調整が行われているかどうかを確認するには、このメソッドを引数なしで呼び出すか、このプロパティを設定するために真偽値を渡します。"
      ],
      "params": {
        "autoSized": "Boolean: (オプション) フレームバッファがキャンバスに合わせてサイズを変更すべきかどうか"
      }
    },
    "createCamera": {
      "description": [
        "新しい <a href=\"#/p5.FramebufferCamera\">p5.FramebufferCamera</a> を作成し、このフレームバッファに描画する際に使用します。カメラは現在アクティブなカメラとして設定されます。"
      ],
      "returns": "p5.Camera: 新しいカメラ"
    },
    "remove": {
      "description": [
        "フレームバッファを削除し、そのリソースを解放します。"
      ]
    },
    "begin": {
      "description": [
        "このフレームバッファに描画を開始します。その後の描画関数はフレームバッファのテクスチャに描画され、すぐには可視化されません。描画関数を再びキャンバスに直接行うようにし、フレームバッファのテクスチャの内容を読み取るためには、<a href=\"#/p5.Framebuffer/end\">end()</a> を呼び出します。"
      ]
    },
    "end": {
      "description": [
        "<a href=\"#/p5.Framebuffer/begin\">begin()</a> を事前に呼び出した後、このメソッドは描画関数がフレームバッファのテクスチャに作用するのを止め、再びキャンバスに直接作用するようにします。これ以降、フレームバッファのテクスチャから読み取ることができます。"
      ]
    },
    "draw": {
      "description": [
        "キャンバスではなくフレームバッファに描画する関数を実行します。これは<code>framebuffer.begin()</code>を呼び出し、関数を実行し、<code>framebuffer.end()</code>を呼び出すのと同等ですが、<code>begin</code>や<code>end</code>を忘れることがないようにします。"
      ],
      "params": {
        "callback": "Function: キャンバスに描画する関数。この関数は即座に実行されますが、キャンバスではなくフレームバッファに描画されます。"
      }
    },
    "get": {
      "description": [
        "<a href=\"#/p5.Image\">p5.Image</a> の形でキャンバスからピクセルの領域を取得するか、あるいは数値の配列として単一のピクセルを取得します。",
        "任意のピクセルの [R,G,B,A] の値の配列を返すか、画像のセクションを返します。フレームバッファがアルファ値を保存しないように設定されている場合は、 [R,G,B] のみが返されます。パラメーターが指定されていない場合、すべての画像が返されます。ピクセルの値を1つ取得するには、 x と y パラメーターを使用します。追加の w と h パラメーターを指定してディスプレイウィンドウのセクションを取得します。画像を取得する際、 x と y パラメーターは、現在の<a href=\"#/p5/imageMode\">imageMode()</a>に関係なく、画像の左上角の座標を指定します。"
      ],
      "returns": "p5.Image: 矩形の <a href=\"#/p5.Image\">p5.Image</a>",
      "params": {
        "x": "Number: ピクセルの x 座標",
        "y": "Number: ピクセルの y 座標",
        "w": "Number: 返されるセクションの幅",
        "h": "Number: 返されるセクションの高さ"
      }
    },
    "color": {
      "description": [
        "フレームバッファの色情報が入ったテクスチャ。これを（またはフレームバッファ自体を）<a href=\"#/p5/texture\">texture()</a> に渡してキャンバスに描画するか、<a href=\"#/p5.Shader/setUniform\">setUniform()</a> に渡すことでそのデータを読み取ることができます。",
        "フレームバッファは WebGL によって管理されているため、y 座標は画像やビデオと比較して反転して保存されています。フレームバッファのテクスチャでテクスチャリングをするときに、垂直に反転させたい場合は <code>plane(framebuffer.width, -framebuffer.height)</code> のようにしてみてください。"
      ]
    },
    "depth": {
      "description": [
        "フレームバッファの深度情報が含まれているテクスチャ。フレームバッファが設定で <code>{ depth: false }</code> と作成された場合、このプロパティは未定義となります。これを <a href=\"#/p5/texture\">texture()</a> に渡してキャンバスに描画するか、<a href=\"#/p5.Shader/setUniform\">setUniform()</a> に渡すことでそのデータを読み取ることができます。",
        "フレームバッファは WebGL によって管理されているため、y 座標は画像やビデオと比較して反転して保存されています。フレームバッファのテクスチャでテクスチャリングをするときに、垂直に反転させたい場合は <code>plane(framebuffer.width, -framebuffer.height)</code> のようにしてみてください。"
      ]
    }
  },
  "p5.Geometry": {
    "description": ["p5 ジオメトリクラス"],
    "params": {
      "detailX": "Integer: (オプション) x 軸に沿った頂点数。",
      "detailY": "Integer: (オプション) y 軸に沿った頂点数。",
      "callback": "Function: (オプション) オブジェクトのインスタンス化時に呼び出す関数。"
    },
    "computeFaces": {
      "description": [
        "ジオメトリオブジェクトの頂点にもとづいて、面を計算します。"
      ]
    },
    "computeNormals": {
      "description": [
        "各頂点について、各面の平均としてスムーズな法線を計算します。"
      ]
    },
    "averageNormals": {
      "description": ["頂点の法線を平均化します。曲面で使用されます。"]
    },
    "averagePoleNormals": {
      "description": [
        "極の法線を平均化します。球体のプリミティブで使用されます。"
      ]
    },
    "normalize": {
      "description": [
        "すべての頂点を-100から100の範囲内に中心に配置するように修正します。"
      ]
    }
  },
  "p5.Shader": {
    "description": ["WebGL モード用の Shader クラスです。"],
    "params": {
      "renderer": "p5.RendererGL: この新しい p5.Shader に GL コンテキストを提供する p5.RendererGL のインスタンス",
      "vertSrc": "String: 頂点シェーダーのソースコード（文字列形式）",
      "fragSrc": "String: フラグメントシェーダーのソースコード（文字列形式）"
    },
    "setUniform": {
      "description": [
        "<a href=\"#/p5.Shader\">p5.Shader</a> オブジェクトの uniform を設定するために使用します。",
        "uniform は、GPU で実行されるシェーダープログラムにスケッチ（CPU 上で実行される）から値を提供する方法として使用されます。"
      ],
      "params": {
        "uniformName": "String: uniform の名前。頂点シェーダーおよびフラグメントシェーダーで使用される名前と対応する必要があります。",
        "data": "Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture: uniform に関連付けるデータ。データ型は、真偽値（true/false）、数値、数値の配列、または画像（p5.Image、p5.Graphics、p5.MediaElement、p5.Texture）のいずれかです。"
      }
    }
  },
  "p5.sound": {},
  "p5.SoundFile": {
    "description": [
      "指定されたファイルへのパスをもつ SoundFile オブジェクトです。",
      "p5.SoundFile は、ファイル情報を非同期で読み込むため、すぐに利用可能になるとは限りません。",
      "ファイルがロードされた後すぐに何か処理をしたい場合は、2番目の引数に関数名を渡してください。",
      "ファイルパスはひとつだけ必要ですが、オーディオファイルフォーマット（例:mp3、ogg、wav、m4a / aac）はすべての Web ブラウザーでサポートされているわけではありません。互換性を確保する場合は、単一のファイルパスの代わりに、ファイルパスの配列を含めることができ、ブラウザーは動作するフォーマットを選択します。"
    ],
    "params": {
      "path": "String|Array: サウンドファイルへのパス（String）。オプションで、複数のファイルフォーマットを配列で含めることもできます。また、HTML5 File API からのオブジェクト、または p5.File を受け取ることもできます。",
      "successCallback": "Function: (オプション) ファイルがロードされたときに呼び出す関数の名前",
      "errorCallback": "Function: (オプション) ファイルのロードに失敗した場合に呼び出す関数の名前。この関数は、エラーオブジェクトまたは XMLHttpRequest オブジェクトを受け取り、何が原因で失敗したかについての情報を提供します。",
      "whileLoadingCallback": "Function: (オプション) ファイルがロードされている間に呼び出す関数の名前。この関数は、ファイルのロードリクエストの進捗状況（0〜1 の間）を第1パラメーターとして受け取ります。この進捗状況には、オーディオデータのデコードに必要な追加時間は含まれません。"
    },
    "isLoaded": {
      "description": [
        "サウンドファイルが正常にロードされた場合は true を返します。"
      ],
      "returns": "Boolean:"
    },
    "play": {
      "description": ["p5.SoundFile を再生します。"],
      "params": {
        "startTime": "Number: (オプション) 再生をスケジュールする時刻（現在時刻からの秒数）",
        "rate": "Number: (オプション) 再生速度",
        "amp": "Number: (オプション) 再生のボリューム",
        "cueStart": "Number: (オプション) キューの開始時刻（秒）",
        "duration": "Number: (オプション) 再生の長さ（秒）"
      }
    },
    "playMode": {
      "description": [
        "p5.SoundFile には2つの再生モードがあります:<code>restart</code> と <code>sustain</code>。再生モードは、p5.SoundFile が再生中にトリガーされた場合の動作を決定します。sustain モードでは、新しい再生と同時に再生が続行されます。restart モードでは、play() は再生を停止して最初から再生します。untilDone で、サウンドは再生中でない場合にのみ再生されます。sustain がデフォルトのモードです。"
      ],
      "params": {
        "str": "String: 'restart'、'sustain'、'untilDone'のいずれか"
      }
    },
    "pause": {
      "description": [
        "現在再生中のファイルを一時停止します。ファイルが再生されていない場合は何も起こりません。",
        ".play() は、一時停止した位置から再開されます。p5.SoundFile がループに設定されていた場合、一時停止する前に、.play() による再生が継続され、.play() で再開された後もループが続行されます。"
      ],
      "params": {
        "startTime": "Number: (オプション) イベントをスケジュールする時刻（現在時刻からの秒数）"
      }
    },
    "loop": {
      "description": [
        "p5.SoundFile をループ再生します。再生レート、再生ボリューム、ループ開始地点、ループ終了地点をオプションで設定できます。"
      ],
      "params": {
        "startTime": "Number: (オプション) 何秒後にイベントを予約するか指定します。",
        "rate": "Number: (オプション) 再生レートを指定します。",
        "amp": "Number: (オプション) 再生ボリュームを指定します。",
        "cueLoopStart": "Number: (オプション) ループの開始地点を秒単位で指定します。",
        "duration": "Number: (オプション) ループの長さを秒単位で指定します。"
      }
    },
    "setLoop": {
      "description": [
        "p5.SoundFile のループフラグを true または false に設定します。再生中の場合、現在の再生が終了した時点でこの変更が反映されます。"
      ],
      "params": {
        "Boolean": "Boolean: ループを true または false に設定します。"
      }
    },
    "isLooping": {
      "description": [
        "p5.SoundFile が現在ループ再生中である場合は'true'、そうでない場合は'false'を返します。"
      ],
      "returns": "Boolean:"
    },
    "isPlaying": {
      "description": [
        "p5.SoundFile が再生中である場合は true、一時停止中または停止中である場合は false を返します。"
      ],
      "returns": "Boolean:"
    },
    "isPaused": {
      "description": [
        "p5.SoundFile が一時停止中である場合は true、再生中または停止中である場合は false を返します。"
      ],
      "returns": "Boolean:"
    },
    "stop": {
      "description": ["p5.SoundFile の再生を停止します。"],
      "params": {
        "startTime": "Number: (オプション) 何秒後にイベントを予約するか指定します。"
      }
    },
    "pan": {
      "description": [
        "p5.sound オブジェクトのステレオパンニングを、-1.0（左）から1.0（右）までの浮動小数点数で設定します。デフォルトは0.0（中央）です。"
      ],
      "params": {
        "panValue": "Number:  (オプション) ステレオパンニングを設定します。",
        "timeFromNow": "Number:  (オプション) このイベントが発生するまでの秒数を指定します。"
      }
    },
    "getPan": {
      "description": ["現在のステレオパン位置（-1.0から1.0）を返します。"],
      "returns": "Number: Oscillator の現在のステレオパン設定を、-1.0（左）から1.0（右）までの数値で返します。デフォルトは0.0（中央）です。"
    },
    "rate": {
      "description": [
        "サウンドファイルの再生速度を設定します。速度とピッチが変化します。0未満の値はオーディオバッファを逆方向に再生します。"
      ],
      "params": {
        "playbackRate": "Number:  (オプション) 再生速度を設定します。1.0は通常の速度、0.5は半分の速度、2.0は2倍の速度です。0未満の値は逆再生します。"
      }
    },
    "setVolume": {
      "description": [
        "サウンドファイルの出力ボリューム（振幅）を0.0（無音）から1.0（最大ボリューム）の間で乗算します。1.0はデジタルサウンドの最大振幅です。1.0より大きい値で乗算するとデジタル歪みが発生する可能性があります。フェードイン/アウトする場合は、<code>rampTime</code> パラメーターを指定してください。より複雑なフェードについては、Envelope クラスを参照してください。",
        "また、オーディオシグナルで振幅を調整するために、オシレーターなどのシグナルソースを渡すこともできます。"
      ],
      "params": {
        "volume": "Number|Object: 振幅の値（0.0から1.0）またはモジュレーションシグナル/オシレーター",
        "rampTime": "Number:  (オプション) t 秒でフェードします。",
        "timeFromNow": "Number:  (オプション) t 秒後にこのイベントをスケジュールします。"
      }
    },
    "duration": {
      "description": ["サウンドファイルの再生時間を秒単位で返します。"],
      "returns": "Number: サウンドファイルの再生時間（秒単位）を返します。"
    },
    "currentTime": {
      "description": [
        "p5.SoundFile の再生ヘッドの現在位置を秒単位で返します。時間は通常のバッファの方向に相対的であり、<code>reverseBuffer</code> が呼び出された場合、currentTime は逆方向にカウントされます。"
      ],
      "returns": "Number: サウンドファイルの currentTime（秒単位）を返します。"
    },
    "jump": {
      "description": [
        "再生中のサウンドファイルの再生位置と再生時間を秒数で指定して移動します。何も指定されていない場合は、ファイルの再生位置を先頭に戻し、最後まで再生します。再生中でないサウンドファイルの位置を設定するには、<code>play</code> または <code>loop</code> メソッドを使用してください。"
      ],
      "params": {
        "cueTime": "Number: サウンドファイルのキュータイム（秒単位）",
        "duration": "Number: 再生時間（秒単位）"
      }
    },
    "channels": {
      "description": [
        "サウンドファイルのチャンネル数を返します。たとえば、モノラルなら1、ステレオなら2です。"
      ],
      "returns": "Number: [channels]"
    },
    "sampleRate": {
      "description": ["サウンドファイルのサンプルレートを返します。"],
      "returns": "Number: [sampleRate]"
    },
    "frames": {
      "description": [
        "サウンドファイルのサンプル数を返します。サンプル数は、サンプルレートと再生時間の積です。"
      ],
      "returns": "Number: [sampleCount]"
    },
    "getPeaks": {
      "description": [
        "静的な波形を描画するために使用できる、p5.SoundFile の振幅ピークの配列を返します。p5.SoundFile のオーディオバッファをスキャンして最大振幅を探します。'length'というひとつのパラメーターを受け取り、配列のサイズを決定します。大きな配列はより精密な波形可視化を提供します。",
        "Wavesurfer.js に着想を得ています。"
      ],
      "returns": "Float32Array: peaks の配列",
      "params": {
        "length": "Number: (オプション) 配列のサイズを指定します。より大きなサイズは、より正確な波形可視化を提供します。デフォルトはブラウザーウィンドウの幅の5倍です。"
      }
    },
    "reverseBuffer": {
      "description": [
        "p5.SoundFile のバッファソースを逆再生します。再生は別途処理する必要があります（例を参照）。"
      ]
    },
    "onended": {
      "description": [
        "サウンドファイルが再生を終了したときに実行されるイベントをスケジュールします。サウンドファイルが1回だけ再生される場合、終了時に呼び出されます。ループ再生されている場合は、stop が呼び出されたときに呼び出されます。"
      ],
      "params": {
        "callback": "Function: サウンドファイルが終了したときに実行される関数"
      }
    },
    "connect": {
      "description": [
        "p5sound オブジェクトの出力を他の p5.sound オブジェクトの入力に接続します。たとえば、p5.SoundFile を FFT やエフェクトに接続できます。パラメーターが指定されていない場合、メイン出力に接続されます。ほとんどの p5sound オブジェクトは、作成時にマスター出力に接続されます。"
      ],
      "params": {
        "object": "Object: (オプション) 入力を受け入れるオーディオオブジェクト"
      }
    },
    "disconnect": {
      "description": ["この p5sound オブジェクトの出力を切断します。"]
    },
    "setPath": {
      "description": [
        "この SoundFile のソースを新しいパス（URL）にリセットします。"
      ],
      "params": {
        "path": "String: オーディオファイルのパス",
        "callback": "Function: コールバック"
      }
    },
    "setBuffer": {
      "description": [
        "現在のオーディオバッファを新しいバッファに置き換えます。"
      ],
      "params": {
        "buf": "Array: Float32Array の配列。2つの Float32Array がある場合、ステレオソースが作成されます。ひとつだけある場合はモノラルソースが作成されます。"
      }
    },
    "addCue": {
      "description": [
        "メディアエレメント（オーディオ/ビデオ）が再生キューポイントに達するたびにトリガーするイベントをスケジュールします。",
        "コールバック関数、コールバックがトリガーされる時間（秒単位）、およびコールバックのパラメーターのオプションがあります。",
        "時間は、最初のパラメーターとしてコールバック関数に渡され、パラメーターは2番目のパラメーターとして渡されます。"
      ],
      "returns": "Number: cue の ID。removeCue（id）に便利です。",
      "params": {
        "time": "Number: メディアエレメントの再生に相対的な時間（秒単位）。たとえば、再生が2秒に到達するたびにイベントをトリガーするには、数値2を渡します。これは、コールバック関数に最初のパラメーターとして渡されます。",
        "callback": "Function: 指定された時間に呼び出される関数の名前。コールバックは、time と（必要に応じて）param を2つのパラメーターとして受け取ります。",
        "value": "Object: (オプション) コールバック関数に渡される2番目のパラメーターとして使用されるオブジェクト。"
      }
    },
    "removeCue": {
      "description": [
        "ID にもとづいてコールバックを削除します。ID は addCue メソッドによって返されます。"
      ],
      "params": {
        "id": "Number: cue の ID。addCue で返された値です。"
      }
    },
    "clearCues": {
      "description": [
        "最初に addCue メソッドを使用してスケジュールされたすべてのコールバックを削除します。"
      ]
    },
    "save": {
      "description": [
        "p5.SoundFile を.wav ファイルとして保存します。ブラウザーは、ユーザーにファイルをダウンロードするように促します。ファイルをサーバーにアップロードするには、<a href=\"/reference/#/p5.SoundFile/getBlob\">getBlob</a> を参照してください。"
      ],
      "params": {
        "fileName": "String: (オプション) 生成される.wav ファイルの名前"
      }
    },
    "getBlob": {
      "description": [
        "サーバーに送信するために、p5.SoundFile を Blob として取得します。Blob は、ファイルのようなデータオブジェクトで、<a href=\"/reference/#/p5/httpDo\">http</a> リクエストでサーバーにアップロードできます。このメソッドを使用して、次のような特定のオプションを指定して POST リクエストを送信します:<code>multipart/form-data</code> でリクエストをエンコードし、<code>FormData</code> を使用して blob をフォーム値のひとつとして添付します。"
      ],
      "returns": "Blob: ファイルのようなデータオブジェクト"
    }
  },
  "p5.Amplitude": {
    "description": [
      "Amplitude はボリュームを0.0〜1.0 の範囲で測定します。デフォルトではすべての p5sound を監視しますが、setInput() を使用して特定の音源を監視することもできます。オプションのスムージング値を受け入れ、デフォルト値は0です。"
    ],
    "params": {
      "smoothing": "Number: (オプション) ボリューム読み取りのスムージング値。0をデフォルトとします。範囲は0.0から.999までです。"
    },
    "setInput": {
      "description": [
        "デフォルトで p5sound インスタンス（メイン出力）に接続します。オプションで、特定のソース（たとえば、サウンドファイル）を渡すこともできます。"
      ],
      "params": {
        "snd": "SoundObject|undefined: (オプション) 音源を設定します。デフォルトはメイン出力です。",
        "smoothing": "Number|undefined: (オプション) ボリューム読み取りのスムージングを0.0から1.0の範囲で設定します。"
      }
    },
    "getLevel": {
      "description": [
        "呼び出された瞬間の単一の Amplitude 読み取り値を返します。連続した読み取りを行う場合は、draw ループで実行します。"
      ],
      "returns": "Number: 0.0から1.0の範囲内の Amplitude",
      "params": {
        "channel": "Number: (オプション) チャンネル0（左）または1（右）だけを返すようにオプションで指定できます。"
      }
    },
    "toggleNormalize": {
      "description": [
        "Amplitude.process() の結果を正規化するかどうかを切り替えます。正規化を行う場合、Amplitude は処理した中で最も大きな音の読み取り値と1.0の最大振幅の差を見つけます。Amplitude は、この差をすべての値に加算して、常に0.0〜1.0 の範囲で信頼できる結果を生成します。ただし、より大きなボリュームの瞬間が発生すると、Normalize がすべての値に追加する量が変化します。真偽値パラメーター (true または false) を受け取ります。デフォルトでは、正規化はオフになっています。"
      ],
      "params": {
        "boolean": "Boolean: (オプション) 正規化を true(1)または false(0)に設定します。"
      }
    },
    "smooth": {
      "description": [
        "直近の解析フレームと平均化することで、Amplitude 解析をスムーズにします。デフォルトではオフになっています。"
      ],
      "params": {
        "set": "Number: スムージングを0.0 <= 1.0の範囲で設定します。"
      }
    }
  },
  "p5.FFT": {
    "description": [
      "FFT (高速フーリエ変換)は、波形内の個々の <a href=\"https://en.wikipedia.org/wiki/Audio_frequency\">オーディオ周波数</a> を分離する解析アルゴリズムです。",
      "p5.FFT オブジェクトをインスタンス化すると、2種類の解析にもとづく配列を返すことができます。• <code>FFT.waveform()</code> は、時間領域に沿った振幅値を計算します。配列のインデックスは時間上の短い瞬間に対応しています。各値は、そのサンプルの時刻における波形の振幅を表します。 • <code>FFT.analyze() </code> は、周波数領域に沿った振幅値を計算します。配列のインデックスは、人間が聴くことができる最低から最高の周波数（つまり、ピッチ）に対応しています。各値は、その周波数スペクトルのスライスにおける振幅を表します。<code>getEnergy()</code> とともに使用して、特定の周波数、または周波数範囲内の振幅を測定します。",
      "FFT は、サンプルバッファと呼ばれる非常に短い音声スナップショットを解析します。配列はデフォルトで1024ビンの振幅測定値を返します。ビンの配列の長さを変更できますが、FFT アルゴリズムが正常に動作するためには、16から1024の間で2の累乗である必要があります。FFT バッファの実際のサイズは、ビンの数の2倍であり、標準的なサンプリングレートを考慮すると、バッファの長さは2048 / 44100秒です。"
    ],
    "params": {
      "smoothing": "Number: (オプション) 周波数スペクトルの結果をスムージングします。 0.0 < smoothing < 1.0。デフォルトは0.8です。",
      "bins": "Number: (オプション) 結果の配列の長さ。16から1024の間で2の累乗である必要があります。デフォルトは1024です。"
    },
    "setInput": {
      "description": [
        "FFT 解析の入力ソースを設定します。ソースが提供されない場合、FFT はスケッチ内のすべての音声を解析します。"
      ],
      "params": {
        "source": "Object: (オプション) p5.sound オブジェクト（または Web オーディオ API ソースノード）"
      }
    },
    "waveform": {
      "description": [
        "単一のバッファ内の振幅読み取りのスナップショットを表す、-1.0から+1.0 の振幅値の配列を返します。長さは bins に等しく（デフォルトは1024）。音響信号の波形を描画するために使用することができます。"
      ],
      "returns": "Array: 時間にわたる振幅値の配列（-1から1）。配列の長さは bins です。",
      "params": {
        "bins": "Number: (オプション) 16から1024の間で2の累乗である必要があります。デフォルトは1024です。",
        "precision": "String: (オプション) 値が提供されている場合、通常の配列よりも正確な Float32 の配列で結果を返します。"
      }
    },
    "analyze": {
      "description": [
        "周波数スペクトル全体にわたる、0から255までの振幅値の配列を返します。長さは FFT bins（デフォルトでは1024）に等しく、配列のインデックスは、人間が聴くことができる最低から最高の周波数（つまり、ピッチ）に対応しています。各値は、その周波数スペクトルのスライスにおける振幅を表します。 <code>getEnergy()</code> を使用する前に呼び出す必要があります。"
      ],
      "returns": "Array: 周波数スペクトル全体にわたるエネルギー（振幅/ボリューム）値の配列。最低エネルギー（無音）は0、最大エネルギーは255です。",
      "params": {
        "bins": "Number: (オプション) 16から1024の間で2の累乗である必要があります。デフォルトは1024です。",
        "scale": "Number: (オプション) \"dB\"の場合、-140から0（最大）のデシベル浮動小数点測定値が返されます。それ以外の場合は、0から255までの整数が返されます。"
      }
    },
    "getEnergy": {
      "description": [
        "特定の <a href=\"https://en.wikipedia.org/wiki/Audio_frequency\" target=\"_blank\">周波数</a> のエネルギー（ボリューム）または2つの周波数の間の平均エネルギー量を返します。周波数（Hz）に対応する数値または周波数範囲を示す\"文字列\"を受け入れます（\"bass\"、\"lowMid\"、\"mid\"、\"highMid\"、\"treble\"）。値は0（その周波数でのエネルギー/ボリュームなし）から255（最大エネルギー）の範囲です。 <em>注意:getEnergy() を使用する前に analyze() を呼び出す必要があります。analyze() は、FFT に周波数データを解析するように指示し、getEnergy() はその結果を使用して特定の周波数または周波数範囲の値を決定します。</em>"
      ],
      "returns": "Number: エネルギー。0から255までの値。",
      "params": {
        "frequency1": "Number|String: この周波数でのエネルギーを表す値が返されます。また、\"bass\"、\"lowMid\"、\"mid\"、\"highMid\"、\"treble\"の文字列を指定すると、事前に定義された周波数範囲が返されます。",
        "frequency2": "Number: (オプション) 2番目の周波数が指定された場合、2つの周波数の間に存在するエネルギーの平均量が返されます。"
      }
    },
    "getCentroid": {
      "description": [
        "入力シグナルの <a href=\"http://en.wikipedia.org/wiki/Spectral_centroid\" target=\"_blank\"> スペクトル重心</a> を返します。 <em>注意:getCentroid() の前に analyze() を呼び出す必要があります。analyze() は FFT に周波数データの分析を行うように指示し、getCentroid() はその結果を使用してスペクトル重心を決定します。</em>"
      ],
      "returns": "Number: スペクトル重心の周波数（Hz 単位）"
    },
    "smooth": {
      "description": [
        "前回の解析フレームと平均化して FFT 解析をスムージングします。"
      ],
      "params": {
        "smoothing": "Number: 0.0 < smoothing < 1.0.  デフォルトは0.8"
      }
    },
    "linAverages": {
      "description": [
        "与えられた同数の周波数バンドに分割された平均振幅値の配列を返します。N のデフォルト値は16です。 <em>注意:linAverages() の前に analyze() を呼び出す必要があります。analyze() は FFT に周波数データの分析を行うように指示し、linAverages() はその結果を使用して周波数データをグループ化して平均値を算出します。</em>"
      ],
      "returns": "Array: linearAverages 各グループの平均振幅値の配列",
      "params": {
        "N": "Number: 返される周波数グループの数"
      }
    },
    "logAverages": {
      "description": [
        "指定された <a href=\"https://en.wikipedia.org/wiki/Octave_band\" target=\"_blank\"> オクターブ帯域</a> セットのスペクトルの平均振幅値の配列を返します。 <em>注意:logAverages() の前に analyze() を呼び出す必要があります。analyze() は FFT に周波数データの分析を行うように指示し、logAverages() はその結果を使用して周波数データをグループ化して平均値を算出します。</em>"
      ],
      "returns": "Array: logAverages 各グループの平均振幅値の配列",
      "params": {
        "octaveBands": "Array: グループ化するオクターブバンドのオブジェクトの配列"
      }
    },
    "getOctaveBands": {
      "description": [
        "1/N オクターブバンドを計算して返します。N のデフォルト値は3で、最小中心周波数は15.625Hz です。(1 / 3オクターブバンド ~= 31周波数バンド) fCtr0 をより高いオクターブの中心値に設定すると、低いバンドを無視して、より少ない周波数グループを生成します。"
      ],
      "returns": "Array: octaveBands オクターブバンドオブジェクトの配列",
      "params": {
        "N": "Number: 生成されたオクターブバンドのタイプを 1/N で指定します。",
        "fCtr0": "Number: 最低バンドの中心周波数を指定します。"
      }
    }
  },
  "p5.Oscillator": {
    "description": [
      "p5.Oscillator は、-1.0から1.0の間を振動するシグナルを生成します。デフォルトでは、振動は正弦波の形（ 'sine' ）をとります。追加のタイプには、 'triangle' 、'sawtooth'および'square'があります。周波数は、秒間440回の振動（440Hz、 'A'音のピッチと同じ）がデフォルトです。",
      "setType() で振動のタイプを設定するか、特定のオシレーターをインスタンス化することで設定できます:<a href=\"/reference/#/p5.SinOsc\">p5.SinOsc</a>、<a href=\"/reference/#/p5.TriOsc\">p5.TriOsc</a>、<a href=\"/reference/#/p5.SqrOsc\">p5.SqrOsc</a>、または <a href=\"/reference/#/p5.SawOsc\">p5.SawOsc</a>。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数。デフォルトは440Hz",
      "type": "String: (オプション) オシレーターの種類。オプション: 'sine'（デフォルト）、 'triangle'、 'sawtooth'、 'square'"
    },
    "start": {
      "description": [
        "オシレーターを開始します。",
        "ユーザージェスチャーでオシレーターを開始すると、Chrome や多くのモバイルデバイスを含む厳格な自動再生ポリシーをもつブラウザーでオーディオが有効になります。参照:<code>userStartAudio()</code>。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの開始時間（秒単位）",
        "frequency": "Number: (オプション) 周波数（Hz）"
      }
    },
    "stop": {
      "description": [
        "オシレーターを停止します。オシレーターが停止するまでの時間（秒単位）を決定するためのオプションパラメーターを受け付けます。"
      ],
      "params": {
        "secondsFromNow": "Number: 現在からの秒数"
      }
    },
    "amp": {
      "description": [
        "振幅を0から1.0の間で設定します。また、オーディオ信号で振幅を変調するようなオシレーターなどのオブジェクトを渡すこともできます。"
      ],
      "returns": "AudioParam: gain。値が指定されていない場合、このオシレーターの gain/amplitude/volume を制御する Web オーディオ API の AudioParam を返します。",
      "params": {
        "vol": "Number | Object: 0から1.0の間またはモジュレーション信号/オシレーター",
        "rampTime": "Number: (オプション) rampTime に続くフェードを作成します",
        "timeFromNow": "Number: (オプション) このイベントが発生する時間を現在から秒単位でスケジュールします"
      }
    },
    "getAmp": {
      "description": ["出力ゲインの値を返します。"],
      "returns": "Number: 0.0から1.0までの振幅値。"
    },
    "freq": {
      "description": [
        "オシレーターの周波数を設定します。また、オーディオ信号で周波数を変調するようなオシレーターなどのオブジェクトを渡すこともできます。"
      ],
      "returns": "AudioParam:周波数。値が指定されていない場合、このオシレーターの周波数を制御する Web オーディオ API の AudioParam を返します。",
      "params": {
        "Frequency": "Number | Object: Hz での周波数またはモジュレーション信号/オシレーター",
        "rampTime": "Number: (オプション) ramp time（秒単位）",
        "timeFromNow": "Number: (オプション) x 秒後にこのイベントが発生するようスケジュールします"
      }
    },
    "getFreq": {
      "description": ["オシレーターの周波数の値を返します。"],
      "returns": "Number: Hz でのオシレーターの周波数。"
    },
    "setType": {
      "description": [
        "'sine'、 'triangle'、 'sawtooth'、'square'にタイプを設定します。"
      ],
      "params": {
        "type": "String: 'sine'、 'triangle'、 'sawtooth'、 'square'"
      }
    },
    "getType": {
      "description": [
        "現在のオシレーターのタイプを返します。例: 'sine'、 'triangle'、 'sawtooth'、 'square'"
      ],
      "returns": "String: オシレーターのタイプ。例: 'sine'、 'triangle'、 'sawtooth'、 'square'"
    },
    "connect": {
      "description": ["p5.sound / Web Audio オブジェクトに接続します。"],
      "params": {
        "unit": "Object: p5.sound または Web Audio オブジェクト"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    },
    "pan": {
      "description": ["左（-1）から右（1）の間でパンを設定します。"],
      "params": {
        "panning": "Number: -1から1までの数値",
        "timeFromNow": "Number: 現在から x 秒後にこのイベントが発生するようスケジュールします"
      }
    },
    "getPan": {
      "description": [
        "現在のパン位置の値を返します。左（-1）から右（1）の間です。"
      ],
      "returns": "Number: オシレーターのパン位置。左（-1）から右（1）の間です。"
    },
    "phase": {
      "description": [
        "オシレーターの位相を0.0から1.0の間に設定します。この実装では、位相はオシレーターの現在の周波数にもとづく遅延時間です。"
      ],
      "params": {
        "phase": "Number: 0.0から1.0までの浮動小数点数"
      }
    },
    "add": {
      "description": [
        "p5.Oscillator の出力振幅に値を加え、オシレーターを返します。このメソッドを再度呼び出すと、最初の add() を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator: オシレーター。スケールされた出力をもつこのオシレーターを返します。",
      "params": {
        "number": "Number: 追加する定数"
      }
    },
    "mult": {
      "description": [
        "p5.Oscillator の出力振幅を固定値で乗算します（つまり、上げます！）。このメソッドを再度呼び出すと、最初の mult() を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator: オシレーター。乗算された出力をもつこのオシレーターを返します。",
      "params": {
        "number": "Number: 乗算する定数"
      }
    },
    "scale": {
      "description": [
        "このオシレーターの振幅値を指定された範囲にスケーリングし、オシレーターを返します。このメソッドを再度呼び出すと、最初の scale() を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator:オシレーター。スケールされた出力をもつこのオシレーターを返します。",
      "params": {
        "inMin": "Number: 入力範囲の最小値",
        "inMax": "Number: 入力範囲の最大値",
        "outMin": "Number: 出力範囲の最小値",
        "outMax": "Number: 出力範囲の最大値"
      }
    }
  },
  "p5.SinOsc": {
    "description": [
      "コンストラクター: <code>new p5.SinOsc()</code>。これは正弦波オシレーターを作成します。これは <code> new p5.Oscillator('sine') </code> と同等であり、p5.Oscillator を作成し、そのメソッド <code>setType('sine')</code> を呼び出すこともできます。詳細は p5.Oscillator を参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.TriOsc": {
    "description": [
      "コンストラクター: <code>new p5.TriOsc()</code>。これは三角波オシレーターを作成し、<code>new p5.Oscillator('triangle')</code> または p5.Oscillator を作成してそのメソッド <code>setType('triangle')</code> を呼び出すことと同等です。メソッドについては p5.Oscillator を参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.SawOsc": {
    "description": [
      "コンストラクター: <code>new p5.SawOsc()</code>。これは SawTooth 波オシレータを作成するものであり、<code>new p5.Oscillator('sawtooth')</code> と同等であり、また、p5.Oscillator を作成してそのメソッド <code>setType('sawtooth')</code> を呼び出すこともできます。メソッドについては、p5.Oscillator を参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.SqrOsc": {
    "description": [
      "コンストラクター: <code>new p5.SqrOsc()</code>。これは Square 波オシレータを作成するものであり、<code>new p5.Oscillator('square')</code> と同等であり、また、p5.Oscillator を作成してそのメソッド <code>setType('square')</code> を呼び出すこともできます。メソッドについては、p5.Oscillator を参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.Envelope": {
    "description": [
      "エンベロープは、時間にわたる事前定義された振幅分布です。通常、エンベロープは、オブジェクトの出力ボリュームを制御するために使用されます。Attack、Decay、Sustain、Release（<a href=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">ADSR</a>）と呼ばれるフェードのシリーズとして言及されます。エンベロープは、他の Web Audio パラメーターを制御することもできます。たとえば、p5.Envelope は以下のようにして Oscillator の周波数を制御できます。<code>osc.freq(env)</code>。",
      "Attack/Release のレベルを変更するには、<code><a href=\"#/p5.Envelope/setRange\">setRange</a></code> を使用します。attackTime、decayTime、sustainPercent、および releaseTime を変更するには、<code><a href=\"#/p5.Envelope/setADSR\">setADSR</a></code> を使用します。",
      "エンベロープ全体を再生するには <code><a href=\"#/p5.Envelope/play\">play</a></code> メソッドを使用し、pingable トリガー用に <code><a href=\"#/p5.Envelope/ramp\">ramp</a></code> メソッドを使用します。また、<code><a href=\"#/p5.Envelope/triggerAttack\">triggerAttack</a></code>/<code><a href=\"#/p5.Envelope/triggerRelease\">triggerRelease</a></code> を使用して noteOn/noteOff をトリガーできます。"
    ],
    "attackTime": {
      "description": ["エンベロープが attackLevel に到達するまでの時間です。"]
    },
    "attackLevel": {
      "description": ["attack が完了した後のレベルです。"]
    },
    "decayTime": {
      "description": ["エンベロープが decayLevel に到達するまでの時間です。"]
    },
    "decayLevel": {
      "description": [
        "decay 後のレベルです。エンベロープはここで維持され、リリースされるまで持続します。"
      ]
    },
    "releaseTime": {
      "description": ["リリース部分の継続時間です。"]
    },
    "releaseLevel": {
      "description": ["リリースの終わりにあるレベルです。"]
    },
    "set": {
      "description": ["一連の時間/値ペアでエンベロープをリセットします。"],
      "params": {
        "attackTime": "Number: 攻撃レベルに到達するまでの時間（秒単位）",
        "attackLevel": "Number: 0.0から1.0の範囲内の通常の振幅",
        "decayTime": "Number: 時間",
        "decayLevel": "Number: 振幅（標準的な ADSR エンベロープの場合、decayLevel = sustainLevel）",
        "releaseTime": "Number: リリース時間（秒単位）",
        "releaseLevel": "Number: 振幅"
      }
    },
    "setADSR": {
      "description": [
        "従来の <a href=\"https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg\">ADSR エンベロープ</a> のように値を設定します。"
      ],
      "params": {
        "attackTime": "Number: 攻撃レベルに到達するまでの時間（秒単位）",
        "decayTime": "Number: (オプション) ディケイ/サステインレベルに到達するまでの時間（秒単位）",
        "susRatio": "Number: (オプション) 0から1のスケールでの attackLevel と releaseLevel の比率で、1.0=attackLevel、0.0=releaseLevel です。susRatio は decayLevel とエンベロープの sustain 部分が維持されるレベルを決定します。たとえば、attackLevel が0.4、releaseLevel が0で、susAmt が0.5の場合、decayLevel は0.2になります。<code>setRange</code> を使用して attackLevel を1.0に増やすと、decayLevel も比例して増加して0.5になります。",
        "releaseTime": "Number: (オプション) 今から何秒後にリリースするか（デフォルトは0）"
      }
    },
    "setRange": {
      "description": [
        "エンベロープの最大（attackLevel）と最小（releaseLevel）を設定します。"
      ],
      "params": {
        "aLevel": "Number: 攻撃レベル（デフォルトは1）",
        "rLevel": "Number: リリースレベル（デフォルトは0）"
      }
    },
    "setInput": {
      "description": [
        "このエンベロープによって制御されるパラメーターを割り当てます。p5.Sound オブジェクトが指定された場合、p5.Envelope はその出力ゲインを制御します。複数の入力が指定された場合、env はそれらすべてを制御します。"
      ],
      "params": {
        "inputs": "Object: (オプション) p5.sound オブジェクトまたは Web Audio Param。"
      }
    },
    "setExp": {
      "description": [
        "エンベロープのランプが線形（デフォルト）または指数関数であるかを設定します。振幅と周波数は対数的に認識されるため、指数関数のランプは有用です。"
      ],
      "params": {
        "isExp": "Boolean: true は指数関数、false は線形です"
      }
    },
    "play": {
      "description": [
        "Play は、指定された入力に作用し始めるようにエンベロープに指示します。入力が p5.sound オブジェクト（つまり、AudioIn、Oscillator、SoundFile など）である場合、Envelope はその出力ボリュームを制御します。エンベロープはまた、任意の <a href=\"http://docs.webplatform.org/wiki/apis/webaudio/AudioParam\">Web Audio Audio Param</a> を制御するために使用できます。"
      ],
      "params": {
        "unit": "Object: p5.sound オブジェクトまたは Web Audio Param",
        "startTime": "Number: (オプション) 再生する時間（秒単位）",
        "sustainTime": "Number: (オプション) エンベロープを解除する前に保持する時間"
      }
    },
    "triggerAttack": {
      "description": [
        "Attack と Decay の部分をトリガーします。ピアノのキーを押し続けるのと似ていますが、解放するまでサステインレベルを保持します。入力は、p5.sound オブジェクトまたは <a href=\"http://docs.webplatform.org/wiki/apis/webaudio/AudioParam\">Web Audio Param</a> のいずれかです。"
      ],
      "params": {
        "unit": "Object: p5.sound オブジェクトまたは Web Audio Param",
        "secondsFromNow": "Number: 今から何秒後にトリガーするか（秒単位）"
      }
    },
    "triggerRelease": {
      "description": [
        "エンベロープのリリースをトリガーします。これは、ピアノのキーを解放して、リリースレベルとリリース時間にしたがって音がフェードアウトするのと似ています。"
      ],
      "params": {
        "unit": "Object: p5.sound オブジェクトまたは Web Audio Param",
        "secondsFromNow": "Number: リリースをトリガーする時間"
      }
    },
    "ramp": {
      "description": [
        "最初の2つの値を使用して指数関数的に値を増加または減少させる。<code><a href=\"#/p5.Envelope/setADSR\">setADSR(attackTime, decayTime)</a></code> から時間定数を取得します。現在の値よりも高い場合は attackTime を、低い場合は decayTime を使用します。簡単な指数関数的なランプに対して <a href=\"https://en.wikipedia.org/wiki/RC_time_constant\">RC 時間定数</a> が使用されます。"
      ],
      "params": {
        "unit": "Object: p5.sound オブジェクトまたは Web Audio Param オブジェクト",
        "secondsFromNow": "Number: ランプを開始する時間（現在時刻からの経過秒数）",
        "v": "Number: 目標値",
        "v2": "Number: (オプション) 2番目の目標値"
      }
    },
    "add": {
      "description": [
        "p5.Oscillator の出力振幅に値を追加し、Oscillator を返します。このメソッドを再度呼び出すと、最初の add() が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力をもつ Envelope を返します。",
      "params": {
        "number": "Number: 追加する定数"
      }
    },
    "mult": {
      "description": [
        "p5.Envelope の出力振幅を固定値で乗算します。このメソッドを再度呼び出すと、最初の mult() が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力をもつ Envelope を返します。",
      "params": {
        "number": "Number: 乗算する定数"
      }
    },
    "scale": {
      "description": [
        "このエンベロープの振幅値を指定された範囲にスケールし、エンベロープを返します。このメソッドを再度呼び出すと、最初の scale() が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力をもつ Envelope を返します。",
      "params": {
        "inMin": "Number: 入力範囲の最小値",
        "inMax": "Number: 入力範囲の最大値",
        "outMin": "Number: 出力範囲の最小値",
        "outMax": "Number: 出力範囲の最大値"
      }
    }
  },
  "p5.Noise": {
    "description": ["Noise はランダムな値を生成するタイプのオシレーターです。"],
    "params": {
      "type": "String: ノイズのタイプを指定します。'white' (デフォルト値), 'brown' もしくは 'pink' が指定できます。"
    },
    "setType": {
      "description": [
        "ノイズのタイプを 'white', 'pink', 'brown'のいずれかに設定します。デフォルトは'white' です。"
      ],
      "params": {
        "type": "String: (オプション) 'white', 'pink', 'brown'のいずれか"
      }
    }
  },
  "p5.Pulse": {
    "description": [
      "Pulse オブジェクトを作成します。Pulse オブジェクトは、パルス幅変調を実装するオシレーターです。このオブジェクトは、2つのオシレーターを使用して作成されます。周波数のパラメーターを受け取り、パルス間の幅を設定できます。すべてのメソッドのリストについては <a href=\"http://p5js.org/reference/#/p5.Oscillator\"> <code>p5.Oscillator</code> を参照してください。</a>"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数（Hz）(省略可能)",
      "w": "Number: (オプション) パルス間の幅 (0から1.0まで、デフォルトは0)"
    },
    "width": {
      "description": ["Pulse オブジェクトの幅を設定します。"],
      "params": {
        "width": "Number: (オプション) パルス間の幅 (0から1.0まで、デフォルトは0)"
      }
    }
  },
  "p5.AudioIn": {
    "description": [
      "p5.AudioIn を使うと、コンピューターのマイクなどの音声入力を取得できます。",
      "start() メソッドと stop() メソッドを使って、マイクのオン／オフを切り替えることができます。マイクがオンになっていると、getLevel メソッドや FFT オブジェクトを接続することで、ボリュームを測定できます。",
      "AudioIn を聴くには、.connect() メソッドを使って接続する必要があります。フィードバックを防止するため、AudioIn はデフォルトで p5.sound の出力に接続されません。",
      "<em>注: これには <a href=\"http://caniuse.com/stream\">getUserMedia/ Stream</a> API が使用されており、一部のブラウザーでサポートされていません。 Chrome ブラウザーでのアクセスは、localhost と https に限定されていますが、http 経由でのアクセスも制限される場合があります。</em>"
    ],
    "params": {
      "errorCallback": "Function: (オプション) AudioIn にアクセスできなかった場合に呼び出す関数。たとえば、Safari や iOS デバイスでは、現在のところマイクのアクセスが許可されていません。"
    },
    "input": {},
    "output": {},
    "stream": {},
    "mediaStream": {},
    "currentSource": {},
    "enabled": {
      "description": [
        "クライアントがブラウザーにマイク/オーディオ入力ソースへのアクセスを許可する必要があります。デフォルト値は false です。クライアントがアクセスを許可すると true になります。"
      ]
    },
    "amplitude": {
      "description": [
        "入力振幅。デフォルトではマスター出力には接続されていますが、接続されていません。"
      ]
    },
    "start": {
      "description": [
        "オーディオ入力処理を開始します。これにより、getLevel() などの他 AudioIn メソッドを使用できるようになります。デフォルトでは、AudioIn は p5.sound の出力に接続されていないため、connect() メソッドを使用しない限り、何も聞こえません。<br/>",
        "一部のブラウザーは、ユーザーのマイクへのアクセスを制限しています。たとえば、Chrome ブラウザでは localhost と https からのアクセスのみ許可されています。このため、mic アクセスが提供されない場合に呼び出される errorCallback（関数）を含めた方がよい場合があります。"
      ],
      "params": {
        "successCallback": "Function: (オプション) 成功時に呼び出す関数の名前",
        "errorCallback": "Function: (オプション) エラーが発生した場合に呼び出す関数の名前。たとえば、一部のブラウザーは getUserMedia をサポートしていないため、この関数が呼び出される場合があります。"
      }
    },
    "stop": {
      "description": [
        "AudioIn をオフにします。AudioIn が停止している場合は、getLevel() を使用できません。再開する場合は、ユーザーにアクセス許可を求めることがあります。"
      ]
    },
    "connect": {
      "description": [
        "オーディオユニットに接続します。パラメーターが提供されない場合は、メイン出力（スピーカー）に接続します。<br/>"
      ],
      "params": {
        "unit": "Object: (オプション) FFT など、オーディオ入力を受け入れるオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "AudioIn をすべてのオーディオユニットから切断します。たとえば、connect() が呼び出されていた場合、disconnect() を呼び出すことでスピーカーに信号を送信するのを停止します。<br/>"
      ]
    },
    "getLevel": {
      "description": [
        "AudioIn の Amplitude（ボリュームレベル）を読み取ります。AudioIn クラスには、マイクのボリュームレベルを簡単に取得するための Amplitude クラスのインスタンスが含まれています。オプションのスムージング値（0.0 < 1.0）を受け取ります。<em>注意: AudioIn は.start() 後に.getLevel() を使用する必要があります。</em><br/>"
      ],
      "returns": "Number: ボリュームレベル（0.0から1.0の間）",
      "params": {
        "smoothing": "Number: (オプション) スムージングはデフォルトで0.0です。以前の値にもとづいて値を平滑化します。"
      }
    },
    "amp": {
      "description": [
        "マイク入力の振幅（ボリューム）を0から1.0の範囲で設定します。 <br/>"
      ],
      "params": {
        "vol": "Number: 0から1.0の間の値",
        "time": "Number: (オプション) ランプ時間(オプション)"
      }
    },
    "getSources": {
      "description": [
        "利用可能な入力ソースのリストを返します。これは <a href=\"https://developer.mozilla.org/ en-US/docs/Web/API/MediaDevices/enumerateDevices\" target=\"_blank\">MediaDevices.enumerateDevices() - Web APIs | MDN</a> のラッパーで、Promise を返します。"
      ],
      "returns": "Promise: コールバックの代わりに使用できる Promise が返されます。enumerateDevices() メソッドと同様です",
      "params": {
        "successCallback": "Function: (オプション) デバイスリスト配列を唯一の引数として受け取るコールバック関数。",
        "errorCallback": "Function: (オプション) エラーメッセージを受け取るオプションのコールバック関数。"
      }
    },
    "setSource": {
      "description": [
        "入力ソースを設定します。getSources() が返す配列内の位置を表す数値を受け入れます。これは、<a href=\"https://developer.mozilla.org/ en-US/docs/Web/API/MediaDevices/enumerateDevices\" target=\"_blank\">navigator.mediaDevices.enumerateDevices()</a> をサポートしているブラウザーでのみ利用可能です。"
      ],
      "params": {
        "num": "Number: 配列内の入力ソースの位置"
      }
    }
  },
  "p5.Effect": {
    "description": [
      "Effect は、p5.js におけるオーディオエフェクトの基本クラスです。このモジュールは、現在および将来のエフェクトに共通で有用なノードとメソッドを処理します。",
      "このクラスは、<a href=\"/reference/#/p5.Distortion\">p5.Distortion</a>、<a href=\"/reference/#/p5.Compressor\">p5.Compressor</a>、<a href=\"/reference/#/p5.Delay\">p5.Delay</a>、<a href=\"/reference/#/p5.Filter\">p5.Filter</a>、<a href=\"/reference/#/p5.Reverb\">p5.Reverb</a> によって拡張されます。"
    ],
    "params": {
      "ac": "Object: (オプション) p5 オブジェクトのオーディオコンテキストへの参照",
      "input": "AudioNode: (オプション) Gain Node エフェクトのラッパー",
      "output": "AudioNode: (オプション) Gain Node エフェクトのラッパー",
      "_drywet": "Object: (オプション) Tone.JS CrossFade ノード (デフォルト値: 1)",
      "wet": "AudioNode: (オプション) このクラスを拡張するエフェクトは、ドライ信号とウェット信号を適切にミックスするために、このゲインノードにウェット信号を接続する必要があります。"
    },
    "amp": {
      "description": ["フィルターの出力ボリュームを設定します。"],
      "params": {
        "vol": "Number: (オプション) 0から1.0の振幅",
        "rampTime": "Number: (オプション) rampTime まで続くフェードを作成します",
        "tFromNow": "Number: (オプション) このイベントが tFromNow 秒後に発生するようにスケジュールします"
      }
    },
    "chain": {
      "description": [
        "エフェクトをチェーンで接続します。使用例: filter.chain(reverb, delay, panner); 任意の数の引数で使用できます"
      ],
      "params": {
        "arguments": "Object: (オプション) 複数の音声オブジェクトをチェーンで接続します"
      }
    },
    "drywet": {
      "description": ["ドライ/ウェット値を調整します。"],
      "params": {
        "fade": "Number: (オプション) 指定されたドライ/ウェット値（0〜1.0）"
      }
    },
    "connect": {
      "description": [
        "出力を p5.js-sound、Web オーディオノードに送信したり、信号を使用して AudioParam を制御したりします。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    }
  },
  "p5.Filter": {
    "description": [
      "p5.Filter は、入力ソースの周波数応答をフィルタリングするために Web Audio Biquad Filter を使用します。サブクラスには以下が含まれます： <a href=\"/reference/#/p5.LowPass\"><code>p5.LowPass</code></a>: カットオフ周波数以下の周波数を通過させ、カットオフ周波数以上の周波数を減衰させます。<br/> <a href=\"/reference/#/p5.HighPass\"><code>p5.HighPass</code></a>: ローパスフィルターの反対です。 <br/> <a href=\"/reference/#/p5.BandPass\"><code>p5.BandPass</code></a>: 一定の周波数範囲を通過させ、この周波数範囲より低い周波数と高い周波数を減衰させます。<br/>",
      "<code>.res()</code> メソッドは、バンドパスの幅または低/高周波数のレゾナンスを制御します。",
      "このクラスは <a href=\"/reference/#/p5.Effect\">p5.Effect</a> を拡張しています。メソッド <a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、<a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a> が利用可能です。"
    ],
    "params": {
      "type": "String: (オプション) 'lowpass' (デフォルト)、'highpass'、'bandpass'"
    },
    "biquadFilter": {
      "description": [
        "p5.Filter は <a href=\"http://www.w3.org/TR/webaudio/#BiquadFilterNode\">Web Audio BiquadFilter Node</a> を使用して構築されます。"
      ]
    },
    "process": {
      "description": [
        "一連のフィルタパラメーターにもとづいてオーディオ信号をフィルタリングします。"
      ],
      "params": {
        "Signal": "Object: オーディオを出力するオブジェクト",
        "freq": "Number: (オプション) 10から22050Hz までの周波数",
        "res": "Number: (オプション) 0.001から1000までのフィルタ周波数のレゾナンス/幅"
      }
    },
    "set": {
      "description": ["フィルタの周波数とレゾナンスを設定します。"],
      "params": {
        "freq": "Number: (オプション) 10から22050Hz までの周波数",
        "res": "Number: (オプション) 0.001から1000までのレゾナンス（Q）",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "freq": {
      "description": [
        "フィルタの周波数を設定します。周波数は10から22050Hz の範囲で設定できます（人間の聴覚範囲の範囲ですが、実際には多くの人がより狭い範囲で聞くことができます）。"
      ],
      "returns": "Number: 現在の周波数値を返します",
      "params": {
        "freq": "Number: フィルタ周波数",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "res": {
      "description": [
        "バンドパス周波数の幅または低/高通過周波数のレゾナンスを制御します。"
      ],
      "returns": "Number: 現在の res 値を返します",
      "params": {
        "res": "Number: フィルタ周波数のレゾナンス/幅、0.001から1000まで",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "gain": {
      "description": [
        "Biquad フィルターのゲイン属性を制御します。これは p5.Effect から継承される.amp() とは異なります。.amp() は出力ゲインノードを介してボリュームを制御し、p5.Filter.gain() は Biquad フィルターノードのゲインパラメーターを制御します。"
      ],
      "returns": "Number: 現在のまたは更新されたゲイン値を返します",
      "params": {
        "gain": "Number"
      }
    },
    "toggle": {
      "description": [
        "トグル関数。指定されたタイプとオールパスの間を切り替えます。"
      ],
      "returns": "Boolean: [トグル値]"
    },
    "setType": {
      "description": [
        "p5.Filter のタイプを設定します。可能なタイプには、「lowpass」（デフォルト）、 「highpass」、「bandpass」、「lowshelf」、「highshelf」、「peaking」、「notch」、「allpass」があります。"
      ],
      "params": {
        "t": "String"
      }
    }
  },
  "p5.LowPass": {
    "description": [
      "コンストラクター: <code>new p5.LowPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('lowpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.HighPass": {
    "description": [
      "コンストラクター: <code>new p5.HighPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('highpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.BandPass": {
    "description": [
      "コンストラクター: <code>new p5.BandPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('bandpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.EQ": {
    "description": [
      "p5.EQ は、マルチバンドオーディオイコライザーの機能を実行するオーディオエフェクトです。イコライゼーションは、オーディオ信号の周波数成分のバランスを調整するために使用されます。このプロセスは、サウンドプロダクションや録音で、サウンド出力デバイスに到達する前に波形を変更するために一般的に使用されます。EQ は、スペクトルの一部をフィルタリングすることによって興味深い歪みを作成するためのオーディオエフェクトとしても使用できます。p5.EQ は、Web Audio Biquad Filter Nodes のチェーンを使用して構築され、3または8バンドでインスタンス化できます。EQ からバンドを追加または削除するには、p5.EQ.bands（フィルターを格納する配列）を直接変更します。",
      "このクラスは <a href = \"/reference/#/p5.Effect\">p5.Effect</a> を拡張します。メソッド <a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、および <a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用可能です。"
    ],
    "returns": "Object: p5.EQ オブジェクト",
    "params": {
      "_eqsize": "Number: (オプション) 3または8を受け付けるコンストラクター。デフォルトは3です。"
    },
    "bands": {
      "description": [
        "p5.EQ は、抽象化された p5.Filter オブジェクトで構築されています。バンドを変更するには、<a href=\"/reference/#/p5.Filter\" title=\"p5.Filter reference\"> p5.Filter</a> API のメソッド、特に <code>gain</code> および <code>freq</code> を使用します。バンドは、0から3または0から7のインデックスで配列に格納されます。"
      ]
    },
    "process": {
      "description": ["入力を EQ に接続して処理します。"],
      "params": {
        "src": "Object: オーディオソース"
      }
    }
  },
  "p5.Panner3D": {
    "description": [
      "Panner3D は <a title=\"Web Audio Panner docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode\"> Web Audio Spatial Panner Node</a> にもとづいています。このパナーは、音声を 3D 空間に配置および方向付けするための空間処理ノードです。",
      "位置は <a title=\"Web Audio Listener docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/AudioListener\">Audio Context Listener</a> に相対的で、<code>p5.soundOut.audiocontext.listener</code> によってアクセスできます。"
    ],
    "panner": {
      "description": [
        "<a title=\"Web Audio Panner docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode\"> Web Audio Spatial Panner Node</a>",
        "プロパティには <a href=\"https://www.w3.org/TR/webaudio/#idl-def-PanningModelType\">Panning Model</a>: \"equal power\"または\"HRTF\"、<a href=\"https://www.w3.org/TR/webaudio/#idl-def-DistanceModelType\">DistanceModel</a>: \"linear\"、\"inverse\"、または\"exponential\"が含まれます。"
      ]
    },
    "process": {
      "description": ["オーディオソースを接続します。"],
      "params": {
        "src": "Object: 入力ソース"
      }
    },
    "set": {
      "description": ["パナーの X、Y、Z 座標を設定します。"],
      "returns": "Array: 更新された x、y、z 値を配列として返します。",
      "params": {
        "xVal": "Number",
        "yVal": "Number",
        "zVal": "Number",
        "time": "Number"
      }
    },
    "positionX": {
      "description": ["座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "positionY": {
      "description": ["座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "positionZ": {
      "description": ["座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orient": {
      "description": ["パナーの X、Y、Z 座標を設定します。"],
      "returns": "Array: 更新された x、y、z 値を配列として返します。",
      "params": {
        "xVal": "Number",
        "yVal": "Number",
        "zVal": "Number",
        "time": "Number"
      }
    },
    "orientX": {
      "description": ["方向座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orientY": {
      "description": ["方向座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orientZ": {
      "description": ["方向座標のゲッターとセッターメソッドです。"],
      "returns": "Number: 更新された座標値を返します。"
    },
    "setFalloff": {
      "description": ["減衰率と最大距離を設定します。"],
      "params": {
        "maxDistance": "Number (オプション) ",
        "rolloffFactor": "Number (オプション) "
      }
    },
    "maxDist": {
      "description": ["音源とリスナー間の最大距離"],
      "returns": "Number: 更新された値",
      "params": {
        "maxDistance": "Number"
      }
    },
    "rollof": {
      "description": [
        "音源がリスナーから遠ざかるにつれてボリュームがどのように減衰するかを示す値です。"
      ],
      "returns": "Number: 更新された値",
      "params": {
        "rolloffFactor": "Number"
      }
    }
  },
  "p5.Delay": {
    "description": [
      "Delay はエコー効果をもつエフェクトです。既存の音源を処理し、その音源の遅延バージョンを出力します。p5.Delay は delayTime、feedback、filter、type によって異なる効果を生み出すことができます。以下の例では、フィードバック0.5（デフォルト値）でループする遅延が作成され、各繰り返しでボリュームが50％ずつ減少します。フィルターは高周波をカットするため、遅延が元の音源と同様に刺すような音になりません。",
      "このクラスは <a href = \"/reference/#/p5.Effect\">p5.Effect</a> を拡張しています。メソッド <a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、<a href = \"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用可能です。"
    ],
    "leftDelay": {
      "description": [
        "p5.Delay は2つの Web Audio Delay Nodes を使用して構築されており、各ステレオチャンネル用にひとつずつあります。"
      ]
    },
    "rightDelay": {
      "description": [
        "p5.Delay は2つの Web Audio Delay Nodes を使用して構築されており、各ステレオチャンネル用にひとつずつあります。"
      ]
    },
    "process": {
      "description": [
        "設定した遅延パラメーターに応じてオーディオ信号に遅延を追加します。"
      ],
      "params": {
        "Signal": "Object: オーディオを出力するオブジェクト",
        "delayTime": "Number: (オプション) 遅延/エコーの時間（秒）。一部のブラウザーは delayTime を1秒に制限しています。",
        "feedback": "Number: (オプション) ループ内で遅延を自己に送信し、各繰り返しでボリュームが低下します。",
        "lowPass": "Number: (オプション) カットオフ周波数。lowPass 以下の周波数のみが遅延の一部になります。"
      }
    },
    "delayTime": {
      "description": [
        "エコーの遅延時間を秒単位で設定します。通常、この値は0.0から1.0の間の浮動小数点数になります。"
      ],
      "params": {
        "delayTime": "Number: エコーの遅延時間（秒単位）"
      }
    },
    "feedback": {
      "description": [
        "遅延が自己にループバックすると、フィードバックが発生します。フィードバック量は、ループを通るたびに送信する信号の量を決定します。フィードバックが1.0を超えると、全体の出力がループを通るたびに増加し、無限のフィードバックループが作成されます。デフォルト値は0.5です。"
      ],
      "returns": "Number: フィードバック値",
      "params": {
        "feedback": "Number|Object: 0.0から1.0までの値、またはこのパラメーターを変調するために使用できるオシレーターなどのオブジェクト"
      }
    },
    "filter": {
      "description": [
        "遅延用のローパスフィルター周波数を設定します。ローパスフィルターは、フィルター周波数より高い周波数をカットオフします。"
      ],
      "params": {
        "cutoffFreq": "Number|Object: フィルター周波数より高い周波数をカットオフするローパスフィルター。",
        "res": "Number|Object: フィルター周波数カットオフのレゾナンス、またはこのパラメーターをモジュレートするために使用できるオブジェクト（例：p5.Oscillator）。 高い数値（例: 15）はレゾナンスを、低い数値（例: .2）はスロープを生み出します。"
      }
    },
    "setType": {
      "description": [
        "遅延のプリセットタイプを選択します。'pingPong'は、信号を左から右のチャンネルに跳ね返してステレオ効果を生成します。それ以外のパラメーターは、デフォルトの遅延設定に戻ります。"
      ],
      "params": {
        "type": "String|Number: 'pingPong'(1)または'default'(0)"
      }
    },
    "amp": {
      "description": ["遅延効果の出力レベルを設定します。"],
      "params": {
        "volume": "Number: 0から1.0の振幅",
        "rampTime": "Number: (オプション) rampTime が持続するフェードを作成します",
        "timeFromNow": "Number: (オプション) このイベントが何秒後に発生するようにスケジュールするか"
      }
    },
    "connect": {
      "description": [
        "出力を p5.sound または Web Audio オブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    }
  },
  "p5.Reverb": {
    "description": [
      "p5.Reverb は、多数の減衰するエコーを通じて音に深みを与えます。それにより、音が物理的な空間で発生しているという知覚を生み出します。p5.Reverb には、.set() や.process() メソッドで設定できる Time(リバーブの持続時間)や decayRate(各エコーで音がどの程度減衰するか)のパラメーターがあります。p5.Convolver は p5.Reverb を拡張し、畳み込みによって実際の物理的な空間の音を再現することができます。",
      "このクラスは <a href=\"/reference/#/p5.Effect\">p5.Effect</a> を拡張しています。メソッド <a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、<a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用可能です。"
    ],
    "process": {
      "description": [
        "ソースをリバーブに接続し、リバーブのパラメーターを割り当てます。"
      ],
      "params": {
        "src": "Object: p5.sound / Web Audio オブジェクト（サウンド出力）。",
        "seconds": "Number: (オプション) リバーブの持続時間（秒単位）。最小値: 0、最大値: 10。デフォルトは3",
        "decayRate": "Number: (オプション) 各エコーでの減衰の割合。最小値: 0、最大値: 100。デフォルトは2",
        "reverse": "Boolean: (オプション) リバーブを逆再生または順再生するかどうか。"
      }
    },
    "set": {
      "description": [
        "リバーブの設定を設定します。.process() と似ていますが、新しい入力を割り当てません。"
      ],
      "params": {
        "seconds": "Number: (オプション) リバーブの持続時間（秒単位）。最小値: 0、最大値: 10。デフォルトは3",
        "decayRate": "Number: (オプション) 各エコーでの減衰の割合。最小値: 0、最大値: 100。デフォルトは2",
        "reverse": "Boolean: (オプション) リバーブを逆再生または順再生するかどうか。"
      }
    },
    "amp": {
      "description": ["リバーブ効果の出力レベルを設定します。"],
      "params": {
        "volume": "Number: 0から1.0の振幅",
        "rampTime": "Number: (オプション) rampTime 秒続くフェードを作成します。",
        "timeFromNow": "Number: (オプション) このイベントを、timeFromNow 秒後にスケジュールします。"
      }
    },
    "connect": {
      "description": [
        "出力を p5.sound または Web オーディオオブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    }
  },
  "p5.Convolver": {
    "description": [
      "p5.Convolver は、p5.Reverb を拡張したものです。これは、<a href=\" https://en.wikipedia.org/wiki/Convolution_reverb#Real_space_simulation\"> 畳み込み</a> と呼ばれるプロセスを通じて、現実の物理空間の音を模擬することができます。",
      "畳み込みは、任意のオーディオ入力を「インパルス応答」と呼ばれるもので乗算することによって、音が時間的にどのように分散するかをシミュレートします。インパルス応答は、提供したオーディオファイルから生成されます。インパルス応答を生成する方法のひとつは、残響のある空間で風船を割ってエコーを録音することです。畳み込みは音の実験にも使用できます。",
      "<code>createConvolution(path)</code> メソッドを使用して、インパルス応答オーディオファイルへのパスを指定して p5.Convolver をインスタンス化します。"
    ],
    "params": {
      "path": "String: サウンドファイルへのパス",
      "callback": "Function:  (オプション) ロードが成功した場合に呼び出す関数",
      "errorCallback": "Function:  (オプション) ロードに失敗した場合に呼び出す関数。この関数はエラーまたは XMLHttpRequest オブジェクトを受け取り、何が問題だったかに関する情報が含まれます。"
    },
    "convolverNode": {
      "description": [
        "内部的に、p5.Convolver は <a href=\"http://www.w3.org/TR/webaudio/#ConvolverNode\"> Web Audio Convolver Node</a> を使用しています。"
      ]
    },
    "impulses": {
      "description": [
        "複数のインパルスファイルを.addImpulse メソッドを使用してロードすると、これらはオブジェクトとしてこの配列内に保存されます。<code>toggleImpulse(id)</code> メソッドを使用して、これらのオブジェクトの間を切り替えることができます。"
      ]
    },
    "process": {
      "description": ["ソースをコンボリューションに接続します。"],
      "params": {
        "src": "Object: 音声出力をもつ p5.sound/Web Audio オブジェクト。"
      }
    },
    "addImpulse": {
      "description": [
        "新しいインパルス応答をロードして割り当てます。インパルスは <code>.impulses</code> 配列に追加され、<code>.toggleImpulse(id)</code> メソッドを使用して前のインパルスに切り替えることができます。"
      ],
      "params": {
        "path": "String: サウンドファイルへのパス",
        "callback": "Function: 関数 (オプション) ",
        "errorCallback": "Function: 関数 (オプション) "
      }
    },
    "resetImpulse": {
      "description": [
        ".addImpulse と似ていますが、メモリーを節約するために <code>.impulses</code> 配列がリセットされます。新しい <code>.impulses</code> 配列が作成され、このインパルスが唯一の項目として保存されます。"
      ],
      "params": {
        "path": "String: サウンドファイルへのパス",
        "callback": "Function: 関数 (オプション) ",
        "errorCallback": "Function: 関数 (オプション) "
      }
    },
    "toggleImpulse": {
      "description": [
        "<code>.addImpulse()</code> を使用して、複数のインパルスを p5.Convolver に追加した場合は、このメソッドを使用して <code>.impulses</code> 配列内の項目を切り替えることができます。使用するインパルスを識別するためにパラメーターを受け取ります。インパルスは、元のファイル名（文字列）または <code>.impulses</code> 配列内の位置（番号）で識別できます。<br/> .impulses 配列内のオブジェクトに直接アクセスできます。各オブジェクトには2つの属性があります。ひとつは <a href=\"http://webaudio.github.io/web-audio-api/#the-audiobuffer-interface\">Web オーディオの AudioBuffer</a> 型の <code>.audioBuffer</code> で、もうひとつは、元のファイル名に対応する文字列の <code>.name</code> です。"
      ],
      "params": {
        "id": "String|Number: インパルスを元のファイル名（文字列）または <code>.impulses</code> 配列内の位置（数値）で識別します。"
      }
    }
  },
  "p5.Phrase": {
    "description": [
      "フレーズとは、音符や休符の系列で構成される時間的な音楽的イベントのパターンです。",
      "フレーズは p5.Part に追加して再生する必要があり、各パートで同時に複数のフレーズを再生できます。たとえば、ひとつのフレーズがキックドラムであり、別のフレーズがスネア、もうひとつがベースラインである可能性があります。",
      "最初のパラメーターは、フレーズを後で変更または削除できるように名前を指定するためのものです。コールバックは、このフレーズがステップごとに呼び出す関数です。たとえば、<code>playNote(value){}</code> と呼ばれるかもしれません。配列は、フレーズの各ステップでコールバックに渡される値を決定します。数値、複数の数値をもつオブジェクト、または0（休符）を表すことができます。"
    ],
    "params": {
      "name": "String: フレーズにアクセスするための名前。",
      "callback": "Function: このフレーズが呼び出す関数の名前。通常、サウンドを再生し、2つのパラメーター（サウンドを再生する時間（現在からの秒数）とシーケンス配列からの値）を受け入れます。正確さを保証するために、play() または start() メソッドに時間を渡す必要があります。",
      "sequence": "Array: フレーズの各ステップでコールバックに渡す値の配列。"
    },
    "sequence": {
      "description": [
        "フレーズの各ステップでコールバックに渡される値の配列。コールバック関数の要件に応じて、これらの値は数値、文字列、または複数のパラメーターをもつオブジェクトである場合があります。 0 は休符を表します。"
      ]
    }
  },
  "p5.Part": {
    "description": [
      "p5.Part は、ひとつ以上の p5.Phrase を再生します。ステップと tatums を使用してパートをインスタンス化します。デフォルトでは、各ステップは1/16拍子を表します。",
      "音楽のタイミングについては、p5.Phrase を参照してください。"
    ],
    "params": {
      "steps": "Number: (オプション) パート内のステップ数",
      "tatums": "Number: (オプション) 1拍子の分割数。たとえば、四分音符の場合は1/4または0.25を使用します（デフォルトは1/16、16分音符）"
    },
    "setBPM": {
      "description": ["このパートのテンポを、BPM（分速）で設定します。"],
      "params": {
        "BPM": "Number: Beats Per Minute",
        "rampTime": "Number: (オプション) 現在からの秒数"
      }
    },
    "getBPM": {
      "description": ["このパートのテンポ（BPM）を返します。"],
      "returns": "Number:"
    },
    "start": {
      "description": [
        "このパートの再生を開始します。setBPM で決定された速度で、すべてのフレーズを再生します。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "loop": {
      "description": [
        "このパートの再生をループさせます。setBPM で決定された速度で、すべてのフレーズをループ再生します。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "noLoop": {
      "description": ["このパートのループ再生を停止します。"]
    },
    "stop": {
      "description": [
        "このパートを停止し、ステップ0に戻します。再生は、パートが再度再生されたときに最初から再開されます。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "pause": {
      "description": [
        "このパートを一時停止します。再生は現在のステップから再開されます。"
      ],
      "params": {
        "time": "Number: 現在からの秒数"
      }
    },
    "addPhrase": {
      "description": ["p5.Phrase をこのパートに追加します。"],
      "params": {
        "phrase": "p5.Phrase: p5.Phrase への参照"
      }
    },
    "removePhrase": {
      "description": ["名前が与えられたフレーズをこのパートから削除します。"],
      "params": {
        "phraseName": "String"
      }
    },
    "getPhrase": {
      "description": [
        "名前が与えられたフレーズを、このパートから取得します。これにより、フレーズの配列を修正できます。"
      ],
      "params": {
        "phraseName": "String"
      }
    },
    "replaceSequence": {
      "description": [
        "指定された名前をもつすべてのシーケンスを検索し、そのパターンを指定された配列で置き換えます。"
      ],
      "params": {
        "phraseName": "String",
        "sequence": "Array: フレーズの各ステップでコールバックに渡す値の配列。"
      }
    },
    "onStep": {
      "description": [
        "各ステップで呼び出される関数を設定します。これにより、前の関数がクリアされます。"
      ],
      "params": {
        "callback": "Function: 各拍/分割で発火させたいコールバックの名前。"
      }
    }
  },
  "p5.Score": {
    "description": [
      "スコアは複数のパートから構成されます。パートは順番に再生されます。たとえば、A パート、B パート、C パートがあったとして、それらをこの順番で再生できます：<code>new p5.Score(a, a, b, a, c)</code>"
    ],
    "params": {
      "parts": "p5.Part: (オプション) ひとつまたは複数のパート。順番に再生されます。"
    },
    "start": {
      "description": ["スコアの再生を開始します。"]
    },
    "stop": {
      "description": ["スコアの再生を停止します。"]
    },
    "pause": {
      "description": ["スコアの再生を一時停止します。"]
    },
    "loop": {
      "description": ["スコアの再生をループします。"]
    },
    "noLoop": {
      "description": [
        "スコアのループ再生を停止します。現在再生中の場合、再生が完了した後に効果が発揮されます。"
      ]
    },
    "setBPM": {
      "description": ["スコア内のすべてのパートのテンポを設定します。"],
      "params": {
        "BPM": "Number: 一分間あたりのビート数",
        "rampTime": "Number: 現在からの秒数"
      }
    }
  },
  "p5.SoundLoop": {
    "description": ["SoundLoop"],
    "params": {
      "callback": "Function: ループの各反復で呼び出されるコールバック関数",
      "interval": "Number|String: (オプション) ループの各反復の時間 (数値の場合) または拍子 (文字列の場合は、<a href = \"https://github.com/Tonejs/Tone.js/wiki/Time\">Tone.Time</a> の規則に従う)。デフォルトは1秒"
    },
    "bpm": {
      "description": [
        "値を設定すると、クロックの周波数が変更され、次のコールバックが呼ばれるまで反映されます。ビート数/分（デフォルトは60）"
      ]
    },
    "timeSignature": {
      "description": ["小節の4分音符の数（デフォルトは4）"]
    },
    "interval": {
      "description": ["ループの間隔の長さ"]
    },
    "iterations": {
      "description": ["コールバックがこれまでに呼び出された回数"]
    },
    "musicalTimeMode": {
      "description": [
        "<a href = \"https://github.com/Tonejs/Tone.js/wiki/Time\">Tone.Time</a> の規則に従った曲の時間表現を使用する場合は true。数値を使用する場合は false。"
      ]
    },
    "maxIterations": {
      "description": [
        "ループを再生する回数の上限を設定します。デフォルトは無限大"
      ]
    },
    "start": {
      "description": ["ループを開始します"],
      "params": {
        "timeFromNow": "Number: (オプション) 開始時間をスケジュールします"
      }
    },
    "stop": {
      "description": ["ループを停止します"],
      "params": {
        "timeFromNow": "Number: (オプション) 停止時間をスケジュールします"
      }
    },
    "pause": {
      "description": ["ループを一時停止します"],
      "params": {
        "timeFromNow": "Number: (オプション) 一時停止時間をスケジュールします"
      }
    },
    "syncedStart": {
      "description": [
        "複数のループを同期させます。2つ以上のループを同期して開始する場合、またはすでに再生されているループと同期してループを開始する場合に、このメソッドを使用します。このメソッドは、暗黙的なループを明示的なマスターループと同期してスケジュールします。すなわち、loopToStart.syncedStart(loopToSyncWith)。"
      ],
      "params": {
        "otherLoop": "Object: 同期させる p5.SoundLoop オブジェクト",
        "timeFromNow": "Number: (オプション) timeFromNow 秒後にループを同期して開始します"
      }
    }
  },
  "p5.Compressor": {
    "description": [
      "Compressor は、音声入力ソースに対してダイナミックなコンプレッションを実行するオーディオエフェクトクラスです。これは音楽や音声制作に非常に一般的に使用される技術です。コンプレッションは、ラウドな音を下げ、ソフトな音を上げることにより、全体的により大きく、豊かで、フルな音を作り出します。コンプレッションは、ボリュームのピークによる音の歪みであるクリッピングを避けるために使用され、特に多くの音が同時に再生される場合に特に有用です。コンプレッションは、メイン出力に加えて、個々の音源にも使用できます。",
      "このクラスは、<a href=\"/reference/#/p5.Effect\">p5.Effect</a> を拡張します。メソッド <a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、および <a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用可能です。"
    ],
    "compressor": {
      "description": [
        "p5.Compressor は、<a href=\"https://www.w3.org/TR/webaudio/#the-dynamicscompressornode-interface\"  target=\"_blank\" title=\"W3 spec for Dynamics Compressor Node\">Web Audio Dynamics Compressor Node</a> で構築されています。"
      ]
    },
    "process": {
      "description": [
        "connect と同じ機能を実行しますが、コンプレッサーの audioParams を設定するためのオプションパラメーターを受け取ることもできます。"
      ],
      "params": {
        "src": "Object: 接続するサウンドソース",
        "attack": "Number: (オプション) ゲインを10 dB 減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "knee": "Number: (オプション) しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "ratio": "Number: (オプション) 出力の 1dB の変化に対して入力が変化する dB の量を表します デフォルトは12、範囲は1-20",
        "threshold": "Number: (オプション) コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100〜0",
        "release": "Number: (オプション) ゲインを10 dB 増加させる時間（秒単位）。デフォルトは.25、範囲は0-1"
      }
    },
    "set": {
      "description": ["コンプレッサーのパラメーターを設定します。"],
      "params": {
        "attack": "Number: ゲインを10 dB 減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "knee": "Number: しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "ratio": "Number: 出力の 1dB の変化に対して入力が変化する dB の量を表します。デフォルトは12、範囲は1-20",
        "threshold": "Number: コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100〜0",
        "release": "Number: ゲインを10 dB 増加させる時間（秒単位）。デフォルトは.25、範囲は0-1"
      }
    },
    "attack": {
      "description": [
        "現在の attack を取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "attack": "Number: (オプション) ゲインを10 dB 減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "knee": {
      "description": [
        "現在の knee を取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "knee": "Number: (オプション) しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "ratio": {
      "description": [
        "現在の ratio を取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "ratio": "Number: (オプション) 出力の 1dB の変化に対して入力が変化する dB の量を表します。デフォルトは12、範囲は1-20",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "threshold": {
      "description": [
        "現在の threshold を取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "threshold": "Number: コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100-0",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "release": {
      "description": [
        "現在の release を取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "release": "Number: ゲインを10 dB 増加させる時間（秒単位）。デフォルトは.25、範囲は0-1",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "reduction": {
      "description": ["現在の reduction 値を返します。"],
      "returns": "Number: シグナルに適用される減衰量の量の値。"
    }
  },
  "p5.PeakDetect": {
    "description": [
      "PeakDetect は、p5.FFT と連携して、周波数スペクトルの一部またはすべてでオンセットを検出します。",
      "p5.PeakDetect を使用するには、描画ループで <code>update</code> を呼び出し、p5.FFT オブジェクトを渡します。",
      "<code>freq1</code> と <code>freq2</code> の範囲を設定することで、周波数スペクトルの特定の部分を聴取できます。",
      "<code>threshold</code> はピークを検出するための閾値で、0から1までの範囲でスケールされます。対数的であり、0.1は1.0の半分のラウドネスに相当します。",
      "<code>update</code> メソッドは、描画ループで実行されることを想定しており、<b>frames</b> は別のピークを検出する前に経過する必要のあるループ数を決定します。たとえば、frameRate() = 60の場合、次の式で120ビート/分の曲のビートを検出できます： <code> framesPerPeak = 60 / (estimatedBPM / 60);</code>",
      "@b2renger によるコード例と、<a href=\"http://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/\" target=\"_blank\">Felix Turner</a> によるシンプルなビート検出の説明をもとにしています。"
    ],
    "params": {
      "freq1": "Number: (オプション) 低周波数 - デフォルトは20 Hz",
      "freq2": "Number: (オプション) 高周波数 - デフォルトは20000 Hz",
      "threshold": "Number: (オプション) ログスケールで0から1の範囲で表されるビートを検出するための閾値。0.1は1.0の半分のラウドネスに相当します。デフォルトは0.35",
      "framesPerPeak": "Number: (オプション) デフォルトは20"
    },
    "isDetected": {
      "description": [
        "ピークが検出された場合、<code>isDetected</code> は true に設定されます。"
      ]
    },
    "update": {
      "description": [
        "<code>update</code> メソッドは描画ループで実行されます。",
        "FFT オブジェクトを受け入れます。ピーク検出には完了した FFT 解析が必要なため、FFT オブジェクトで <code>.analyze()</code> を呼び出す必要があります。"
      ],
      "params": {
        "fftObject": "p5.FFT: p5.FFT オブジェクト"
      }
    },
    "onPeak": {
      "description": [
        "<code>onPeak</code> は2つの引数を受け取ります。ピークが検出されたときに呼び出される関数と、0.0から1.0の間のピークの値がコールバックに渡されます。"
      ],
      "params": {
        "callback": "Function: ピークが検出されたときに呼び出される関数の名前",
        "val": "Object: (オプション) ピークが検出されたときに関数に渡されるオプションの値"
      }
    }
  },
  "p5.SoundRecorder": {
    "description": [
      "再生用に録音したり、.wav ファイルとして保存するために音を記録します。p5.SoundRecorder はスケッチから出力されるすべての音を記録するか、setInput() メソッドで特定のソースを割り当てることができます。",
      "record() メソッドは、p5.SoundFile をパラメーターとして受け取ります。再生が停止すると（指定された時間が経過するか、stop() メソッドで停止した後）、p5.SoundRecorder はその録音をその p5.SoundFile に送信し、再生用に利用できるようになります。"
    ],
    "setInput": {
      "description": [
        "p5.SoundRecorder に特定のデバイスを接続します。パラメーターが与えられない場合、p5.SoundRecorder はスケッチから出力されるすべての音を記録します。"
      ],
      "params": {
        "unit": "Object: (オプション) p5.sound オブジェクトまたは音を出力する Web Audio ユニット"
      }
    },
    "record": {
      "description": [
        "録音を開始します。録音した内容にアクセスするには、最初のパラメーターとして p5.SoundFile を提供してください。録音が完了したら、p5.SoundRecorder はその録音を p5.SoundFile に送信し、再生用に利用できるようにします。オプションのパラメーターには、録音の時間（秒単位）と、完了後に呼び出されるコールバック関数があります。"
      ],
      "params": {
        "soundFile": "p5.SoundFile: p5.SoundFile",
        "duration": "Number: (オプション) 時間（秒単位）",
        "callback": "Function: (オプション) 録音が完了した時に呼び出される関数の名前"
      }
    },
    "stop": {
      "description": [
        "録音を停止します。録音が停止すると、結果は .record() で指定された p5.SoundFile に送信され、record() でコールバック関数が指定された場合は、その関数が呼び出されます。"
      ]
    }
  },
  "p5.Distortion": {
    "description": [
      "Web Audio WaveShaper Node を使用した歪み効果。効果は、<a href=\"http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\">Kevin Ennis</a> によって開発された手法を採用しています。",
      "このクラスは <a href = \"/reference/#/p5.Effect\">p5.Effect</a> を拡張します。メソッド <a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、および <a href = \"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用できます。"
    ],
    "params": {
      "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
      "oversample": "String: (オプション) 'none'、'2x'、または'4x'。"
    },
    "WaveShaperNode": {
      "description": [
        "p5.Distortion は、<a href=\"http://www.w3.org/TR/webaudio/#WaveShaperNode\">Web Audio WaveShaper Node</a> を使用して構築されています。"
      ]
    },
    "process": {
      "description": [
        "音源を処理し、オプションで量と oversample 値を指定します。"
      ],
      "params": {
        "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
        "oversample": "String: (オプション) 'none'、'2x'、'4x'のいずれか"
      }
    },
    "set": {
      "description": ["waveshaper 歪みの量と oversample を設定します。"],
      "params": {
        "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
        "oversample": "String: (オプション) 'none'、'2x'、'4x'のいずれか"
      }
    },
    "getAmount": {
      "description": ["歪みの量を返します。通常、値は0-1の範囲内です。"],
      "returns": "Number: 歪みの量。通常、値は0-1の範囲内です。"
    },
    "getOversample": {
      "description": ["oversampling を返します。"],
      "returns": "String: oversample は'none'、'2x'、'4x'のいずれか"
    }
  },
  "p5.Gain": {
    "description": [
      "ゲインノードは、音のボリュームの相対的な設定に使用されます。通常、ミキサーの構築に使用されます。"
    ],
    "setInput": {
      "description": ["ソースをゲインノードに接続します。"],
      "params": {
        "src": "Object: p5.sound / Web Audio オブジェクト (音声出力がある)"
      }
    },
    "connect": {
      "description": [
        "出力を p5.sound または Web Audio オブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    },
    "amp": {
      "description": ["ゲインノードの出力レベルを設定します。"],
      "params": {
        "volume": "Number: 0から1.0の振幅値",
        "rampTime": "Number: (オプション) rampTime 秒間のフェードを作成します。",
        "timeFromNow": "Number: (オプション) このイベントを、現在から timeFromNow 秒後に予約します。"
      }
    }
  },
  "p5.AudioVoice": {
    "description": [
      "モノフォニックシンセサイザーのための基底クラスです。このクラスの拡張は、p5.PolySynth() との互換性を維持するために、以下のメソッドを実装し、API に従う必要があります。"
    ],
    "connect": {
      "description": ["p5 オブジェクトや Web Audio ノードに接続します。"],
      "params": {
        "unit": "オブジェクト"
      }
    },
    "disconnect": {
      "description": ["soundOut から切断します。"]
    }
  },
  "p5.MonoSynth": {
    "description": [
      "MonoSynth は音声合成の単一の声として使用されます。このクラスは PolySynth クラスと一緒に使用することが想定されています。カスタムシンセサイザーは、このクラスを継承して構築する必要があります。"
    ],
    "attack": {
      "description": ["ゲッターとセッター"]
    },
    "decay": {},
    "sustain": {},
    "release": {},
    "play": {
      "description": [
        "play() メソッドは、MonoSynth に指定した音符を演奏するよう指示します。このメソッドは、.triggerAttack と.triggerRelease の呼び出しをスケジュールします。"
      ],
      "params": {
        "note": "String | Number: 演奏する音符を指定します。周波数をヘルツ数で指定する場合は数値、または Note/Octave 形式で MIDI 値を指定する場合は(\"C4\", \"Eb3\"...など)。デフォルト値は440 Hz です。",
        "velocity": "Number: (オプション) 演奏する音符のベロシティ (0～1 の範囲)",
        "secondsFromNow": "Number: (オプション) 何秒後に演奏を開始するかを指定します。",
        "sustainTime": "Number: (オプション) エンベロープのリリースをトリガーする前に継続する時間を指定します。デフォルト値は0.15秒です。"
      }
    },
    "triggerAttack": {
      "description": [
        "triggerAttack() メソッドは、エンベロープの Attack と Decay 部分をトリガーします。ピアノのキーを押し続けるのに似ていますが、リリースするまでサステインレベルを保持します。"
      ],
      "params": {
        "note": "String | Number: 演奏する音符を指定します。周波数をヘルツ数で指定する場合は数値、または Note/Octave 形式で MIDI 値を指定する場合は(\"C4\", \"Eb3\"...など)。デフォルト値は440 Hz です。",
        "velocity": "Number: (オプション) 演奏する音符のベロシティ (0～1 の範囲)",
        "secondsFromNow": "Number: (オプション) 何秒後に演奏を開始するかを指定します。"
      }
    },
    "triggerRelease": {
      "description": [
        "triggerRelease() メソッドは、エンベロープのリリースをトリガーします。ピアノのキーを離して、リリースレベルとリリースタイムにしたがって音をフェードアウトさせます。"
      ],
      "params": {
        "secondsFromNow": "Number: リリースをトリガーするまでの時間 (単位は秒)"
      }
    },
    "setADSR": {
      "description": [
        "setADSR() メソッドは、<a href=\"https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg\"> ADSR エンベロープ </a> のような値を設定します。"
      ],
      "params": {
        "attackTime": "Number: エンベロープがアタックレベルに到達するまでの時間（単位は秒）",
        "decayTime": "Number: (オプション) エンベロープがディケイ/サステインレベルに到達するまでの時間（単位は秒）",
        "susRatio": "Number: (オプション) アタックレベルとリリースレベルの比率を、0から1までのスケールで指定します。1.0=アタックレベル、0.0=リリースレベルです。susRatio はディケイレベルと、エンベロープのサステイン部分が継続するレベルを決定します。たとえば、attackLevel が0.4で、releaseLevel が0で、susRatio が0.5の場合、decayLevel は0.2になります。attackLevel を setRange を使用して1.0に増やすと、decayLevel は比例して増加し、0.5になります。",
        "releaseTime": "Number: (オプション) 指定された秒数後にリリースする時間 (デフォルト値は0秒)"
      }
    },
    "amp": {
      "description": ["MonoSynth のボリュームを設定します。"],
      "returns": "Number: 新しいボリューム値",
      "params": {
        "vol": "Number: 設定するボリューム",
        "rampTime": "Number: (オプション) 新しいボリュームに到達するまでの時間"
      }
    },
    "connect": {
      "description": ["p5.sound / Web Audio オブジェクトに接続します。"],
      "params": {
        "unit": "Object: p5.sound または Web Audio オブジェクト"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    },
    "dispose": {
      "description": ["MonoSynth を破棄し、そのリソース/メモリーを解放します。"]
    }
  },
  "p5.OnsetDetect": {
    "description": [
      "指定された周波数範囲内のオンセット（ボリュームの急激な上昇）を検出します。"
    ],
    "params": {
      "freqLow": "Number: 低周波数",
      "freqHigh": "Number: 高周波数",
      "threshold": "Number: 0（エネルギーなし）から1（最大値）までの振幅閾値",
      "callback": "Function: オンセットが検出されたときに呼び出す関数"
    }
  },
  "p5.PolySynth": {
    "description": [
      "AudioVoice は、音響合成において単一の音声として使用されます。PolySynth クラスは、AudioVoice の配列を保持し、音声の割り当て、再生される音符の設定、パラメーターの設定を行います。"
    ],
    "params": {
      "synthVoice": "Number: (オプション) AudioVoice クラスを継承したモノフォニックシンセサイザーの数値。デフォルトは p5.MonoSynth",
      "maxVoices": "Number: (オプション) 音声の数。デフォルトは8"
    },
    "notes": {
      "description": [
        "再生された音符と現在再生されている音符の情報を保持するオブジェクト。新しい音符は動的にキーとして追加されます。音符がアタックされた状態である間、キーの値はその音を生成している AudioVoice です。音符がリリースされると、キーの値は undefined になります。"
      ]
    },
    "polyvalue": {
      "description": ["PolySynth には最低ひとつの音声が必要です。デフォルトは8"]
    },
    "AudioVoice": {
      "description": [
        "各トリガーされた音符の音を生成するモノシンセサイザー。p5.PolySynth はデフォルトで p5.MonoSynth を音声として使用します。"
      ]
    },
    "play": {
      "description": [
        "音符を再生し、サステイン時間をもつ noteAttack と noteRelease をトリガーします。"
      ],
      "params": {
        "note": "Number: (オプション) 再生する MIDI ノート（0から127の範囲、60は中央の C 音です）。",
        "velocity": "Number: (オプション) 再生する音符のベロシティ（0から1の範囲）。",
        "secondsFromNow": "Number: (オプション) 再生する時間（秒単位）。",
        "sustainTime": "Number: (オプション) エンベロープを解除する前にサステインする時間（秒単位）。"
      }
    },
    "noteADSR": {
      "description": [
        "トリガーされた特定の音符に対してエンベロープを設定します。このメソッドを使用すると、希望する音を再生するのに使用される AudioVoice のエンベロープが変更されます。変更されたエンベロープが他の音符に使用されることとなるのを防ぐために、noteRelease が呼び出される前にエンベロープをリセットする必要があります。"
      ],
      "params": {
        "note": "Number: (オプション) ADSR を設定する MIDI ノート。",
        "attackTime": "Number: (オプション) エンベロープが Attack Level に到達するまでの時間（秒単位）。",
        "decayTime": "Number: (オプション) エンベロープが Decay / Sustain Level に到達するまでの時間（秒単位）。",
        "susRatio": "Number: (オプション) 0から1のスケールで、attackLevel と releaseLevel の比率。1.0は attackLevel を、0.0は releaseLevel を表します。susRatio は、decayLevel とエンベロープのサステイン部分が維持されるレベルを決定します。たとえば、attackLevel が0.4で releaseLevel が0で、susRatio が0.5の場合、decayLevel は0.2になります。attackLevel が setRange を使用して1.0に増加すると、decayLevel は比例的に増加して0.5になります。",
        "releaseTime": "Number: (オプション) 今から数秒後の時間（デフォルトは0秒）"
      }
    },
    "setADSR": {
      "description": [
        "PolySynth のグローバルエンベロープを設定します。このメソッドを使用すると、各モノシンセサイザーのエンベロープが変更され、すべての音がこのエンベロープで再生されます。"
      ],
      "params": {
        "attackTime": "Number: (オプション) エンベロープが Attack Level に到達するまでの時間（秒単位）。",
        "decayTime": "Number: (オプション) エンベロープが Decay / Sustain Level に到達するまでの時間（秒単位）。",
        "susRatio": "Number: (オプション) 0から1のスケールで、attackLevel と releaseLevel の比率。1.0は attackLevel を、0.0は releaseLevel を表します。susRatio は、decayLevel とエンベロープのサステイン部分が維持されるレベルを決定します。たとえば、attackLevel が0.4で releaseLevel が0で、susRatio が0.5の場合、decayLevel は0.2になります。attackLevel が setRange を使用して1.0に増加すると、decayLevel は比例的に増加して0.5になります。",
        "releaseTime": "Number: (オプション) 今から数秒後の時間（デフォルトは0秒）"
      }
    },
    "noteAttack": {
      "description": [
        "モノシンセの Attack と Decay 部分をトリガーします。ピアノのキーを押し続けるのに似ていますが、リリースするまでサステインレベルを保持します。"
      ],
      "params": {
        "note": "Number: (オプション) Attack をトリガーする MIDI ノート。",
        "velocity": "Number: (オプション) 再生する音符のベロシティ（0から1の範囲）。",
        "secondsFromNow": "Number: (オプション) 今から数秒後の時間（秒単位）"
      }
    },
    "noteRelease": {
      "description": [
        "AudioVoice の音符のリリースをトリガーします。これは、ピアノのキーを離して、リリースレベルとリリース時間に応じて音がフェードアウトするのに似ています。"
      ],
      "params": {
        "note": "Number: (オプション) リリースをトリガーする MIDI ノート。値が提供されない場合、すべての音符がリリースされます。",
        "secondsFromNow": "Number: (オプション) リリースをトリガーするまでの時間（秒単位）"
      }
    },
    "connect": {
      "description": ["p5.sound / Web Audio オブジェクトに接続します。"],
      "params": {
        "unit": "Object: p5.sound または Web Audio オブジェクト"
      }
    },
    "disconnect": {
      "description": ["すべての出力を切断します。"]
    },
    "dispose": {
      "description": [
        "MonoSynth を取り除き、そのリソース/メモリーを解放します。"
      ]
    }
  }
}
